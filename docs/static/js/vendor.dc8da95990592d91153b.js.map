{"version":3,"sources":["webpack:///static/js/vendor.dc8da95990592d91153b.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vue/dist/vue.esm.js","webpack:///./~/vue-awesome/dist/vue-awesome.js","webpack:///./~/vue-router/dist/vue-router.esm.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","0","module","exports","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","hook","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","concat","1","__webpack_exports__","__webpack_require__","Object","defineProperty","value","global","isUndef","v","undefined","isDef","isTrue","isFalse","isPrimitive","isObject","obj","isPlainObject","_toString","isRegExp","isValidArrayIndex","val","n","parseFloat","Math","floor","isFinite","toString","JSON","stringify","String","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","i","length","toLowerCase","remove","arr","item","index","indexOf","splice","hasOwn","key","hasOwnProperty","cached","fn","cache","bind","ctx","boundFn","a","l","arguments","apply","_length","toArray","start","ret","Array","extend","to","_from","toObject","res","noop","b","c","looseEqual","isObjectA","isObjectB","e","looseIndexOf","once","called","isReserved","charCodeAt","def","enumerable","writable","configurable","parsePath","path","bailRE","test","segments","handleError","err","vm","info","config","errorHandler","inBrowser","console","error","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","push","popTarget","pop","protoAugment","src","keys","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isArray","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","shallow","dep","property","getOwnPropertyDescriptor","getter","get","setter","set","childOb","depend","dependArray","newVal","notify","max","del","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","props","name","camelize","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","update","mergeOptions","child","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","id","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","match","len","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","children","text","elm","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","slice","updateListeners","on","oldOn","remove$$1","cur","old","event","normalizeEvent","capture","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","prototype","normalizeChildren","normalizeArrayChildren","isTextNode","node","nestedIndex","last","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","resolve","reject","reason","then","component","delay","setTimeout","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","el","hydrating","$el","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","$emit","resetSchedulerState","queue","activatedChildren","has","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","nextTick","traverse","seenObjects","clear","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","isRoot","getData","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","keyOrFn","$watch","initProvide","provide","_provided","initInjections","result","resolveInject","forEach","hasSymbol","Reflect","ownKeys","provideKey","source","createFunctionalComponent","mergeProps","_context","d","createElement","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","initRender","renderContext","_c","$createElement","parentData","initInternalComponent","constructor","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","Vue","use","plugin","installedPlugins","_installedPlugins","args","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","current","filter","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","document","window","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","isAsyncPlaceholder","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","join","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","p","charAt","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","m","_","addProp","addAttr","addDirective","arg","addHandler","important","warn","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","number","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","idx","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","next","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","addEventListener","supportsPassive","removeEventListener","updateDOMListeners","isComponentRoot","nativeOn","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","cb","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","s","Number","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","exec","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","html","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","stack","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","all","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest","parse","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","root","currentParent","preserveWhitespace","comments","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","parseInt","wrapListeners","bind$1","wrapData","generate","ast","state","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","shift","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","scope","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","Function","createCompileToFunctionFn","compile","compiled","fnGenErrors","getOuterHTML","outerHTML","container","cloneNode","innerHTML","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","navigator","userAgent","isEdge","isAndroid","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","uid","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","raw","prototypeAccessors","defineProperties","uid$2","expOrFn","deep","user","active","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","tmp","teardown","init","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","util","defineReactive","delete","version","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","isTextInputType","vmodel","model$1","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","clone","platformComponents","decoder","content","encoded","div","regexEscapeRE","open","close","klass$1","style$1","modules$1","directives$1","baseOptions","reduce","he","decode","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","g","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","esc","tab","space","up","right","down","genGuard","stop","prevent","self","ctrl","alt","meta","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","documentElement","3","t","q","head","getElementsByTagName","styleSheet","clazz","role","label","aria-label","x","y","width","height","viewBox","box","icon","paths","polygons","validator","scale","spin","inverse","flip","childrenWidth","childrenHeight","outerScale","normalizedScale","fa-icon","fa-spin","fa-flip-horizontal","fa-flip-vertical","fa-inverse","ratio","fontSize","mounted","register","points","icons","500px","address-book-o","address-book","address-card-o","address-card","adjust","adn","align-center","align-justify","align-left","align-right","amazon","ambulance","american-sign-language-interpreting","anchor","android","angellist","angle-double-down","angle-double-left","angle-double-right","angle-double-up","angle-down","angle-left","angle-right","angle-up","apple","archive","area-chart","arrow-circle-down","arrow-circle-left","arrow-circle-o-down","arrow-circle-o-left","arrow-circle-o-right","arrow-circle-o-up","arrow-circle-right","arrow-circle-up","arrow-down","arrow-left","arrow-right","arrow-up","arrows-alt","arrows-h","arrows-v","arrows","asl-interpreting","assistive-listening-systems","asterisk","at","audio-description","automobile","backward","balance-scale","ban","bandcamp","bank","bar-chart-o","bar-chart","barcode","bars","bath","bathtub","battery-0","battery-1","battery-2","battery-3","battery-4","battery-empty","battery-full","battery-half","battery-quarter","battery-three-quarters","battery","bed","beer","behance-square","behance","bell-o","bell-slash-o","bell-slash","bell","bicycle","binoculars","birthday-cake","bitbucket-square","bitbucket","bitcoin","black-tie","blind","bluetooth-b","bluetooth","bold","bolt","bomb","book","bookmark-o","bookmark","braille","briefcase","btc","bug","building-o","building","bullhorn","bullseye","bus","buysellads","cab","calculator","calendar-check-o","calendar-minus-o","calendar-o","calendar-plus-o","calendar-times-o","calendar","camera-retro","camera","car","caret-down","caret-left","caret-right","caret-square-o-down","caret-square-o-left","caret-square-o-right","caret-square-o-up","caret-up","cart-arrow-down","cart-plus","cc-amex","cc-diners-club","cc-discover","cc-jcb","cc-mastercard","cc-paypal","cc-stripe","cc-visa","cc","certificate","chain-broken","chain","check-circle-o","check-circle","check-square-o","check-square","check","chevron-circle-down","chevron-circle-left","chevron-circle-right","chevron-circle-up","chevron-down","chevron-left","chevron-right","chevron-up","chrome","circle-o-notch","circle-o","circle-thin","circle","clipboard","clock-o","cloud-download","cloud-upload","cloud","cny","code-fork","codepen","codiepie","coffee","cog","cogs","columns","comment-o","commenting-o","commenting","comments-o","compass","compress","connectdevelop","contao","copy","copyright","creative-commons","credit-card-alt","credit-card","crop","crosshairs","css3","cube","cubes","cut","cutlery","dashboard","dashcube","database","deaf","deafness","dedent","delicious","desktop","deviantart","diamond","digg","dollar","dot-circle-o","download","dribbble","drivers-license-o","drivers-license","dropbox","drupal","edge","edit","eercast","eject","ellipsis-h","ellipsis-v","empire","envelope-o","envelope-open-o","envelope-open","envelope-square","envelope","envira","eraser","etsy","eur","euro","exchange","exclamation-circle","exclamation-triangle","exclamation","expand","expeditedssl","external-link-square","external-link","eye-slash","eye","eyedropper","fa","facebook-f","facebook-official","facebook-square","facebook","fast-backward","fast-forward","fax","feed","female","fighter-jet","file-archive-o","file-audio-o","file-code-o","file-excel-o","file-image-o","file-movie-o","file-o","file-pdf-o","file-photo-o","file-picture-o","file-powerpoint-o","file-sound-o","file-text-o","file-text","file-video-o","file-word-o","file-zip-o","file","files-o","film","fire-extinguisher","fire","firefox","first-order","flag-checkered","flag-o","flag","flash","flask","flickr","floppy-o","folder-o","folder-open-o","folder-open","folder","font-awesome","font","fonticons","fort-awesome","forumbee","forward","foursquare","free-code-camp","frown-o","futbol-o","gamepad","gavel","gbp","ge","gear","gears","genderless","get-pocket","gg-circle","gg","gift","git-square","git","github-alt","github-square","github","gitlab","gittip","glass","glide-g","glide","globe","google-plus-circle","google-plus-official","google-plus-square","google-plus","google-wallet","google","graduation-cap","gratipay","grav","group","h-square","hacker-news","hand-grab-o","hand-lizard-o","hand-o-down","hand-o-left","hand-o-right","hand-o-up","hand-paper-o","hand-peace-o","hand-pointer-o","hand-rock-o","hand-scissors-o","hand-spock-o","hand-stop-o","handshake-o","hard-of-hearing","hashtag","hdd-o","header","headphones","heart-o","heart","heartbeat","history","home","hospital-o","hotel","hourglass-1","hourglass-2","hourglass-3","hourglass-end","hourglass-half","hourglass-o","hourglass-start","hourglass","houzz","html5","i-cursor","id-badge","id-card-o","id-card","ils","image","imdb","inbox","indent","industry","info-circle","inr","instagram","institution","internet-explorer","intersex","ioxhost","italic","joomla","jpy","jsfiddle","keyboard-o","krw","language","laptop","lastfm-square","lastfm","leaf","leanpub","legal","lemon-o","level-down","level-up","life-bouy","life-buoy","life-ring","life-saver","lightbulb-o","line-chart","link","linkedin-square","linkedin","linode","linux","list-alt","list-ol","list-ul","location-arrow","lock","long-arrow-down","long-arrow-left","long-arrow-right","long-arrow-up","low-vision","magic","magnet","mail-forward","mail-reply-all","mail-reply","male","map-marker","map-o","map-pin","map-signs","mars-double","mars-stroke-h","mars-stroke-v","mars-stroke","mars","maxcdn","meanpath","medium","medkit","meetup","meh-o","mercury","microchip","microphone-slash","microphone","minus-circle","minus-square-o","minus-square","minus","mixcloud","mobile-phone","mobile","modx","money","moon-o","mortar-board","motorcycle","mouse-pointer","music","navicon","neuter","newspaper-o","object-group","object-ungroup","odnoklassniki-square","odnoklassniki","opencart","openid","opera","optin-monster","outdent","pagelines","paint-brush","paper-plane-o","paper-plane","paperclip","paragraph","paste","pause-circle-o","pause-circle","pause","paw","paypal","pencil-square-o","pencil-square","pencil","percent","phone-square","phone","photo","picture-o","pie-chart","pied-piper-alt","pied-piper-pp","pied-piper","pinterest-p","pinterest-square","pinterest","plane","play-circle-o","play-circle","play","plug","plus-circle","plus-square-o","plus-square","plus","podcast","power-off","print","product-hunt","puzzle-piece","qq","qrcode","question-circle-o","question-circle","question","quora","quote-left","quote-right","ra","random","ravelry","rebel","recycle","reddit-alien","reddit-square","reddit","refresh","registered","renren","reorder","repeat","reply-all","reply","resistance","retweet","rmb","road","rocket","rotate-left","rotate-right","rouble","rss-square","rss","rub","ruble","rupee","s15","safari","save","scissors","scribd","search-minus","search-plus","search","sellsy","send-o","send","server","share-alt-square","share-alt","share-square-o","share-square","share","shekel","sheqel","shield","ship","shirtsinbulk","shopping-bag","shopping-basket","shopping-cart","shower","sign-in","sign-language","sign-out","signal","signing","simplybuilt","sitemap","skyatlas","skype","slack","sliders","slideshare","smile-o","snapchat-ghost","snapchat-square","snapchat","snowflake-o","soccer-ball-o","sort-alpha-asc","sort-alpha-desc","sort-amount-asc","sort-amount-desc","sort-asc","sort-desc","sort-down","sort-numeric-asc","sort-numeric-desc","sort-up","soundcloud","space-shuttle","spinner","spoon","spotify","square-o","stack-exchange","stack-overflow","star-half-empty","star-half-full","star-half-o","star-half","star-o","star","steam-square","steam","step-backward","step-forward","stethoscope","sticky-note-o","sticky-note","stop-circle-o","stop-circle","street-view","strikethrough","stumbleupon-circle","stumbleupon","subscript","subway","suitcase","sun-o","superpowers","superscript","support","table","tablet","tachometer","tags","tasks","taxi","telegram","television","tencent-weibo","terminal","text-height","text-width","th-large","th-list","th","themeisle","thermometer-0","thermometer-1","thermometer-2","thermometer-3","thermometer-4","thermometer-empty","thermometer-full","thermometer-half","thermometer-quarter","thermometer-three-quarters","thermometer","thumb-tack","thumbs-down","thumbs-o-down","thumbs-o-up","thumbs-up","ticket","times-circle-o","times-circle","times-rectangle-o","times-rectangle","times","tint","toggle-down","toggle-left","toggle-off","toggle-on","toggle-right","toggle-up","trademark","train","transgender-alt","transgender","trash-o","trash","trello","tripadvisor","trophy","truck","try","tty","tumblr-square","tumblr","turkish-lira","tv","twitch","twitter-square","twitter","umbrella","underline","undo","universal-access","university","unlink","unlock-alt","unlock","unsorted","upload","usb","usd","user-circle-o","user-circle","user-md","user-o","user-plus","user-secret","user-times","users","vcard-o","vcard","venus-double","venus-mars","venus","viacoin","viadeo-square","viadeo","video-camera","vimeo-square","vimeo","vine","vk","volume-control-phone","volume-down","volume-off","volume-up","warning","wechat","weibo","weixin","whatsapp","wheelchair-alt","wheelchair","wifi","wikipedia-w","window-close-o","window-close","window-maximize","window-minimize","window-restore","windows","won","wordpress","wpbeginner","wpexplorer","wpforms","wrench","xing-square","xing","y-combinator-square","y-combinator","yahoo","yc-square","yc","yelp","yen","yoast","youtube-play","youtube-square","youtube","74","message","isError","resolveProps","route","params","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","parts","stringifyQuery","encode","val2","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","matched","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","findAnchor","installed","_Vue","registerInstance","callVal","registerRouteInstance","_routerRoot","_router","_route","View","Link","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","append","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","offset","prefix","modifier","partial","optional","escapeGroup","escapeString","substr","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","token","TypeError","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","pathToRegexpOptions","caseSensitive","regex","compileRouteRegex","instances","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","position","getScrollPosition","shouldScroll","selector","normalizeOffset","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","toFixed","_key","pushState","url","replaceState","runQueue","step","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","Error","flatten","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","records","reverse","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","getLocation","pathname","checkFallback","ensureSlash","getHash","replaceHash","href","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","ua","Date","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","iterator","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","back","getMatchedComponents","normalizedTo","75","parentId","newStyles","media","sourceMap","part","76","eval","77","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","unescape","mediaQuery","alreadyImportedModules","78","addStylesToDom","domStyle","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","replaceText","cssNode","childNodes","hasDocument","DEBUG","listToStyles","_isProduction","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.dc8da95990592d91153b.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.4.1\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  \"production\" !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  \"production\" !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  \"production\" !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (false) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // keep listeners\n  var listeners = data.on;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.1';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  var isComponentRoot = isDef(vnode.componentOptions);\n  var oldOn = isComponentRoot ? oldVnode.data.nativeOn : oldVnode.data.on;\n  var on = isComponentRoot ? vnode.data.nativeOn : vnode.data.on;\n  if (isUndef(oldOn) && isUndef(on)) {\n    return\n  }\n  on = on || {};\n  oldOn = oldOn || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      if (shouldIgnoreFirstNewline(lastTag, html)) {\n        advance(1);\n      }\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (!el.component && (\n          isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e('\" + (comment.text) + \"')\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(76)))\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,q){ true?module.exports=q(__webpack_require__(1)):\"function\"==typeof define&&define.amd?define([\"vue\"],q):t.VueAwesome=q(t.Vue)}(this,function(t){\"use strict\";t=\"default\"in t?t.default:t,function(){if(document){var t=document.head||document.getElementsByTagName(\"head\")[0],q=document.createElement(\"style\"),h=\" .fa-icon { display: inline-block; fill: currentColor; } .fa-flip-horizontal { transform: scale(-1, 1); } .fa-flip-vertical { transform: scale(1, -1); } .fa-spin { animation: fa-spin 1s 0s infinite linear; } .fa-inverse { color: #fff; } @keyframes fa-spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } \";q.type=\"text/css\",q.styleSheet?q.styleSheet.cssText=h:q.appendChild(document.createTextNode(h)),t.appendChild(q)}}();var q={},h={render:function(){var t=this,q=t.$createElement,h=t._self._c||q;return h(\"svg\",{class:t.clazz,style:t.style,attrs:{version:\"1.1\",role:t.label?\"img\":\"presentation\",\"aria-label\":t.label,x:t.x,y:t.y,width:t.width,height:t.height,viewBox:t.box}},[t._t(\"default\",[t.icon&&t.icon.paths?t._l(t.icon.paths,function(q){return h(\"path\",t._b({},\"path\",q))}):t._e(),t.icon&&t.icon.polygons?t._l(t.icon.polygons,function(q){return h(\"polygon\",t._b({},\"polygon\",q))}):t._e(),t._v(\"\\b\"),t.icon&&t.icon.raw?[h(\"g\",{domProps:{innerHTML:t._s(t.icon.raw)}})]:t._e()])],2)},staticRenderFns:[],name:\"icon\",props:{name:{type:String,validator:function(h){return h?h in q||(t.util.warn('Invalid prop: prop \"icon\" is referring to an unregistered icon \"'+h+'\".\\nPlesase make sure you have imported this icon before using it.',this),!1):null}},scale:[Number,String],spin:Boolean,inverse:Boolean,flip:{validator:function(t){return\"horizontal\"===t||\"vertical\"===t}},label:String},data:function(){return{x:!1,y:!1,childrenWidth:0,childrenHeight:0,outerScale:1}},computed:{normalizedScale:function(){var q=this.scale;return q=void 0===q?1:Number(q),isNaN(q)||q<=0?(t.util.warn('Invalid prop: prop \"scale\" should be a number over 0.',this),this.outerScale):q*this.outerScale},clazz:function(){return{\"fa-icon\":!0,\"fa-spin\":this.spin,\"fa-flip-horizontal\":\"horizontal\"===this.flip,\"fa-flip-vertical\":\"vertical\"===this.flip,\"fa-inverse\":this.inverse}},icon:function(){return this.name?q[this.name]:null},box:function(){return this.icon?\"0 0 \"+this.icon.width+\" \"+this.icon.height:\"0 0 \"+this.width+\" \"+this.height},ratio:function(){if(!this.icon)return 1;var t=this.icon,q=t.width,h=t.height;return Math.max(q,h)/16},width:function(){return this.childrenWidth||this.icon&&this.icon.width/this.ratio*this.normalizedScale||0},height:function(){return this.childrenHeight||this.icon&&this.icon.height/this.ratio*this.normalizedScale||0},style:function(){return 1!==this.normalizedScale&&{fontSize:this.normalizedScale+\"em\"}}},mounted:function(){var t=this;if(!this.icon){this.$children.forEach(function(q){q.outerScale=t.normalizedScale});var q=0,h=0;this.$children.forEach(function(t){q=Math.max(q,t.width),h=Math.max(h,t.height)}),this.childrenWidth=q,this.childrenHeight=h,this.$children.forEach(function(t){t.x=(q-t.width)/2,t.y=(h-t.height)/2})}},register:function(t){for(var h in t){var v=t[h];v.paths||(v.paths=[]),v.d&&v.paths.push({d:v.d}),v.polygons||(v.polygons=[]),v.points&&v.polygons.push({points:v.points}),q[h]=v}},icons:q};return h.register({\"500px\":{width:1536,height:1792,paths:[{d:\"M1401 1547l-6 6q-113 113-259 175-154 64-317 64-165 0-317-64-148-63-259-175-113-112-175-258-42-103-54-189-4-28 48-36 51-8 56 20 1 1 1 4 18 90 46 159 50 124 152 226 98 98 226 152 132 56 276 56 143 0 276-56 128-55 225-152l6-6q10-10 25-6 12 3 33 22 36 37 17 58zM929 932l-66 66 63 63q21 21-7 49-17 17-32 17-10 0-19-10l-62-61-66 66q-5 5-15 5-15 0-31-16l-2-2q-18-15-18-29 0-7 8-17l66-65-66-66q-16-16 14-45 18-18 31-18 6 0 13 5l65 66 65-65q18-17 48 13 27 27 11 44zM1400 989q0 118-46 228-45 105-126 186-80 80-187 126t-228 46-228-46-187-126q-82-82-125-186-15-33-15-40h-1q-9-27 43-44 50-16 60 12 37 99 97 167h1v-339-2q3-136 102-232 105-103 253-103 147 0 251 103t104 249q0 147-104.5 251t-250.5 104q-58 0-112-16-28-11-13-61 16-51 44-43l14 3q14 3 33 6t30 3q104 0 176-71.5t72-174.5q0-101-72-171-71-71-175-71-107 0-178 80-64 72-64 160v413q110 67 242 67 96 0 185-36.5t156-103.5 103.5-155 36.5-183q0-198-141-339-140-140-339-140-200 0-340 140-53 53-77 87l-2 2q-8 11-13 15.5t-21.5 9.5-38.5-3q-21-5-36.5-16.5t-15.5-26.5v-680q0-15 10.5-26.5t27.5-11.5h877q30 0 30 55t-30 55h-811v483h1q40-42 102-84t108-61q109-46 231-46 121 0 228 46t187 126q81 81 126 186 46 112 46 229zM1369 408q9 8 9 18t-5.5 18-16.5 21q-26 26-39 26-9 0-16-7-106-91-207-133-128-56-276-56-133 0-262 49-27 10-45-37-9-25-8-38 3-16 16-20 130-57 299-57 164 0 316 64 137 58 235 152z\"}]}}),h.register({\"address-book-o\":{width:1664,height:1792,paths:[{d:\"M1028 644q0 107-76.5 183t-183.5 76-183.5-76-76.5-183q0-108 76.5-184t183.5-76 183.5 76 76.5 184zM980 864q46 0 82.5 17t60 47.5 39.5 67 24 81 11.5 82.5 3.5 79q0 67-39.5 118.5t-105.5 51.5h-576q-66 0-105.5-51.5t-39.5-118.5q0-48 4.5-93.5t18.5-98.5 36.5-91.5 63-64.5 93.5-26h5q7 4 32 19.5t35.5 21 33 17 37 16 35 9 39.5 4.5 39.5-4.5 35-9 37-16 33-17 35.5-21 32-19.5zM1664 608q0 13-9.5 22.5t-22.5 9.5h-96v128h96q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-96v128h96q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-96v224q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h1216q66 0 113 47t47 113v224h96q13 0 22.5 9.5t9.5 22.5v192zM1408 1632v-1472q0-13-9.5-22.5t-22.5-9.5h-1216q-13 0-22.5 9.5t-9.5 22.5v1472q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5-9.5t9.5-22.5z\"}]}}),h.register({\"address-book\":{width:1664,height:1792,paths:[{d:\"M1201 1238q0-57-5.5-107t-21-100.5-39.5-86-64-58-91-22.5q-6 4-33.5 20.5t-42.5 24.5-40.5 20-49 17-46.5 5-46.5-5-49-17-40.5-20-42.5-24.5-33.5-20.5q-51 0-91 22.5t-64 58-39.5 86-21 100.5-5.5 107q0 73 42 121.5t103 48.5h576q61 0 103-48.5t42-121.5zM1028 644q0-108-76.5-184t-183.5-76-183.5 76-76.5 184q0 107 76.5 183t183.5 76 183.5-76 76.5-183zM1664 1184v192q0 14-9 23t-23 9h-96v224q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h1216q66 0 113 47t47 113v224h96q14 0 23 9t9 23v192q0 14-9 23t-23 9h-96v128h96q14 0 23 9t9 23v192q0 14-9 23t-23 9h-96v128h96q14 0 23 9t9 23z\"}]}}),h.register({\"address-card-o\":{width:2048,height:1792,paths:[{d:\"M1024 1131q0 64-37 106.5t-91 42.5h-512q-54 0-91-42.5t-37-106.5 9-117.5 29.5-103 60.5-78 97-28.5q6 4 30 18t37.5 21.5 35.5 17.5 43 14.5 42 4.5 42-4.5 43-14.5 35.5-17.5 37.5-21.5 30-18q57 0 97 28.5t60.5 78 29.5 103 9 117.5zM867 611q0 94-66.5 160.5t-160.5 66.5-160.5-66.5-66.5-160.5 66.5-160.5 160.5-66.5 160.5 66.5 66.5 160.5zM1792 1056v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1792 804v56q0 15-10.5 25.5t-25.5 10.5h-568q-15 0-25.5-10.5t-10.5-25.5v-56q0-15 10.5-25.5t25.5-10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 544v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1920 1504v-1216q0-13-9.5-22.5t-22.5-9.5h-1728q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h352v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h768v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h352q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"address-card\":{width:2048,height:1792,paths:[{d:\"M1024 1131q0-64-9-117.5t-29.5-103-60.5-78-97-28.5q-6 4-30 18t-37.5 21.5-35.5 17.5-43 14.5-42 4.5-42-4.5-43-14.5-35.5-17.5-37.5-21.5-30-18q-57 0-97 28.5t-60.5 78-29.5 103-9 117.5 37 106.5 91 42.5h512q54 0 91-42.5t37-106.5zM867 611q0-94-66.5-160.5t-160.5-66.5-160.5 66.5-66.5 160.5 66.5 160.5 160.5 66.5 160.5-66.5 66.5-160.5zM1792 1120v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM1792 860v-56q0-15-10.5-25.5t-25.5-10.5h-568q-15 0-25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5-10.5t10.5-25.5zM1792 608v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM2048 288v1216q0 66-47 113t-113 47h-352v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-768v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-352q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({adjust:{width:1536,height:1792,paths:[{d:\"M768 1440v-1088q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({adn:{width:1536,height:1792,paths:[{d:\"M768 622l201 306h-402zM1133 1152h94l-459-691-459 691h94l104-160h522zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"align-center\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1408 960v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zM1664 576v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1280 192v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z\"}]}}),h.register({\"align-justify\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 960v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 576v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 192v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z\"}]}}),h.register({\"align-left\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1408 960v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zM1664 576v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zM1280 192v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({\"align-right\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 960v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zM1792 576v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zM1792 192v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({amazon:{width:1792,height:1792,paths:[{d:\"M1551 1476q15-6 26-3t11 17.5-15 33.5q-13 16-44 43.5t-95.5 68-141 74-188 58-229.5 24.5q-119 0-238-31t-209-76.5-172.5-104-132.5-105-84-87.5q-8-9-10-16.5t1-12 8-7 11.5-2 11.5 4.5q192 117 300 166 389 176 799 90 190-40 391-135zM1758 1361q11 16 2.5 69.5t-28.5 102.5q-34 83-85 124-17 14-26 9t0-24q21-45 44.5-121.5t6.5-98.5q-5-7-15.5-11.5t-27-6-29.5-2.5-35 0-31.5 2-31 3-22.5 2q-6 1-13 1.5t-11 1-8.5 1-7 0.5h-5.5-4.5t-3-0.5-2-1.5l-1.5-3q-6-16 47-40t103-30q46-7 108-1t76 24zM1364 918q0 31 13.5 64t32 58 37.5 46 33 32l13 11-227 224q-40-37-79-75.5t-58-58.5l-19-20q-11-11-25-33-38 59-97.5 102.5t-127.5 63.5-140 23-137.5-21-117.5-65.5-83-113-31-162.5q0-84 28-154t72-116.5 106.5-83 122.5-57 130-34.5 119.5-18.5 99.5-6.5v-127q0-65-21-97-34-53-121-53-6 0-16.5 1t-40.5 12-56 29.5-56 59.5-48 96l-294-27q0-60 22-119t67-113 108-95 151.5-65.5 190.5-24.5q100 0 181 25t129.5 61.5 81 83 45 86 12.5 73.5v589zM692 939q0 86 70 133 66 44 139 22 84-25 114-123 14-45 14-101v-162q-59 2-111 12t-106.5 33.5-87 71-32.5 114.5z\"}]}}),h.register({ambulance:{width:1920,height:1792,paths:[{d:\"M640 1408q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM256 896h384v-256h-158q-14 2-22 9l-195 195q-7 12-9 22v30zM1536 1408q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 736v-192q0-14-9-23t-23-9h-224v-224q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v224h-224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23-9t9-23v-224h224q14 0 23-9t9-23zM1920 192v1152q0 26-19 45t-45 19h-192q0 106-75 181t-181 75-181-75-75-181h-384q0 106-75 181t-181 75-181-75-75-181h-128q-26 0-45-19t-19-45 19-45 45-19v-416q0-26 13-58t32-51l198-198q19-19 51-32t58-13h160v-320q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({\"american-sign-language-interpreting\":{width:2304,height:1792,paths:[{d:\"M1032 960q-59-2-84-55-17-34-48-53.5t-68-19.5q-53 0-90.5 37.5t-37.5 90.5q0 56 36 89l10 8q34 31 82 31 37 0 68-19.5t48-53.5q25-53 84-55zM1600 832q0-56-36-89l-10-8q-34-31-82-31-37 0-68 19.5t-48 53.5q-25 53-84 55 59 2 84 55 17 34 48 53.5t68 19.5q53 0 90.5-37.5t37.5-90.5zM1174 611q-17 35-55 48t-73-4q-62-31-134-31-51 0-99 17 3 0 9.5-0.5t9.5-0.5q92 0 170.5 50t118.5 133q17 36 3.5 73.5t-49.5 54.5q-18 9-39 9 21 0 39 9 36 17 49.5 54.5t-3.5 73.5q-40 83-118.5 133t-170.5 50h-6q-16-2-44-4l-290-27-239 120q-14 7-29 7-40 0-57-35l-160-320q-11-23-4-47.5t29-37.5l209-119 148-267q17-155 91.5-291.5t195.5-236.5q31-25 70.5-21.5t64.5 34.5 21.5 70-34.5 65q-70 59-117 128 123-84 267-101 40-5 71.5 19t35.5 64q5 40-19 71.5t-64 35.5q-84 10-159 55 46-10 99-10 115 0 218 50 36 18 49 55.5t-5 73.5zM2137 451l160 320q11 23 4 47.5t-29 37.5l-209 119-148 267q-17 155-91.5 291.5t-195.5 236.5q-26 22-61 22-45 0-74-35-25-31-21.5-70t34.5-65q70-59 117-128-123 84-267 101-4 1-12 1-36 0-63.5-24t-31.5-60q-5-40 19-71.5t64-35.5q84-10 159-55-46 10-99 10-115 0-218-50-36-18-49-55.5t5-73.5q17-35 55-48t73 4q62 31 134 31 51 0 99-17-3 0-9.5 0.5t-9.5 0.5q-92 0-170.5-50t-118.5-133q-17-36-3.5-73.5t49.5-54.5q18-9 39-9-21 0-39-9-36-17-49.5-54.5t3.5-73.5q40-83 118.5-133t170.5-50h6 1q14 2 42 4l291 27 239-120q14-7 29-7 40 0 57 35z\"}]}}),h.register({anchor:{width:1792,height:1792,paths:[{d:\"M960 256q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1792 1184v352q0 22-20 30-8 2-12 2-12 0-23-9l-93-93q-119 143-318.5 226.5t-429.5 83.5-429.5-83.5-318.5-226.5l-93 93q-9 9-23 9-4 0-12-2-20-8-20-30v-352q0-14 9-23t23-9h352q22 0 30 20 8 19-7 35l-100 100q67 91 189.5 153.5t271.5 82.5v-647h-192q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h192v-163q-58-34-93-92.5t-35-128.5q0-106 75-181t181-75 181 75 75 181q0 70-35 128.5t-93 92.5v163h192q26 0 45 19t19 45v128q0 26-19 45t-45 19h-192v647q149-20 271.5-82.5t189.5-153.5l-100-100q-15-16-7-35 8-20 30-20h352q14 0 23 9t9 23z\"}]}}),h.register({android:{width:1408,height:1792,paths:[{d:\"M493 483q16 0 27.5-11.5t11.5-27.5-11.5-27.5-27.5-11.5-27 11.5-11 27.5 11 27.5 27 11.5zM915 483q16 0 27-11.5t11-27.5-11-27.5-27-11.5-27.5 11.5-11.5 27.5 11.5 27.5 27.5 11.5zM103 667q42 0 72 30t30 72v430q0 43-29.5 73t-72.5 30-73-30-30-73v-430q0-42 30-72t73-30zM1163 686v666q0 46-32 78t-77 32h-75v227q0 43-30 73t-73 30-73-30-30-73v-227h-138v227q0 43-30 73t-73 30q-42 0-72-30t-30-73l-1-227h-74q-46 0-78-32t-32-78v-666h918zM931 281q107 55 171 153.5t64 215.5h-925q0-117 64-215.5t172-153.5l-71-131q-7-13 5-20 13-6 20 6l72 132q95-42 201-42t201 42l72-132q7-12 20-6 12 7 5 20zM1408 769v430q0 43-30 73t-73 30q-42 0-72-30t-30-73v-430q0-43 30-72.5t72-29.5q43 0 73 29.5t30 72.5z\"}]}}),h.register({angellist:{width:1280,height:1792,paths:[{d:\"M953 378l-114 328 117 21q165-451 165-518 0-56-38-56-57 0-130 225zM654 1065l33 88q37-42 71-67l-33-5.5t-38.5-7-32.5-8.5zM362 169q0 98 159 521 17-10 49-10 15 0 75 5l-121-351q-75-220-123-220-19 0-29 17.5t-10 37.5zM283 928q0 36 51.5 119t117.5 153 100 70q14 0 25.5-13t11.5-27q0-24-32-102-13-32-32-72t-47.5-89-61.5-81-62-32q-20 0-45.5 27t-25.5 47zM125 1263q0 41 25 104 59 145 183.5 227t281.5 82q227 0 382-170 152-169 152-427 0-43-1-67t-11.5-62-30.5-56q-56-49-211.5-75.5t-270.5-26.5q-37 0-49 11-12 5-12 35 0 34 21.5 60t55.5 40 77.5 23.5 87.5 11.5 85 4 70 0h23q24 0 40 19 15 19 19 55-28 28-96 54-61 22-93 46-64 46-108.5 114t-44.5 137q0 31 18.5 88.5t18.5 87.5l-3 12q-4 12-4 14-137-10-146-216-8 2-41 2 2 7 2 21 0 53-40.5 89.5t-94.5 36.5q-82 0-166.5-78t-84.5-159q0-34 33-67 52 64 60 76 77 104 133 104 12 0 26.5-8.5t14.5-20.5q0-34-87.5-145t-116.5-111q-43 0-70 44.5t-27 90.5zM11 1272q0-101 42.5-163t136.5-88q-28-74-28-104 0-62 61-123t122-61q29 0 70 15-163-462-163-567 0-80 41-130.5t119-50.5q131 0 325 581 6 17 8 23 6-16 29-79.5t43.5-118.5 54-127.5 64.5-123 70.5-86.5 76.5-36q71 0 112 49t41 122q0 108-159 550 61 15 100.5 46t58.5 78 26 93.5 7 110.5q0 150-47 280t-132 225-211 150-278 55q-111 0-223-42-149-57-258-191.5t-109-286.5z\"}]}}),h.register({\"angle-double-down\":{width:1152,height:1792,paths:[{d:\"M1075 864q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23zM1075 480q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z\"}]}}),h.register({\"angle-double-left\":{width:1024,height:1792,paths:[{d:\"M627 1376q0 13-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23zM1011 1376q0 13-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23z\"}]}}),h.register({\"angle-double-right\":{width:1024,height:1792,paths:[{d:\"M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23zM979 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({\"angle-double-up\":{width:1152,height:1792,paths:[{d:\"M1075 1312q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23zM1075 928q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({\"angle-down\":{width:1152,height:1792,paths:[{d:\"M1075 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z\"}]}}),h.register({\"angle-left\":{width:640,height:1792,paths:[{d:\"M627 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z\"}]}}),h.register({\"angle-right\":{width:640,height:1792,paths:[{d:\"M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({\"angle-up\":{width:1152,height:1792,paths:[{d:\"M1075 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({apple:{width:1408,height:1792,paths:[{d:\"M1393 1215q-39 125-123 250-129 196-257 196-49 0-140-32-86-32-151-32-61 0-142 33-81 34-132 34-152 0-301-259-147-261-147-503 0-228 113-374 113-144 284-144 72 0 177 30 104 30 138 30 45 0 143-34 102-34 173-34 119 0 213 65 52 36 104 100-79 67-114 118-65 94-65 207 0 124 69 223t158 126zM1017 42q0 61-29 136-30 75-93 138-54 54-108 72-37 11-104 17 3-149 78-257 74-107 250-148 1 3 2.5 11t2.5 11q0 4 0.5 10t0.5 10z\"}]}}),h.register({archive:{width:1792,height:1792,paths:[{d:\"M1088 832q0-26-19-45t-45-19h-256q-26 0-45 19t-19 45 19 45 45 19h256q26 0 45-19t19-45zM1664 640v960q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-960q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1728 192v256q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1536q26 0 45 19t19 45z\"}]}}),h.register({\"area-chart\":{width:2048,height:1792,paths:[{d:\"M2048 1536v128h-2048v-1536h128v1408h1920zM1664 512l256 896h-1664v-576l448-576 576 576z\"}]}}),h.register({\"arrow-circle-down\":{width:1536,height:1792,paths:[{d:\"M1284 897q0-27-18-45l-91-91q-18-18-45-18t-45 18l-189 189v-502q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v502l-189-189q-19-19-45-19t-45 19l-91 91q-18 18-18 45t18 45l362 362 91 91q18 18 45 18t45-18l91-91 362-362q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-left\":{width:1536,height:1792,paths:[{d:\"M1280 960v-128q0-26-19-45t-45-19h-502l189-189q19-19 19-45t-19-45l-91-91q-18-18-45-18t-45 18l-362 362-91 91q-18 18-18 45t18 45l91 91 362 362q18 18 45 18t45-18l91-91q18-18 18-45t-18-45l-189-189h502q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-down\":{width:1536,height:1792,paths:[{d:\"M1120 928q0 12-10 24l-319 319q-11 9-23 9t-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-352q0-14 9-23t23-9h192q14 0 23 9t9 23v352h192q14 0 23 9t9 23zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-left\":{width:1536,height:1792,paths:[{d:\"M1152 800v192q0 13-9.5 22.5t-22.5 9.5h-352v192q0 14-9 23t-23 9q-12 0-24-10l-319-319q-9-9-9-23t9-23l320-320q9-9 23-9 13 0 22.5 9.5t9.5 22.5v192h352q13 0 22.5 9.5t9.5 22.5zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-right\":{width:1536,height:1792,paths:[{d:\"M1152 896q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-up\":{width:1536,height:1792,paths:[{d:\"M1118 876q-8 20-30 20h-192v352q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-352h-192q-14 0-23-9t-9-23q0-12 10-24l319-319q11-9 23-9t23 9l320 320q15 16 7 35zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-right\":{width:1536,height:1792,paths:[{d:\"M1285 896q0-27-18-45l-91-91-362-362q-18-18-45-18t-45 18l-91 91q-18 18-18 45t18 45l189 189h-502q-26 0-45 19t-19 45v128q0 26 19 45t45 19h502l-189 189q-19 19-19 45t19 45l91 91q18 18 45 18t45-18l362-362 91-91q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-up\":{width:1536,height:1792,paths:[{d:\"M1284 895q0-27-18-45l-362-362-91-91q-18-18-45-18t-45 18l-91 91-362 362q-18 18-18 45t18 45l91 91q18 18 45 18t45-18l189-189v502q0 26 19 45t45 19h128q26 0 45-19t19-45v-502l189 189q19 19 45 19t45-19l91-91q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-down\":{width:1664,height:1792,paths:[{d:\"M1611 832q0 53-37 90l-651 652q-39 37-91 37-53 0-90-37l-651-652q-38-36-38-90 0-53 38-91l74-75q39-37 91-37 53 0 90 37l294 294v-704q0-52 38-90t90-38h128q52 0 90 38t38 90v704l294-294q37-37 90-37 52 0 91 37l75 75q37 39 37 91z\"}]}}),h.register({\"arrow-left\":{width:1536,height:1792,paths:[{d:\"M1536 896v128q0 53-32.5 90.5t-84.5 37.5h-704l293 294q38 36 38 90t-38 90l-75 76q-37 37-90 37-52 0-91-37l-651-652q-37-37-37-90 0-52 37-91l651-650q38-38 91-38 52 0 90 38l75 74q38 38 38 91t-38 91l-293 293h704q52 0 84.5 37.5t32.5 90.5z\"}]}}),h.register({\"arrow-right\":{width:1536,height:1792,paths:[{d:\"M1472 960q0 54-37 91l-651 651q-39 37-91 37-51 0-90-37l-75-75q-38-38-38-91t38-91l293-293h-704q-52 0-84.5-37.5t-32.5-90.5v-128q0-53 32.5-90.5t84.5-37.5h704l-293-294q-38-36-38-90t38-90l75-75q38-38 90-38 53 0 91 38l651 651q37 35 37 90z\"}]}}),h.register({\"arrow-up\":{width:1664,height:1792,paths:[{d:\"M1611 971q0 51-37 90l-75 75q-38 38-91 38-54 0-90-38l-294-293v704q0 52-37.5 84.5t-90.5 32.5h-128q-53 0-90.5-32.5t-37.5-84.5v-704l-294 293q-36 38-90 38t-90-38l-75-75q-38-38-38-90 0-53 38-91l651-651q35-37 90-37 54 0 91 37l651 651q37 39 37 91z\"}]}}),h.register({\"arrows-alt\":{width:1536,height:1792,paths:[{d:\"M1283 541l-355 355 355 355 144-144q29-31 70-14 39 17 39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355 355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12 0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144 144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19 45v448q0 42-39 59-13 5-25 5-26 0-45-19z\"}]}}),h.register({\"arrows-h\":{width:1792,height:1792,paths:[{d:\"M1792 896q0 26-19 45l-256 256q-19 19-45 19t-45-19-19-45v-128h-1024v128q0 26-19 45t-45 19-45-19l-256-256q-19-19-19-45t19-45l256-256q19-19 45-19t45 19 19 45v128h1024v-128q0-26 19-45t45-19 45 19l256 256q19 19 19 45z\"}]}}),h.register({\"arrows-v\":{width:768,height:1792,paths:[{d:\"M704 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\"}]}}),h.register({arrows:{width:1792,height:1792,paths:[{d:\"M1792 896q0 26-19 45l-256 256q-19 19-45 19t-45-19-19-45v-128h-384v384h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-384h-384v128q0 26-19 45t-45 19-45-19l-256-256q-19-19-19-45t19-45l256-256q19-19 45-19t45 19 19 45v128h384v-384h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45t-19 45-45 19h-128v384h384v-128q0-26 19-45t45-19 45 19l256 256q19 19 19 45z\"}]}}),h.register({\"asl-interpreting\":{width:2304,height:1792,paths:[{d:\"M1032 960q-59-2-84-55-17-34-48-53.5t-68-19.5q-53 0-90.5 37.5t-37.5 90.5q0 56 36 89l10 8q34 31 82 31 37 0 68-19.5t48-53.5q25-53 84-55zM1600 832q0-56-36-89l-10-8q-34-31-82-31-37 0-68 19.5t-48 53.5q-25 53-84 55 59 2 84 55 17 34 48 53.5t68 19.5q53 0 90.5-37.5t37.5-90.5zM1174 611q-17 35-55 48t-73-4q-62-31-134-31-51 0-99 17 3 0 9.5-0.5t9.5-0.5q92 0 170.5 50t118.5 133q17 36 3.5 73.5t-49.5 54.5q-18 9-39 9 21 0 39 9 36 17 49.5 54.5t-3.5 73.5q-40 83-118.5 133t-170.5 50h-6q-16-2-44-4l-290-27-239 120q-14 7-29 7-40 0-57-35l-160-320q-11-23-4-47.5t29-37.5l209-119 148-267q17-155 91.5-291.5t195.5-236.5q31-25 70.5-21.5t64.5 34.5 21.5 70-34.5 65q-70 59-117 128 123-84 267-101 40-5 71.5 19t35.5 64q5 40-19 71.5t-64 35.5q-84 10-159 55 46-10 99-10 115 0 218 50 36 18 49 55.5t-5 73.5zM2137 451l160 320q11 23 4 47.5t-29 37.5l-209 119-148 267q-17 155-91.5 291.5t-195.5 236.5q-26 22-61 22-45 0-74-35-25-31-21.5-70t34.5-65q70-59 117-128-123 84-267 101-4 1-12 1-36 0-63.5-24t-31.5-60q-5-40 19-71.5t64-35.5q84-10 159-55-46 10-99 10-115 0-218-50-36-18-49-55.5t5-73.5q17-35 55-48t73 4q62 31 134 31 51 0 99-17-3 0-9.5 0.5t-9.5 0.5q-92 0-170.5-50t-118.5-133q-17-36-3.5-73.5t49.5-54.5q18-9 39-9-21 0-39-9-36-17-49.5-54.5t3.5-73.5q40-83 118.5-133t170.5-50h6 1q14 2 42 4l291 27 239-120q14-7 29-7 40 0 57 35z\"}]}}),h.register({\"assistive-listening-systems\":{width:1792,height:1792,paths:[{d:\"M128 1728q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM320 1536q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM365 1171l256 256-90 90-256-256zM704 1152q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1411 832q0 59-11.5 108.5t-37.5 93.5-44 67.5-53 64.5q-31 35-45.5 54t-33.5 50-26.5 64-7.5 74q0 159-112.5 271.5t-271.5 112.5q-26 0-45-19t-19-45 19-45 45-19q106 0 181-75t75-181q0-57 11.5-105.5t37-91 43.5-66.5 52-63q40-46 59.5-72t37.5-74.5 18-103.5q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5q0 26-19 45t-45 19-45-19-19-45q0-117 45.5-223.5t123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5zM896 960q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1184 832q0 26-19 45t-45 19-45-19-19-45q0-93-65.5-158.5t-158.5-65.5q-92 0-158 65.5t-66 158.5q0 26-19 45t-45 19-45-19-19-45q0-146 103-249t249-103 249 103 103 249zM1578 543q10 25-1 49t-36 34q-9 4-23 4-19 0-35.5-11t-23.5-30q-68-178-224-295-21-16-25-42t12-47q17-21 43-25t47 12q183 137 266 351zM1788 462q9 25-1.5 49t-35.5 34q-11 4-23 4-44 0-60-41-92-238-297-393-22-16-25.5-42t12.5-47q16-22 42-25.5t47 12.5q235 175 341 449z\"}]}}),h.register({asterisk:{width:1664,height:1792,paths:[{d:\"M1482 1050q46 26 59.5 77.5t-12.5 97.5l-64 110q-26 46-77.5 59.5t-97.5-12.5l-266-153v307q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-307l-266 153q-46 26-97.5 12.5t-77.5-59.5l-64-110q-26-46-12.5-97.5t59.5-77.5l266-154-266-154q-46-26-59.5-77.5t12.5-97.5l64-110q26-46 77.5-59.5t97.5 12.5l266 153v-307q0-52 38-90t90-38h128q52 0 90 38t38 90v307l266-153q46-26 97.5-12.5t77.5 59.5l64 110q26 46 12.5 97.5t-59.5 77.5l-266 154z\"}]}}),h.register({at:{width:1536,height:1792,paths:[{d:\"M972 775q0-108-53.5-169t-147.5-61q-63 0-124 30.5t-110 84.5-79.5 137-30.5 180q0 112 53.5 173t150.5 61q96 0 176-66.5t122.5-166 42.5-203.5zM1536 896q0 111-37 197t-98.5 135-131.5 74.5-145 27.5q-6 0-15.5 0.5t-16.5 0.5q-95 0-142-53-28-33-33-83-52 66-131.5 110t-173.5 44q-161 0-249.5-95.5t-88.5-269.5q0-157 66-290t179-210.5 246-77.5q87 0 155 35.5t106 99.5l2-19 11-56q1-6 5.5-12t9.5-6h118q5 0 13 11 5 5 3 16l-120 614q-5 24-5 48 0 39 12.5 52t44.5 13q28-1 57-5.5t73-24 77-50 57-89.5 24-137q0-292-174-466t-466-174q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51q228 0 405-144 11-9 24-8t21 12l41 49q8 12 7 24-2 13-12 22-102 83-227.5 128t-258.5 45q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q344 0 556 212t212 556z\"}]}}),h.register({\"audio-description\":{width:2304,height:1792,paths:[{d:\"M504 994h171l-1-265zM1530 895q0-87-50.5-140t-146.5-53h-54v388h52q91 0 145-57t54-138zM956 518l1 756q0 14-9.5 24t-23.5 10h-216q-14 0-23.5-10t-9.5-24v-62h-291l-55 81q-10 15-28 15h-267q-21 0-30.5-18t3.5-35l556-757q9-14 27-14h332q14 0 24 10t10 24zM1783 895q0 193-125.5 303t-324.5 110h-270q-14 0-24-10t-10-24v-756q0-14 10-24t24-10h268q200 0 326 109t126 302zM1939 896q0 11-0.5 29t-8 71.5-21.5 102-44.5 108-73.5 102.5h-51q38-45 66.5-104.5t41.5-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-20-91.5-41-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 10.5 70.5zM2123 896q0 11-0.5 29t-8 71.5-21.5 102-45 108-74 102.5h-51q38-45 66.5-104.5t41.5-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-19.5-91.5-40.5-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 10.5 70.5zM2304 896q0 11-0.5 29t-8 71.5-21.5 102-44.5 108-73.5 102.5h-51q38-45 66-104.5t41-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-19.5-91.5-40.5-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 9.5 70.5z\"}]}}),h.register({automobile:{width:2048,height:1792,paths:[{d:\"M480 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM516 768h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1888 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM2048 992v384q0 14-9 23t-23 9h-96v128q0 80-56 136t-136 56-136-56-56-136v-128h-1024v128q0 80-56 136t-136 56-136-56-56-136v-128h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h768q98 0 179 63.5t104 157.5l105 419h28q93 0 158.5 65.5t65.5 158.5z\"}]}}),h.register({backward:{width:1664,height:1792,paths:[{d:\"M1619 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v710q0 26-13 32t-32-13l-710-710q-19-19-19-45t19-45l710-710q19-19 32-13t13 32v710q4-10 13-19z\"}]}}),h.register({\"balance-scale\":{width:2304,height:1792,paths:[{\nd:\"M1728 448l-384 704h768zM448 448l-384 704h768zM1269 256q-14 40-45.5 71.5t-71.5 45.5v1291h608q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1344q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h608v-1291q-40-14-71.5-45.5t-45.5-71.5h-491q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h491q21-57 70-92.5t111-35.5 111 35.5 70 92.5h491q14 0 23 9t9 23v64q0 14-9 23t-23 9h-491zM1088 272q33 0 56.5-23.5t23.5-56.5-23.5-56.5-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5zM2176 1152q0 73-46.5 131t-117.5 91-144.5 49.5-139.5 16.5-139.5-16.5-144.5-49.5-117.5-91-46.5-131q0-11 35-81t92-174.5 107-195.5 102-184 56-100q18-33 56-33t56 33q4 7 56 100t102 184 107 195.5 92 174.5 35 81zM896 1152q0 73-46.5 131t-117.5 91-144.5 49.5-139.5 16.5-139.5-16.5-144.5-49.5-117.5-91-46.5-131q0-11 35-81t92-174.5 107-195.5 102-184 56-100q18-33 56-33t56 33q4 7 56 100t102 184 107 195.5 92 174.5 35 81z\"}]}}),h.register({ban:{width:1536,height:1792,paths:[{d:\"M1312 893q0-161-87-295l-754 753q137 89 297 89 111 0 211.5-43.5t173.5-116.5 116-174.5 43-212.5zM313 1192l755-754q-135-91-300-91-148 0-273 73t-198 199-73 274q0 162 89 299zM1536 893q0 157-61 300t-163.5 246-245 164-298.5 61-298.5-61-245-164-163.5-246-61-300 61-299.5 163.5-245.5 245-164 298.5-61 298.5 61 245 164 163.5 245.5 61 299.5z\"}]}}),h.register({bandcamp:{width:1792,height:1792,paths:[{d:\"M1070 1178l306-564h-654l-306 564h654zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({bank:{width:2048,height:1792,paths:[{d:\"M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z\"}]}}),h.register({\"bar-chart-o\":{width:2048,height:1792,paths:[{d:\"M640 896v512h-256v-512h256zM1024 384v1024h-256v-1024h256zM2048 1536v128h-2048v-1536h128v1408h1920zM1408 640v768h-256v-768h256zM1792 256v1152h-256v-1152h256z\"}]}}),h.register({\"bar-chart\":{width:2048,height:1792,paths:[{d:\"M640 896v512h-256v-512h256zM1024 384v1024h-256v-1024h256zM2048 1536v128h-2048v-1536h128v1408h1920zM1408 640v768h-256v-768h256zM1792 256v1152h-256v-1152h256z\"}]}}),h.register({barcode:{width:1792,height:1792,paths:[{d:\"M63 1536h-63v-1408h63v1408zM126 1535h-32v-1407h32v1407zM220 1535h-31v-1407h31v1407zM377 1535h-31v-1407h31v1407zM534 1535h-62v-1407h62v1407zM660 1535h-31v-1407h31v1407zM723 1535h-31v-1407h31v1407zM786 1535h-31v-1407h31v1407zM943 1535h-63v-1407h63v1407zM1100 1535h-63v-1407h63v1407zM1226 1535h-63v-1407h63v1407zM1352 1535h-63v-1407h63v1407zM1446 1535h-63v-1407h63v1407zM1635 1535h-94v-1407h94v1407zM1698 1535h-32v-1407h32v1407zM1792 1536h-63v-1408h63v1408z\"}]}}),h.register({bars:{width:1536,height:1792,paths:[{d:\"M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({bath:{width:1792,height:1792,paths:[{d:\"M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z\"}]}}),h.register({bathtub:{width:1792,height:1792,paths:[{d:\"M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z\"}]}}),h.register({\"battery-0\":{width:2304,height:1792,paths:[{d:\"M2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-1\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h512v768h-512zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-2\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h896v768h-896zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-3\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h1280v768h-1280zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-4\":{width:2304,height:1792,paths:[{d:\"M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({\"battery-empty\":{width:2304,height:1792,paths:[{d:\"M2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-full\":{width:2304,height:1792,paths:[{d:\"M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({\"battery-half\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h896v768h-896zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-quarter\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h512v768h-512zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-three-quarters\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h1280v768h-1280zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({battery:{width:2304,height:1792,paths:[{d:\"M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({bed:{width:2048,height:1792,paths:[{d:\"M256 1024h1728q26 0 45 19t19 45v448h-256v-256h-1536v256h-256v-1216q0-26 19-45t45-19h128q26 0 45 19t19 45v704zM832 704q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM2048 960v-64q0-159-112.5-271.5t-271.5-112.5h-704q-26 0-45 19t-19 45v384h1152z\"}]}}),h.register({beer:{width:1664,height:1792,paths:[{d:\"M640 896v-384h-256v256q0 53 37.5 90.5t90.5 37.5h128zM1664 1344v192h-1152v-192l128-192h-128q-159 0-271.5-112.5t-112.5-271.5v-320l-64-64 32-128h480l32-128h960l32 192-64 32v800z\"}]}}),h.register({\"behance-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM499 495h-371v787h382q117 0 197-57.5t80-170.5q0-158-143-200 107-52 107-164 0-57-19.5-96.5t-56.5-60.5-79-29.5-97-8.5zM477 813h-176v-184h163q119 0 119 90 0 94-106 94zM486 1148h-185v-217h189q124 0 124 113 0 104-128 104zM1136 1180q-68 0-104-38t-36-107h411q1-10 1-30 0-132-74.5-220.5t-203.5-88.5q-128 0-210 86t-82 216q0 135 79 217t213 82q205 0 267-191h-138q-11 34-47.5 54t-75.5 20zM1126 814q113 0 124 122h-254q4-56 39-89t91-33zM964 548h319v77h-319v-77z\"}]}}),h.register({behance:{width:2048,height:1792,paths:[{d:\"M1848 339h-511v124h511v-124zM1596 765q-90 0-146 52.5t-62 142.5h408q-18-195-200-195zM1612 1350q63 0 122-32t76-87h221q-100 307-427 307-214 0-340.5-132t-126.5-347q0-208 130.5-345.5t336.5-137.5q138 0 240.5 68t153 179 50.5 248q0 17-2 47h-658q0 111 57.5 171.5t166.5 60.5zM277 1300h296q205 0 205-167 0-180-199-180h-302v347zM277 763h281q78 0 123.5-36.5t45.5-113.5q0-144-190-144h-260v294zM0 254h594q87 0 155 14t126.5 47.5 90 96.5 31.5 154q0 181-172 263 114 32 172 115t58 204q0 75-24.5 136.5t-66 103.5-98.5 71-121 42-134 13h-611v-1260z\"}]}}),h.register({\"bell-o\":{width:1792,height:1792,paths:[{d:\"M912 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM246 1408h1300q-266-300-266-832 0-51-24-105t-69-103-121.5-80.5-169.5-31.5-169.5 31.5-121.5 80.5-69 103-24 105q0 532-266 832zM1728 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-181-75-75-181h-448q-52 0-90-38t-38-90q50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 190 28 307 158.5t117 282.5q0 139 19.5 260t50 206 74.5 158.5 85 119.5 91 88z\"}]}}),h.register({\"bell-slash-o\":{width:2048,height:1792,paths:[{d:\"M1040 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM503 1221l877-760q-42-88-132.5-146.5t-223.5-58.5q-93 0-169.5 31.5t-121.5 80.5-69 103-24 105q0 384-137 645zM1856 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-180.5-74.5-75.5-180.5l149-129h757q-166-187-227-459l111-97q61 356 298 556zM1942 16l84 96q8 10 7.5 23.5t-10.5 22.5l-1872 1622q-10 8-23.5 7t-21.5-11l-84-96q-8-10-7.5-23.5t10.5-21.5l186-161q-19-32-19-66 50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 124 18 219 82.5t148 157.5l418-363q10-8 23.5-7t21.5 11z\"}]}}),h.register({\"bell-slash\":{width:2048,height:1792,paths:[{d:\"M1558 852q61 356 298 556 0 52-38 90t-90 38h-448q0 106-75 181t-181 75-180.5-74.5-75.5-180.5zM1024 1712q16 0 16-16t-16-16q-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5zM2026 112q8 10 7.5 23.5t-10.5 22.5l-1872 1622q-10 8-23.5 7t-21.5-11l-84-96q-8-10-7.5-23.5t10.5-21.5l186-161q-19-32-19-66 50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 124 18 219 82.5t148 157.5l418-363q10-8 23.5-7t21.5 11z\"}]}}),h.register({bell:{width:1792,height:1792,paths:[{d:\"M912 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM1728 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-181-75-75-181h-448q-52 0-90-38t-38-90q50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 190 28 307 158.5t117 282.5q0 139 19.5 260t50 206 74.5 158.5 85 119.5 91 88z\"}]}}),h.register({bicycle:{width:2304,height:1792,paths:[{d:\"M762 1152h-314q-40 0-57.5-35t6.5-67l188-251q-65-31-137-31-132 0-226 94t-94 226 94 226 226 94q115 0 203-72.5t111-183.5zM576 1024h186q-18-85-75-148zM1056 1024l288-384h-480l-99 132q105 103 126 252h165zM2176 1088q0-132-94-226t-226-94q-60 0-121 24l174 260q15 23 10 49t-27 40q-15 11-36 11-35 0-53-29l-174-260q-93 95-93 225 0 132 94 226t226 94 226-94 94-226zM2304 1088q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-97 39.5-183.5t109.5-149.5l-65-98-353 469q-18 26-51 26h-197q-23 164-149 274t-294 110q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q114 0 215 55l137-183h-224q-26 0-45-19t-19-45 19-45 45-19h384v128h435l-85-128h-222q-26 0-45-19t-19-45 19-45 45-19h256q33 0 53 28l267 400q91-44 192-44 185 0 316.5 131.5t131.5 316.5z\"}]}}),h.register({binoculars:{width:1792,height:1792,paths:[{d:\"M704 320v768q0 26-19 45t-45 19v576q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-512l249-873q7-23 31-23h424zM1024 320v704h-256v-704h256zM1792 1216v512q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-576q-26 0-45-19t-19-45v-768h424q24 0 31 23zM736 32v224h-352v-224q0-14 9-23t23-9h288q14 0 23 9t9 23zM1408 32v224h-352v-224q0-14 9-23t23-9h288q14 0 23 9t9 23z\"}]}}),h.register({\"birthday-cake\":{width:1792,height:1792,paths:[{d:\"M1792 1408v384h-1792v-384q45 0 85-14t59-27.5 47-37.5q30-27 51.5-38t56.5-11q24 0 44 7t31 15 33 27q29 25 47 38t58 27 86 14q45 0 85-14.5t58-27 48-37.5q21-19 32.5-27t31-15 43.5-7q35 0 56.5 11t51.5 38q28 24 47 37.5t59 27.5 85 14 85-14 59-27.5 47-37.5q30-27 51.5-38t56.5-11q34 0 55.5 11t51.5 38q28 24 47 37.5t59 27.5 85 14zM1792 1088v192q-24 0-44-7t-31-15-33-27q-29-25-47-38t-58-27-85-14q-46 0-86 14t-58 27-47 38q-22 19-33 27t-31 15-44 7q-35 0-56.5-11t-51.5-38q-29-25-47-38t-58-27-86-14q-45 0-85 14.5t-58 27-48 37.5q-21 19-32.5 27t-31 15-43.5 7q-35 0-56.5-11t-51.5-38q-28-24-47-37.5t-59-27.5-85-14q-46 0-86 14t-58 27-47 38q-30 27-51.5 38t-56.5 11v-192q0-80 56-136t136-56h64v-448h256v448h256v-448h256v448h256v-448h256v448h64q80 0 136 56t56 136zM512 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150zM1024 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150zM1536 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150z\"}]}}),h.register({\"bitbucket-square\":{width:1536,height:1792,paths:[{d:\"M848 870q0-43-41-66t-77-1q-43 20-42.5 72.5t43.5 70.5q39 23 81-4t36-72zM928 854q8 66-36 121t-110 61-119-40-56-113q-2-49 25.5-93t72.5-64q70-31 141.5 10t81.5 118zM1100 463q-20 21-53.5 34t-53 16-63.5 8q-155 20-324 0-44-6-63-9.5t-52.5-16-54.5-32.5q13-19 36-31t40-15.5 47-8.5q198-35 408-1 33 5 51 8.5t43 16 39 31.5zM1142 1209q0-7 5.5-26.5t3-32-17.5-16.5q-161 106-365 106t-366-106l-12 6-5 12q26 154 41 210 47 81 204 108 249 46 428-53 34-19 49-51.5t22.5-85.5 12.5-71zM1272 516q9-53-8-75-43-55-155-88-216-63-487-36-132 12-226 46-38 15-59.5 25t-47 34-29.5 54q8 68 19 138t29 171 24 137q1 5 5 31t7 36 12 27 22 28q105 80 284 100 259 28 440-63 24-13 39.5-23t31-29 19.5-40q48-267 80-473zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({bitbucket:{width:1408,height:1792,paths:[{d:\"M815 859q8 63-50.5 101t-111.5 6q-39-17-53.5-58t-0.5-82 52-58q36-18 72.5-12t64 35.5 27.5 67.5zM926 838q-14-107-113-164t-197-13q-63 28-100.5 88.5t-34.5 129.5q4 91 77.5 155t165.5 56q91-8 152-84t50-168zM1165 296q-20-27-56-44.5t-58-22-71-12.5q-291-47-566 2-43 7-66 12t-55 22-50 43q30 28 76 45.5t73.5 22 87.5 11.5q228 29 448 1 63-8 89.5-12t72.5-21.5 75-46.5zM1222 1331q-8 26-15.5 76.5t-14 84-28.5 70-58 56.5q-86 48-189.5 71.5t-202 22-201.5-18.5q-46-8-81.5-18t-76.5-27-73-43.5-52-61.5q-25-96-57-292l6-16 18-9q223 148 506.5 148t507.5-148q21 6 24 23t-5 45-8 37zM1403 370q-26 167-111 655-5 30-27 56t-43.5 40-54.5 31q-252 126-610 88-248-27-394-139-15-12-25.5-26.5t-17-35-9-34-6-39.5-5.5-35q-9-50-26.5-150t-28-161.5-23.5-147.5-22-158q3-26 17.5-48.5t31.5-37.5 45-30 46-22.5 48-18.5q125-46 313-64 379-37 676 50 155 46 215 122 16 20 16.5 51t-5.5 54z\"}]}}),h.register({bitcoin:{width:1280,height:1792,paths:[{d:\"M1167 640q18 182-131 258 117 28 175 103t45 214q-7 71-32.5 125t-64.5 89-97 58.5-121.5 34.5-145.5 15v255h-154v-251q-80 0-122-1v252h-154v-255q-18 0-54-0.5t-55-0.5h-200l31-183h111q50 0 58-51v-402h16q-6-1-16-1v-287q-13-68-89-68h-111v-164l212 1q64 0 97-1v-252h154v247q82-2 122-2v-245h154v252q79 7 140 22.5t113 45 82.5 78 36.5 114.5zM952 1185q0-36-15-64t-37-46-57.5-30.5-65.5-18.5-74-9-69-3-64.5 1-47.5 1v338q8 0 37 0.5t48 0.5 53-1.5 58.5-4 57-8.5 55.5-14 47.5-21 39.5-30 24.5-40 9.5-51zM881 709q0-33-12.5-58.5t-30.5-42-48-28-55-16.5-61.5-8-58-2.5-54 1-39.5 0.5v307q5 0 34.5 0.5t46.5 0 50-2 55-5.5 51.5-11 48.5-18.5 37-27 27-38.5 9-51z\"}]}}),h.register({\"black-tie\":{width:1536,height:1792,paths:[{d:\"M0 128h1536v1536h-1536v-1536zM1085 1243l-221-631 221-297h-634l221 297-221 631 317 304z\"}]}}),h.register({blind:{width:1408,height:1792,paths:[{d:\"M366 311q-64 0-110-45.5t-46-110.5q0-64 46-109.5t110-45.5 109.5 45.5 45.5 109.5q0 65-45.5 110.5t-109.5 45.5zM917 953q0 50-30 67.5t-63.5 6.5-47.5-34l-367-438q-7-12-14-15.5t-11-1.5l-3 3q-7 8 4 21l122 139 1 354-161 457q-67 192-92 234-15 26-28 32-50 26-103 1-29-13-41.5-43t-9.5-57q2-17 197-618l5-416-85 164 35 222q4 24-1 42t-14 27.5-19 16-17 7.5l-7 2q-19 3-34.5-3t-24-16-14-22-7.5-19.5-2-9.5l-46-299 211-381q23-34 113-34 75 0 107 40l424 521q7 5 14 17l3 3-1 1q7 13 7 29zM514 1103q43 113 88.5 225t69.5 168l24 55q36 93 42 125 11 70-36 97-35 22-66 16t-51-22-29-35h-1q-6-16-8-25l-124-351zM1338 1695q31 49 31 57 0 5-3 7-9 5-14.5-0.5t-15.5-26-16-30.5q-114-172-423-661 3 1 7-1t7-4l3-2q11-9 11-17z\"}]}}),h.register({\"bluetooth-b\":{width:1024,height:1792,paths:[{d:\"M596 1423l173-172-173-172v344zM596 713l173-172-173-172v344zM628 896l356 356-539 540v-711l-297 296-108-108 372-373-372-373 108-108 297 296v-711l539 540z\"}]}}),h.register({bluetooth:{width:1536,height:1792,paths:[{d:\"M841 1053l148 148-149 149zM840 442l149 149-148 148zM710 1666l464-464-306-306 306-306-464-464v611l-255-255-93 93 320 321-320 321 93 93 255-255v611zM1429 896q0 209-32 365.5t-87.5 257-140.5 162.5-181.5 86.5-219.5 24.5-219.5-24.5-181.5-86.5-140.5-162.5-87.5-257-32-365.5 32-365.5 87.5-257 140.5-162.5 181.5-86.5 219.5-24.5 219.5 24.5 181.5 86.5 140.5 162.5 87.5 257 32 365.5z\"}]}}),h.register({bold:{width:1408,height:1792,paths:[{d:\"M555 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-0.5 159t-0.5 158q0 8-1 67.5t-0.5 96.5 4.5 83.5 12 66.5zM541 775q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-0.5 80t-0.5 79q0 46 1 69zM0 1664l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5 0.5-34v-35.5-30q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68 0.5t68 0.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z\"}]}}),h.register({bolt:{width:896,height:1792,paths:[{d:\"M885 566q18 20 7 44l-540 1157q-13 25-42 25-4 0-14-2-17-5-25.5-19t-4.5-30l197-808-406 101q-4 1-12 1-18 0-31-11-18-15-13-39l201-825q4-14 16-23t28-9h328q19 0 32 12.5t13 29.5q0 8-5 18l-171 463 396-98q8-2 12-2 19 0 34 15z\"}]}}),h.register({bomb:{width:1792,height:1792,paths:[{d:\"M571 589q-10-25-34-35t-49 0q-108 44-191 127t-127 191q-10 25 0 49t35 34q13 5 24 5 42 0 60-40 34-84 98.5-148.5t148.5-98.5q25-11 35-35t0-49zM1513 233l46 46-244 243 68 68q19 19 19 45.5t-19 45.5l-64 64q89 161 89 343 0 143-55.5 273.5t-150 225-225 150-273.5 55.5-273.5-55.5-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5q182 0 343 89l64-64q19-19 45.5-19t45.5 19l68 68zM1521 177q-10 10-22 10-13 0-23-10l-91-90q-9-10-9-23t9-23q10-9 23-9t23 9l90 91q10 9 10 22.5t-10 22.5zM1751 407q-11 9-23 9t-23-9l-90-91q-10-9-10-22.5t10-22.5q9-10 22.5-10t22.5 10l91 90q9 10 9 23t-9 23zM1792 224q0 14-9 23t-23 9h-96q-14 0-23-9t-9-23 9-23 23-9h96q14 0 23 9t9 23zM1600 32v96q0 14-9 23t-23 9-23-9-9-23v-96q0-14 9-23t23-9 23 9 9 23zM1751 87l-91 90q-10 10-22 10-13 0-23-10-10-9-10-22.5t10-22.5l90-91q10-9 23-9t23 9q9 10 9 23t-9 23z\"}]}}),h.register({book:{width:1664,height:1792,paths:[{d:\"M1639 478q40 57 18 129l-275 906q-19 64-76.5 107.5t-122.5 43.5h-923q-77 0-148.5-53.5t-99.5-131.5q-24-67-2-127 0-4 3-27t4-37q1-8-3-21.5t-3-19.5q2-11 8-21t16.5-23.5 16.5-23.5q23-38 45-91.5t30-91.5q3-10 0.5-30t-0.5-28q3-11 17-28t17-23q21-36 42-92t25-90q1-9-2.5-32t0.5-28q4-13 22-30.5t22-22.5q19-26 42.5-84.5t27.5-96.5q1-8-3-25.5t-2-26.5q2-8 9-18t18-23 17-21q8-12 16.5-30.5t15-35 16-36 19.5-32 26.5-23.5 36-11.5 47.5 5.5l-1 3q38-9 51-9h761q74 0 114 56t18 130l-274 906q-36 119-71.5 153.5t-128.5 34.5h-869q-27 0-38 15-11 16-1 43 24 70 144 70h923q29 0 56-15.5t35-41.5l300-987q7-22 5-57 38 15 59 43zM575 480q-4 13 2 22.5t20 9.5h608q13 0 25.5-9.5t16.5-22.5l21-64q4-13-2-22.5t-20-9.5h-608q-13 0-25.5 9.5t-16.5 22.5zM492 736q-4 13 2 22.5t20 9.5h608q13 0 25.5-9.5t16.5-22.5l21-64q4-13-2-22.5t-20-9.5h-608q-13 0-25.5 9.5t-16.5 22.5z\"}]}}),h.register({\"bookmark-o\":{width:1280,height:1792,paths:[{d:\"M1152 256h-1024v1242l423-406 89-85 89 85 423 406v-1242zM1164 128q23 0 44 9 33 13 52.5 41t19.5 62v1289q0 34-19.5 62t-52.5 41q-19 8-44 8-48 0-83-32l-441-424-441 424q-36 33-83 33-23 0-44-9-33-13-52.5-41t-19.5-62v-1289q0-34 19.5-62t52.5-41q21-9 44-9h1048z\"}]}}),h.register({bookmark:{width:1280,height:1792,paths:[{d:\"M1164 128q23 0 44 9 33 13 52.5 41t19.5 62v1289q0 34-19.5 62t-52.5 41q-19 8-44 8-48 0-83-32l-441-424-441 424q-36 33-83 33-23 0-44-9-33-13-52.5-41t-19.5-62v-1289q0-34 19.5-62t52.5-41q21-9 44-9h1048z\"}]}}),h.register({braille:{width:2176,height:1792,paths:[{d:\"M192 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM704 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM704 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1472 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1472 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 160q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136z\"}]}}),h.register({briefcase:{width:1792,height:1792,paths:[{d:\"M640 256h512v-128h-512v128zM1792 896v480q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-480h672v160q0 26 19 45t45 19h320q26 0 45-19t19-45v-160h672zM1024 896v128h-256v-128h256zM1792 416v384h-1792v-384q0-66 47-113t113-47h352v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h352q66 0 113 47t47 113z\"}]}}),h.register({btc:{width:1280,height:1792,paths:[{d:\"M1167 640q18 182-131 258 117 28 175 103t45 214q-7 71-32.5 125t-64.5 89-97 58.5-121.5 34.5-145.5 15v255h-154v-251q-80 0-122-1v252h-154v-255q-18 0-54-0.5t-55-0.5h-200l31-183h111q50 0 58-51v-402h16q-6-1-16-1v-287q-13-68-89-68h-111v-164l212 1q64 0 97-1v-252h154v247q82-2 122-2v-245h154v252q79 7 140 22.5t113 45 82.5 78 36.5 114.5zM952 1185q0-36-15-64t-37-46-57.5-30.5-65.5-18.5-74-9-69-3-64.5 1-47.5 1v338q8 0 37 0.5t48 0.5 53-1.5 58.5-4 57-8.5 55.5-14 47.5-21 39.5-30 24.5-40 9.5-51zM881 709q0-33-12.5-58.5t-30.5-42-48-28-55-16.5-61.5-8-58-2.5-54 1-39.5 0.5v307q5 0 34.5 0.5t46.5 0 50-2 55-5.5 51.5-11 48.5-18.5 37-27 27-38.5 9-51z\"}]}}),h.register({bug:{width:1664,height:1792,paths:[{d:\"M1632 960q0 26-19 45t-45 19h-224q0 171-67 290l208 209q19 19 19 45t-19 45q-18 19-45 19t-45-19l-198-197q-5 5-15 13t-42 28.5-65 36.5-82 29-97 13v-896h-128v896q-51 0-101.5-13.5t-87-33-66-39-43.5-32.5l-15-14-183 207q-20 21-48 21-24 0-43-16-19-18-20.5-44.5t15.5-46.5l202-227q-58-114-58-274h-224q-26 0-45-19t-19-45 19-45 45-19h224v-294l-173-173q-19-19-19-45t19-45 45-19 45 19l173 173h844l173-173q19-19 45-19t45 19 19 45-19 45l-173 173v294h224q26 0 45 19t19 45zM1152 384h-640q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5z\"}]}}),h.register({\"building-o\":{width:1408,height:1792,paths:[{d:\"M384 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1664h384v-1536h-1152v1536h384v-224q0-13 9.5-22.5t22.5-9.5h320q13 0 22.5 9.5t9.5 22.5v224zM1408 64v1664q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h1280q26 0 45 19t19 45z\"}]}}),h.register({building:{width:1536,height:1792,paths:[{d:\"M1344 0q26 0 45 19t19 45v1664q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h1280zM512 288v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 544v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 800v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 1056v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM384 1376v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 1632v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM896 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 1376v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23z\"}]}}),h.register({bullhorn:{width:1792,height:1792,paths:[{d:\"M1664 640q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5v384q0 52-38 90t-90 38q-417-347-812-380-58 19-91 66t-31 100.5 40 92.5q-20 33-23 65.5t6 58 33.5 55 48 50 61.5 50.5q-29 58-111.5 83t-168.5 11.5-132-55.5q-7-23-29.5-87.5t-32-94.5-23-89-15-101 3.5-98.5 22-110.5h-122q-66 0-113-47t-47-113v-192q0-66 47-113t113-47h480q435 0 896-384 52 0 90 38t38 90v384zM1536 1244v-954q-394 302-768 343v270q377 42 768 341z\"}]}}),h.register({bullseye:{width:1536,height:1792,paths:[{\nd:\"M1024 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1152 896q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM1280 896q0 212-150 362t-362 150-362-150-150-362 150-362 362-150 362 150 150 362zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({bus:{width:1536,height:1792,paths:[{d:\"M384 1216q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1408 1216q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1362 820l-72-384q-5-23-22.5-37.5t-40.5-14.5h-918q-23 0-40.5 14.5t-22.5 37.5l-72 384q-5 30 14 53t49 23h1062q30 0 49-23t14-53zM1136 208q0-20-14-34t-34-14h-640q-20 0-34 14t-14 34 14 34 34 14h640q20 0 34-14t14-34zM1536 933v603h-128v128q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5v-128h-768v128q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5v-128h-128v-603q0-112 25-223l103-454q9-78 97.5-137t230-89 312.5-30 312.5 30 230 89 97.5 137l105 454q23 102 23 223z\"}]}}),h.register({buysellads:{width:1536,height:1792,paths:[{d:\"M915 1086h-294l147-551zM1001 1408h311l-324-1024h-440l-324 1024h311l383-314zM1536 416v960q0 118-85 203t-203 85h-960q-118 0-203-85t-85-203v-960q0-118 85-203t203-85h960q118 0 203 85t85 203z\"}]}}),h.register({cab:{width:2048,height:1792,paths:[{d:\"M1824 896q93 0 158.5 65.5t65.5 158.5v384q0 14-9 23t-23 9h-96v64q0 80-56 136t-136 56-136-56-56-136v-64h-1024v64q0 80-56 136t-136 56-136-56-56-136v-64h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h128v-224q0-14 9-23t23-9h448q14 0 23 9t9 23v224h128q98 0 179 63.5t104 157.5l105 419h28zM320 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM516 896h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1728 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47z\"}]}}),h.register({calculator:{width:1792,height:1792,paths:[{d:\"M384 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1152 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM384 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1152 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1536 1536v-384q0-52-38-90t-90-38-90 38-38 90v384q0 52 38 90t90 38 90-38 38-90zM1152 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1536 448v-256q0-26-19-45t-45-19h-1280q-26 0-45 19t-19 45v256q0 26 19 45t45 19h1280q26 0 45-19t19-45zM1536 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 128v1536q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1536q0-52 38-90t90-38h1408q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-check-o\":{width:1792,height:1792,paths:[{d:\"M1303 964l-512 512q-10 9-23 9t-23-9l-288-288q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l220 220 444-444q10-9 23-9t22 9l46 46q9 9 9 22t-9 23zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-minus-o\":{width:1792,height:1792,paths:[{d:\"M1152 1120v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-o\":{width:1664,height:1792,paths:[{d:\"M128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-plus-o\":{width:1792,height:1792,paths:[{d:\"M1536 256q52 0 90 38t38 90v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128zM1152 160v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM384 160v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM1536 1664v-1024h-1408v1024h1408zM896 1088h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224z\"}]}}),h.register({\"calendar-times-o\":{width:1792,height:1792,paths:[{d:\"M1111 1385l-46 46q-9 9-22 9t-23-9l-188-189-188 189q-10 9-23 9t-22-9l-46-46q-9-9-9-22t9-23l189-188-189-188q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l188 188 188-188q10-9 23-9t22 9l46 46q9 9 9 22t-9 23l-188 188 188 188q9 10 9 23t-9 22zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({calendar:{width:1664,height:1792,paths:[{d:\"M128 1664h288v-288h-288v288zM480 1664h320v-288h-320v288zM128 1312h288v-320h-288v320zM480 1312h320v-320h-320v320zM128 928h288v-288h-288v288zM864 1664h320v-288h-320v288zM480 928h320v-288h-320v288zM1248 1664h288v-288h-288v288zM864 1312h320v-320h-320v320zM512 448v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1248 1312h288v-320h-288v320zM864 928h320v-288h-320v288zM1248 928h288v-288h-288v288zM1280 448v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"camera-retro\":{width:1792,height:1792,paths:[{d:\"M928 832q0-14-9-23t-23-9q-66 0-113 47t-47 113q0 14 9 23t23 9 23-9 9-23q0-40 28-68t68-28q14 0 23-9t9-23zM1152 962q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM128 1536h1536v-128h-1536v128zM1280 962q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM256 320h384v-128h-384v128zM128 512h1536v-118-138h-828l-64 128h-644v128zM1792 256v1280q0 53-37.5 90.5t-90.5 37.5h-1536q-53 0-90.5-37.5t-37.5-90.5v-1280q0-53 37.5-90.5t90.5-37.5h1536q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({camera:{width:1920,height:1792,paths:[{d:\"M960 672q119 0 203.5 84.5t84.5 203.5-84.5 203.5-203.5 84.5-203.5-84.5-84.5-203.5 84.5-203.5 203.5-84.5zM1664 256q106 0 181 75t75 181v896q0 106-75 181t-181 75h-1408q-106 0-181-75t-75-181v-896q0-106 75-181t181-75h224l51-136q19-49 69.5-84.5t103.5-35.5h512q53 0 103.5 35.5t69.5 84.5l51 136h224zM960 1408q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({car:{width:2048,height:1792,paths:[{d:\"M480 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM516 768h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1888 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM2048 992v384q0 14-9 23t-23 9h-96v128q0 80-56 136t-136 56-136-56-56-136v-128h-1024v128q0 80-56 136t-136 56-136-56-56-136v-128h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h768q98 0 179 63.5t104 157.5l105 419h28q93 0 158.5 65.5t65.5 158.5z\"}]}}),h.register({\"caret-down\":{width:1024,height:1792,paths:[{d:\"M1024 704q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"}]}}),h.register({\"caret-left\":{width:640,height:1792,paths:[{d:\"M640 448v896q0 26-19 45t-45 19-45-19l-448-448q-19-19-19-45t19-45l448-448q19-19 45-19t45 19 19 45z\"}]}}),h.register({\"caret-right\":{width:640,height:1792,paths:[{d:\"M576 896q0 26-19 45l-448 448q-19 19-45 19t-45-19-19-45v-896q0-26 19-45t45-19 45 19l448 448q19 19 19 45z\"}]}}),h.register({\"caret-square-o-down\":{width:1536,height:1792,paths:[{d:\"M1145 675q18 35-5 66l-320 448q-19 27-52 27t-52-27l-320-448q-23-31-5-66 17-35 57-35h640q40 0 57 35zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-square-o-left\":{width:1536,height:1792,paths:[{d:\"M1024 576v640q0 26-19 45t-45 19q-20 0-37-12l-448-320q-27-19-27-52t27-52l448-320q17-12 37-12 26 0 45 19t19 45zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-square-o-right\":{width:1536,height:1792,paths:[{d:\"M1088 896q0 33-27 52l-448 320q-31 23-66 5-35-17-35-57v-640q0-40 35-57 35-18 66 5l448 320q27 19 27 52zM1280 1376v-960q0-14-9-23t-23-9h-960q-14 0-23 9t-9 23v960q0 14 9 23t23 9h960q14 0 23-9t9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-square-o-up\":{width:1536,height:1792,paths:[{d:\"M1145 1117q-17 35-57 35h-640q-40 0-57-35-18-35 5-66l320-448q19-27 52-27t52 27l320 448q23 31 5 66zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-up\":{width:1024,height:1792,paths:[{d:\"M1024 1216q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({\"cart-arrow-down\":{width:1664,height:1792,paths:[{d:\"M1280 704q0-26-19-45t-45-19-45 19l-147 146v-293q0-26-19-45t-45-19-45 19-19 45v293l-147-146q-19-19-45-19t-45 19-19 45 19 45l256 256q19 19 45 19t45-19l256-256q19-19 19-45zM640 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1536 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1664 448v512q0 24-16 42.5t-41 21.5l-1044 122q1 7 4.5 21.5t6 26.5 2.5 22q0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-14 11-39.5t29.5-59.5 20.5-38l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t20 15.5 13 24.5 7.5 26.5 5.5 29.5 4.5 25.5h1201q26 0 45 19t19 45z\"}]}}),h.register({\"cart-plus\":{width:1664,height:1792,paths:[{d:\"M1216 704q0-26-19-45t-45-19h-128v-128q0-26-19-45t-45-19-45 19-19 45v128h-128q-26 0-45 19t-19 45 19 45 45 19h128v128q0 26 19 45t45 19 45-19 19-45v-128h128q26 0 45-19t19-45zM640 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1536 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1664 448v512q0 24-16 42.5t-41 21.5l-1044 122q1 7 4.5 21.5t6 26.5 2.5 22q0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-14 11-39.5t29.5-59.5 20.5-38l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t20 15.5 13 24.5 7.5 26.5 5.5 29.5 4.5 25.5h1201q26 0 45 19t19 45z\"}]}}),h.register({\"cc-amex\":{width:2304,height:1792,paths:[{d:\"M119 682h89l-45-108zM740 1208l74-79-70-79h-163v49h142v55h-142v54h159zM898 1130l99 110v-217zM1186 1083q0-33-40-33h-84v69h83q41 0 41-36zM1475 1079q0-29-42-29h-82v61h81q43 0 43-32zM1197 613q0-29-42-29h-82v60h81q43 0 43-31zM1656 682h89l-44-108zM699 527v271h-66v-212l-94 212h-57l-94-212v212h-132l-25-60h-135l-25 60h-70l116-271h96l110 257v-257h106l85 184 77-184h108zM1255 1083q0 20-5.5 35t-14 25-22.5 16.5-26 10-31.5 4.5-31.5 1-32.5-0.5-29.5-0.5v91h-126l-80-90-83 90h-256v-271h260l80 89 82-89h207q109 0 109 89zM964 742v56h-217v-271h217v57h-152v49h148v55h-148v54h152zM2304 1301v229q0 55-38.5 94.5t-93.5 39.5h-2040q-55 0-93.5-39.5t-38.5-94.5v-678h111l25-61h55l25 61h218v-46l19 46h113l20-47v47h541v-99l10-1q10 0 10 14v86h279v-23q23 12 55 18t52.5 6.5 63-0.5 51.5-1l25-61h56l25 61h227v-58l34 58h182v-378h-180v44l-25-44h-185v44l-23-44h-249q-69 0-109 22v-22h-172v22q-24-22-73-22h-628l-43 97-43-97h-198v44l-22-44h-169l-78 179v-391q0-55 38.5-94.5t93.5-39.5h2040q55 0 93.5 39.5t38.5 94.5v678h-120q-51 0-81 22v-22h-177q-55 0-78 22v-22h-316v22q-31-22-87-22h-209v22q-23-22-91-22h-234l-54 58-50-58h-349v378h343l55-59 52 59h211v-89h21q59 0 90-13v102h174v-99h8q8 0 10 2t2 10v87h529q57 0 88-24v24h168q60 0 95-17zM1546 1067q0 23-12 43t-34 29q25 9 34 26t9 46v54h-65v-45q0-33-12-43.5t-46-10.5h-69v99h-65v-271h154q48 0 77 15t29 58zM1269 600q0 24-12.5 44t-33.5 29q26 9 34.5 25.5t8.5 46.5v53h-65q0-9 0.5-26.5t0-25-3-18.5-8.5-16-17.5-8.5-29.5-3.5h-70v98h-64v-271l153 1q49 0 78 14.5t29 57.5zM1798 1209v56h-216v-271h216v56h-151v49h148v55h-148v54zM1372 527v271h-66v-271h66zM2065 1179q0 86-102 86h-126v-58h126q34 0 34-25 0-16-17-21t-41.5-5-49.5-3.5-42-22.5-17-55q0-39 26-60t66-21h130v57h-119q-36 0-36 25 0 16 17.5 20.5t42 4 49 2.5 42 21.5 17.5 54.5zM2304 1129v101q-24 35-88 35h-125v-58h125q33 0 33-25 0-13-12.5-19t-31-5.5-40-2-40-8-31-24-12.5-48.5q0-39 26.5-60t66.5-21h129v57h-118q-36 0-36 25 0 20 29 22t68.5 5 56.5 26zM2139 528v270h-92l-122-203v203h-132l-26-60h-134l-25 60h-75q-129 0-129-133 0-138 133-138h63v59q-7 0-28-1t-28.5-0.5-23 2-21.5 6.5-14.5 13.5-11.5 23-3 33.5q0 38 13.5 58t49.5 20h29l92-213h97l109 256v-256h99l114 188v-188h66z\"}]}}),h.register({\"cc-diners-club\":{width:2304,height:1792,paths:[{d:\"M858 1241v-693q-106 41-172 135.5t-66 211.5 66 211.5 172 134.5zM1362 895q0-117-66-211.5t-172-135.5v694q106-41 172-135.5t66-211.5zM1577 895q0 159-78.5 294t-213.5 213.5-294 78.5q-119 0-227.5-46.5t-187-125-125-187-46.5-227.5q0-159 78.5-294t213.5-213.5 294-78.5 294 78.5 213.5 213.5 78.5 294zM1960 902q0-139-55.5-261.5t-147.5-205.5-213.5-131-252.5-48h-301q-176 0-323.5 81t-235 230-87.5 335q0 171 87 317.5t236 231.5 323 85h301q129 0 251.5-50.5t214.5-135 147.5-202.5 55.5-246zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-discover\":{width:2304,height:1792,paths:[{d:\"M313 777q0 51-36 84-29 26-89 26h-17v-220h17q61 0 89 27 36 31 36 83zM2089 712q0 52-64 52h-19v-101h20q63 0 63 49zM380 777q0-74-50-120.5t-129-46.5h-95v333h95q74 0 119-38 60-51 60-128zM410 943h65v-333h-65v333zM730 842q0-40-20.5-62t-75.5-42q-29-10-39.5-19t-10.5-23q0-16 13.5-26.5t34.5-10.5q29 0 53 27l34-44q-41-37-98-37-44 0-74 27.5t-30 67.5q0 35 18 55.5t64 36.5q37 13 45 19 19 12 19 34 0 20-14 33.5t-36 13.5q-48 0-71-44l-42 40q44 64 115 64 51 0 83-30.5t32-79.5zM1008 932v-77q-37 37-78 37-49 0-80.5-32.5t-31.5-82.5q0-48 31.5-81.5t77.5-33.5q43 0 81 38v-77q-40-20-80-20-74 0-125.5 50.5t-51.5 123.5 51 123.5 125 50.5q42 0 81-19zM2240 1536v-527q-65 40-144.5 84t-237.5 117-329.5 137.5-417.5 134.5-504 118h1569q26 0 45-19t19-45zM1389 779q0-75-53-128t-128-53-128 53-53 128 53 128 128 53 128-53 53-128zM1541 952l144-342h-71l-90 224-89-224h-71l142 342h35zM1714 943h184v-56h-119v-90h115v-56h-115v-74h119v-57h-184v333zM2105 943h80l-105-140q76-16 76-94 0-47-31-73t-87-26h-97v333h65v-133h9zM2304 262v1268q0 56-38.5 95t-93.5 39h-2040q-55 0-93.5-39t-38.5-95v-1268q0-56 38.5-95t93.5-39h2040q55 0 93.5 39t38.5 95z\"}]}}),h.register({\"cc-jcb\":{width:2304,height:1792,paths:[{d:\"M1951 998q0 26-15.5 44.5t-38.5 23.5q-8 2-18 2h-153v-140h153q10 0 18 2 23 5 38.5 23.5t15.5 44.5zM1933 785q0 25-15 42t-38 21q-3 1-15 1h-139v-129h139q3 0 8.5 0.5t6.5 0.5q23 4 38 21.5t15 42.5zM728 949v-308h-228v308q0 58-38 94.5t-105 36.5q-108 0-229-59v112q53 15 121 23t109 9l42 1q328 0 328-217zM1442 1133v-113q-99 52-200 59-108 8-169-41t-61-142 61-142 169-41q101 7 200 58v-112q-48-12-100-19.5t-80-9.5l-28-2q-127-6-218.5 14t-140.5 60-71 88-22 106 22 106 71 88 140.5 60 218.5 14q101-4 208-31zM2176 1018q0-54-43-88.5t-109-39.5v-3q57-8 89-41.5t32-79.5q0-55-41-88t-107-36q-3 0-12-0.5t-14-0.5h-455v510h491q74 0 121.5-36.5t47.5-96.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-mastercard\":{width:2304,height:1792,paths:[{d:\"M1119 341q-128-85-281-85-103 0-197.5 40.5t-162.5 108.5-108.5 162-40.5 197q0 104 40.5 198t108.5 162 162 108.5 198 40.5q153 0 281-85-131-107-178-265.5t0.5-316.5 177.5-265zM1152 365q-126 99-172 249.5t-0.5 300.5 172.5 249q127-99 172.5-249t-0.5-300.5-172-249.5zM1185 341q130 107 177.5 265.5t0.5 317-178 264.5q128 85 281 85 104 0 198-40.5t162-108.5 108.5-162 40.5-198q0-103-40.5-197t-108.5-162-162.5-108.5-197.5-40.5q-153 0-281 85zM1926 1063h7v-3h-17v3h7v17h3v-17zM1955 1080h4v-20h-5l-6 13-6-13h-5v20h3v-15l6 13h4l5-13v15zM1947 1520v2h-2-3v-3h3 2v1zM1947 1529h3l-4-5h2l1-1q1-1 1-3t-1-3l-1-1h-3-6v13h3v-5h1zM685 1461q0-19 11-31t30-12q18 0 29 12.5t11 30.5q0 19-11 31t-29 12q-19 0-30-12t-11-31zM1158 1417q30 0 35 32h-70q5-32 35-32zM1514 1461q0-19 11-31t29-12 29.5 12.5 11.5 30.5q0 19-11 31t-30 12q-18 0-29-12t-11-31zM1786 1461q0-18 11.5-30.5t29.5-12.5 29.5 12.5 11.5 30.5q0 19-11.5 31t-29.5 12-29.5-12.5-11.5-30.5zM1944 1533q-2 0-4-1-1 0-3-2t-2-3q-1-2-1-4 0-3 1-4 0-2 2-4l1-1q2 0 2-1 2-1 4-1 3 0 4 1l4 2 2 4v1q1 2 1 3l-1 1v3t-1 1l-1 2q-2 2-4 2-1 1-4 1zM599 1529h30v-85q0-24-14.5-38.5t-39.5-15.5q-32 0-47 24-14-24-45-24-24 0-39 20v-16h-30v135h30v-75q0-36 33-36 30 0 30 36v75h29v-75q0-36 33-36 30 0 30 36v75zM765 1529h29v-68-67h-29v16q-17-20-43-20-29 0-48 20t-19 51 19 51 48 20q28 0 43-20v17zM943 1488q0-34-47-40l-14-2q-23-4-23-14 0-15 25-15 23 0 43 11l12-24q-22-14-55-14-26 0-41 12t-15 32q0 33 47 39l13 2q24 4 24 14 0 17-31 17-25 0-45-14l-13 23q25 17 58 17 29 0 45.5-12t16.5-32zM1073 1522l-8-25q-13 7-26 7-19 0-19-22v-61h48v-27h-48v-41h-30v41h-28v27h28v61q0 50 47 50 21 0 36-10zM1159 1390q-29 0-48 20t-19 51q0 32 19.5 51.5t49.5 19.5q33 0 55-19l-14-22q-18 15-39 15-34 0-41-33h101v-12q0-32-18-51.5t-46-19.5zM1318 1390q-23 0-35 20v-16h-30v135h30v-76q0-35 29-35 10 0 18 4l9-28q-9-4-21-4zM1348 1461q0 31 19.5 51t52.5 20q29 0 48-16l-14-24q-18 13-35 12-18 0-29.5-12t-11.5-31 11.5-31 29.5-12q19 0 35 12l14-24q-20-16-48-16-33 0-52.5 20t-19.5 51zM1593 1529h30v-68-67h-30v16q-15-20-42-20-29 0-48.5 20t-19.5 51 19.5 51 48.5 20q28 0 42-20v17zM1726 1390q-23 0-35 20v-16h-29v135h29v-76q0-35 29-35 10 0 18 4l9-28q-8-4-21-4zM1866 1529h29v-68-122h-29v71q-15-20-43-20t-47.5 20.5-19.5 50.5 19.5 50.5 47.5 20.5q29 0 43-20v17zM1944 1509l-2 1h-3q-2 1-4 3-3 1-3 4-1 2-1 6 0 3 1 5 0 2 3 4 2 2 4 3t5 1q4 0 6-1 0-1 2-2l2-1q1-1 3-4 1-2 1-5 0-4-1-6-1-1-3-4 0-1-2-2l-2-1q-1 0-3-0.5t-3-0.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-paypal\":{width:2304,height:1792,paths:[{d:\"M745 906q0 37-25.5 61.5t-62.5 24.5q-29 0-46.5-16t-17.5-44q0-37 25-62.5t62-25.5q28 0 46.5 16.5t18.5 45.5zM1530 757q0 42-22 57t-66 15l-32 1 17-107q2-11 13-11h18q22 0 35 2t25 12.5 12 30.5zM1881 906q0 36-25.5 61t-61.5 25q-29 0-47-16t-18-44q0-37 25-62.5t62-25.5q28 0 46.5 16.5t18.5 45.5zM513 735q0-59-38.5-85.5t-100.5-26.5h-160q-19 0-21 19l-65 408q-1 6 3 11t10 5h76q20 0 22-19l18-110q1-8 7-13t15-6.5 17-1.5 19 1 14 1q86 0 135-48.5t49-134.5zM822 1047l41-261q1-6-3-11t-10-5h-76q-14 0-17 33-27-40-95-40-72 0-122.5 54t-50.5 127q0 59 34.5 94t92.5 35q28 0 58-12t48-32q-4 12-4 21 0 16 13 16h69q19 0 22-19zM1269 784q0-5-4-9.5t-9-4.5h-77q-11 0-18 10l-106 156-44-150q-5-16-22-16h-75q-5 0-9 4.5t-4 9.5q0 2 19.5 59t42 123 23.5 70q-82 112-82 120 0 13 13 13h77q11 0 18-10l255-368q2-2 2-7zM1649 735q0-59-38.5-85.5t-100.5-26.5h-159q-20 0-22 19l-65 408q-1 6 3 11t10 5h82q12 0 16-13l18-116q1-8 7-13t15-6.5 17-1.5 19 1 14 1q86 0 135-48.5t49-134.5zM1958 1047l41-261q1-6-3-11t-10-5h-76q-14 0-17 33-26-40-95-40-72 0-122.5 54t-50.5 127q0 59 34.5 94t92.5 35q29 0 59-12t47-32q0 1-2 9t-2 12q0 16 13 16h69q19 0 22-19zM2176 638v-1q0-14-13-14h-74q-11 0-13 11l-65 416-1 2q0 5 4 9.5t10 4.5h66q19 0 21-19zM392 772q-5 35-26 46t-60 11l-33 1 17-107q2-11 13-11h19q40 0 58 11.5t12 48.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-stripe\":{width:2304,height:1792,paths:[{d:\"M1597 903q0 69-21 106-19 35-52 35-23 0-41-9v-224q29-30 57-30 57 0 57 122zM2035 867h-110q6-98 56-98 51 0 54 98zM476 1002q0-59-33-91.5t-101-57.5q-36-13-52-24t-16-25q0-26 38-26 58 0 124 33l18-112q-67-32-149-32-77 0-123 38-48 39-48 109 0 58 32.5 90.5t99.5 56.5q39 14 54.5 25.5t15.5 27.5q0 31-48 31-29 0-70-12.5t-72-30.5l-18 113q72 41 168 41 81 0 129-37 51-41 51-117zM771 787l19-111h-96v-135l-129 21-18 114-46 8-17 103h62v219q0 84 44 120 38 30 111 30 32 0 79-11v-118q-32 7-44 7-42 0-42-50v-197h77zM1087 812v-139q-15-3-28-3-32 0-55.5 16t-33.5 46l-10-56h-131v471h150v-306q26-31 82-31 16 0 26 2zM1124 1147h150v-471h-150v471zM1746 898q0-122-45-179-40-52-111-52-64 0-117 56l-8-47h-132v645l150-25v-151q36 11 68 11 83 0 134-56 61-65 61-202zM1278 550q0-33-23-56t-56-23-56 23-23 56 23 56.5 56 23.5 56-23.5 23-56.5zM2176 907q0-113-48-176-50-64-144-64-96 0-151.5 66t-55.5 180q0 128 63 188 55 55 161 55 101 0 160-40l-16-103q-57 31-128 31-43 0-63-19-23-19-28-66h248q2-14 2-52zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-visa\":{width:2304,height:1792,paths:[{d:\"M1975 990h-138q14-37 66-179l3-9q4-10 10-26t9-26l12 55zM531 925l-58-295q-11-54-75-54h-268l-2 13q311 79 403 336zM710 576l-162 438-17-89q-26-70-85-129.5t-131-88.5l135 510h175l261-641h-176zM849 1218h166l104-642h-166zM1617 592q-69-27-149-27-123 0-201 59t-79 153q-1 102 145 174 48 23 67 41t19 39q0 30-30 46t-69 16q-86 0-156-33l-22-11-23 144q74 34 185 34 130 1 208.5-59t80.5-160q0-106-140-174-49-25-71-42t-22-38q0-22 24.5-38.5t70.5-16.5q70-1 124 24l15 8zM2042 576h-128q-65 0-87 54l-246 588h174l35-96h212q5 22 20 96h154zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({cc:{width:2048,height:1792,paths:[{d:\"M785 1008h207q-14 158-98.5 248.5t-214.5 90.5q-162 0-254.5-116t-92.5-316q0-194 93-311.5t233-117.5q148 0 232 87t97 247h-203q-5-64-35.5-99t-81.5-35q-57 0-88.5 60.5t-31.5 177.5q0 48 5 84t18 69.5 40 51.5 66 18q95 0 109-139zM1497 1008h206q-14 158-98 248.5t-214 90.5q-162 0-254.5-116t-92.5-316q0-194 93-311.5t233-117.5q148 0 232 87t97 247h-204q-4-64-35-99t-81-35q-57 0-88.5 60.5t-31.5 177.5q0 48 5 84t18 69.5 39.5 51.5 65.5 18q49 0 76.5-38t33.5-101zM1856 889q0-207-15.5-307t-60.5-161q-6-8-13.5-14t-21.5-15-16-11q-86-63-697-63-625 0-710 63-5 4-17.5 11.5t-21 14-14.5 14.5q-45 60-60 159.5t-15 308.5q0 208 15 307.5t60 160.5q6 8 15 15t20.5 14 17.5 12q44 33 239.5 49t470.5 16q610 0 697-65 5-4 17-11t20.5-14 13.5-16q46-60 61-159t15-309zM2048 128v1536h-2048v-1536h2048z\"}]}}),h.register({certificate:{width:1536,height:1792,paths:[{d:\"M1376 896l138 135q30 28 20 70-12 41-52 51l-188 48 53 186q12 41-19 70-29 31-70 19l-186-53-48 188q-10 40-51 52-12 2-19 2-31 0-51-22l-135-138-135 138q-28 30-70 20-41-11-51-52l-48-188-186 53q-41 12-70-19-31-29-19-70l53-186-188-48q-40-10-52-51-10-42 20-70l138-135-138-135q-30-28-20-70 12-41 52-51l188-48-53-186q-12-41 19-70 29-31 70-19l186 53 48-188q10-41 51-51 41-12 70 19l135 139 135-139q29-30 70-19 41 10 51 51l48 188 186-53q41-12 70 19 31 29 19 70l-53 186 188 48q40 10 52 51 10 42-20 70z\"}]}}),h.register({\"chain-broken\":{width:1664,height:1792,paths:[{d:\"M439 1271l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zM608 1312v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM384 1088q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zM1031 492l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zM1664 576q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1120 32v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM1527 183l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z\"}]}}),h.register({chain:{width:1664,height:1792,paths:[{d:\"M1456 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zM753 511q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z\"}]}}),h.register({\"check-circle-o\":{width:1536,height:1792,paths:[{d:\"M1171 813l-422 422q-19 19-45 19t-45-19l-294-294q-19-19-19-45t19-45l102-102q19-19 45-19t45 19l147 147 275-275q19-19 45-19t45 19l102 102q19 19 19 45t-19 45zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"check-circle\":{width:1536,height:1792,paths:[{d:\"M1284 734q0-28-18-46l-91-90q-19-19-45-19t-45 19l-408 407-226-226q-19-19-45-19t-45 19l-91 90q-18 18-18 46 0 27 18 45l362 362q19 19 45 19 27 0 46-19l543-543q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"check-square-o\":{width:1664,height:1792,paths:[{d:\"M1408 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zM1639 441l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z\"}]}}),h.register({\"check-square\":{width:1536,height:1792,paths:[{d:\"M685 1299l614-614q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-467 467-211-211q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l358 358q19 19 45 19t45-19zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({check:{width:1792,height:1792,paths:[{d:\"M1671 566q0 40-28 68l-724 724-136 136q-28 28-68 28t-68-28l-136-136-362-362q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295 656-657q28-28 68-28t68 28l136 136q28 28 28 68z\"}]}}),h.register({\"chevron-circle-down\":{width:1536,height:1792,paths:[{d:\"M813 1299l454-454q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-307 307-307-307q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l454 454q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-circle-left\":{width:1536,height:1792,paths:[{d:\"M909 1395l102-102q19-19 19-45t-19-45l-307-307 307-307q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-454 454q-19 19-19 45t19 45l454 454q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-circle-right\":{width:1536,height:1792,paths:[{d:\"M717 1395l454-454q19-19 19-45t-19-45l-454-454q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l307 307-307 307q-19 19-19 45t19 45l102 102q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-circle-up\":{width:1536,height:1792,paths:[{d:\"M1165 1139l102-102q19-19 19-45t-19-45l-454-454q-19-19-45-19t-45 19l-454 454q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l307-307 307 307q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-down\":{width:1792,height:1792,paths:[{d:\"M1683 808l-742 741q-19 19-45 19t-45-19l-742-741q-19-19-19-45.5t19-45.5l166-165q19-19 45-19t45 19l531 531 531-531q19-19 45-19t45 19l166 165q19 19 19 45.5t-19 45.5z\"}]}}),h.register({\"chevron-left\":{width:1280,height:1792,paths:[{d:\"M1171 301l-531 531 531 531q19 19 19 45t-19 45l-166 166q-19 19-45 19t-45-19l-742-742q-19-19-19-45t19-45l742-742q19-19 45-19t45 19l166 166q19 19 19 45t-19 45z\"}]}}),h.register({\"chevron-right\":{width:1280,height:1792,paths:[{d:\"M1107 877l-742 742q-19 19-45 19t-45-19l-166-166q-19-19-19-45t19-45l531-531-531-531q-19-19-19-45t19-45l166-166q19-19 45-19t45 19l742 742q19 19 19 45t-19 45z\"}]}}),h.register({\"chevron-up\":{width:1792,height:1792,paths:[{d:\"M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z\"}]}}),h.register({child:{width:1280,height:1792,paths:[{d:\"M1188 548l-292 292v824q0 46-33 79t-79 33-79-33-33-79v-384h-64v384q0 46-33 79t-79 33-79-33-33-79v-824l-292-292q-28-28-28-68t28-68q29-28 68.5-28t67.5 28l228 228h368l228-228q28-28 68-28t68 28q28 29 28 68.5t-28 67.5zM864 384q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({chrome:{width:1792,height:1792,paths:[{d:\"M893 0q240-2 451 120 232 134 352 372l-742-39q-160-9-294 74.5t-185 229.5l-276-424q128-159 311-245.5t383-87.5zM146 405l337 663q72 143 211 217t293 45l-230 451q-212-33-385-157.5t-272.5-316-99.5-411.5q0-267 146-491zM1732 574q58 150 59.5 310.5t-48.5 306-153 272-246 209.5q-230 133-498 119l405-623q88-131 82.5-290.5t-106.5-277.5zM896 594q125 0 213.5 88.5t88.5 213.5-88.5 213.5-213.5 88.5-213.5-88.5-88.5-213.5 88.5-213.5 213.5-88.5z\"}]}}),h.register({\"circle-o-notch\":{width:1792,height:1792,paths:[{\nd:\"M1760 896q0 176-68.5 336t-184 275.5-275.5 184-336 68.5-336-68.5-275.5-184-184-275.5-68.5-336q0-213 97-398.5t265-305.5 374-151v228q-221 45-366.5 221t-145.5 406q0 130 51 248.5t136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5q0-230-145.5-406t-366.5-221v-228q206 31 374 151t265 305.5 97 398.5z\"}]}}),h.register({\"circle-o\":{width:1536,height:1792,paths:[{d:\"M768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"circle-thin\":{width:1536,height:1792,paths:[{d:\"M768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({circle:{width:1536,height:1792,paths:[{d:\"M1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({clipboard:{width:1792,height:1792,paths:[{d:\"M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zM1024 224v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zM1280 896h299l-299-299v299zM1792 1024v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z\"}]}}),h.register({\"clock-o\":{width:1536,height:1792,paths:[{d:\"M896 544v448q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-352q0-14 9-23t23-9h64q14 0 23 9t9 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({clone:{width:1792,height:1792,paths:[{d:\"M1664 1632v-1088q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5v1088q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5-9.5t9.5-22.5zM1792 544v1088q0 66-47 113t-113 47h-1088q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1088q66 0 113 47t47 113zM1408 160v160h-128v-160q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5v1088q0 13 9.5 22.5t22.5 9.5h160v128h-160q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1088q66 0 113 47t47 113z\"}]}}),h.register({close:{width:1408,height:1792,paths:[{d:\"M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"}]}}),h.register({\"cloud-download\":{width:1920,height:1792,paths:[{d:\"M1280 928q0-14-9-23t-23-9h-224v-352q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v352h-224q-13 0-22.5 9.5t-9.5 22.5q0 14 9 23l352 352q9 9 23 9t23-9l351-351q10-12 10-24zM1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z\"}]}}),h.register({\"cloud-upload\":{width:1920,height:1792,paths:[{d:\"M1280 864q0-14-9-23l-352-352q-9-9-23-9t-23 9l-351 351q-10 12-10 24 0 14 9 23t23 9h224v352q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5v-352h224q13 0 22.5-9.5t9.5-22.5zM1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z\"}]}}),h.register({cloud:{width:1920,height:1792,paths:[{d:\"M1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-132 71-241.5t187-163.5q-2-28-2-43 0-212 150-362t362-150q158 0 286.5 88t187.5 230q70-62 166-62 106 0 181 75t75 181q0 75-41 138 129 30 213 134.5t84 239.5z\"}]}}),h.register({cny:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({\"code-fork\":{width:1024,height:1792,paths:[{d:\"M288 1472q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM288 320q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM928 448q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1024 448q0 52-26 96.5t-70 69.5q-2 287-226 414-67 38-203 81-128 40-169.5 71t-41.5 100v26q44 25 70 69.5t26 96.5q0 80-56 136t-136 56-136-56-56-136q0-52 26-96.5t70-69.5v-820q-44-25-70-69.5t-26-96.5q0-80 56-136t136-56 136 56 56 136q0 52-26 96.5t-70 69.5v497q54-26 154-57 55-17 87.5-29.5t70.5-31 59-39.5 40.5-51 28-69.5 8.5-91.5q-44-25-70-69.5t-26-96.5q0-80 56-136t136-56 136 56 56 136z\"}]}}),h.register({code:{width:1920,height:1792,paths:[{d:\"M617 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zM1208 332l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zM1865 983l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z\"}]}}),h.register({codepen:{width:1792,height:1792,paths:[{d:\"M216 1169l603 402v-359l-334-223zM154 1025l193-129-193-129v258zM973 1571l603-402-269-180-334 223v359zM896 1078l272-182-272-182-272 182zM485 803l334-223v-359l-603 402zM1445 896l193 129v-258zM1307 803l269-180-603-402v359zM1792 623v546q0 41-34 64l-819 546q-21 13-43 13t-43-13l-819-546q-34-23-34-64v-546q0-41 34-64l819-546q21-13 43-13t43 13l819 546q34 23 34 64z\"}]}}),h.register({codiepie:{width:1792,height:1792,paths:[{d:\"M1584 1290l-218-111q-74 120-196.5 189t-263.5 69q-147 0-271-72t-196-196-72-270q0-110 42.5-209.5t115-172 172-115 209.5-42.5q131 0 247.5 60.5t192.5 168.5l215-125q-110-169-286.5-265t-378.5-96q-161 0-308 63t-253 169-169 253-63 308 63 308 169 253 253 169 308 63q213 0 397.5-107t290.5-292zM1030 893l693 352q-116 253-334.5 400t-492.5 147q-182 0-348-71t-286-191-191-286-71-348 71-348 191-286 286-191 348-71q260 0 470.5 133.5t335.5 366.5zM1543 896h-39v160h-96v-352h136q32 0 54.5 20t28.5 48 1 56-27.5 48-57.5 20z\"}]}}),h.register({coffee:{width:1920,height:1792,paths:[{d:\"M1664 640q0-80-56-136t-136-56h-64v384h64q80 0 136-56t56-136zM0 1408h1792q0 106-75 181t-181 75h-1280q-106 0-181-75t-75-181zM1856 640q0 159-112.5 271.5t-271.5 112.5h-64v32q0 92-66 158t-158 66h-704q-92 0-158-66t-66-158v-736q0-26 19-45t45-19h1152q159 0 271.5 112.5t112.5 271.5z\"}]}}),h.register({cog:{width:1536,height:1792,paths:[{d:\"M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1536 787v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z\"}]}}),h.register({cogs:{width:1920,height:1792,paths:[{d:\"M896 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1664 1408q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1664 384q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1280 805v185q0 10-7 19.5t-16 10.5l-155 24q-11 35-32 76 34 48 90 115 7 11 7 20 0 12-7 19-23 30-82.5 89.5t-78.5 59.5q-11 0-21-7l-115-90q-37 19-77 31-11 108-23 155-7 24-30 24h-186q-11 0-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118 89q-7 7-20 7-11 0-21-8-144-133-144-160 0-9 7-19 10-14 41-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5t-7-19.5v-185q0-10 7-19.5t16-10.5l155-24q11-35 32-76-34-48-90-115-7-11-7-20 0-12 7-20 22-30 82-89t79-59q11 0 21 7l115 90q34-18 77-32 11-108 23-154 7-24 30-24h186q11 0 20 7.5t10 17.5l23 153q34 10 75 31l118-89q8-7 20-7 11 0 21 8 144 133 144 160 0 8-7 19-12 16-42 54t-45 60q23 48 34 82l152 23q10 2 17 10.5t7 19.5zM1920 1338v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31zM1920 314v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31z\"}]}}),h.register({columns:{width:1664,height:1792,paths:[{d:\"M160 1536h608v-1152h-640v1120q0 13 9.5 22.5t22.5 9.5zM1536 1504v-1120h-640v1152h608q13 0 22.5-9.5t9.5-22.5zM1664 288v1216q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1344q66 0 113 47t47 113z\"}]}}),h.register({\"comment-o\":{width:1792,height:1792,paths:[{d:\"M896 384q-204 0-381.5 69.5t-282 187.5-104.5 255q0 112 71.5 213.5t201.5 175.5l87 50-27 96q-24 91-70 172 152-63 275-171l43-38 57 6q69 8 130 8 204 0 381.5-69.5t282-187.5 104.5-255-104.5-255-282-187.5-381.5-69.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22h-5q-15 0-27-10.5t-16-27.5v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-174 120-321.5t326-233 450-85.5 450 85.5 326 233 120 321.5z\"}]}}),h.register({comment:{width:1792,height:1792,paths:[{d:\"M1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22-17 2-30.5-9t-17.5-29v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-130 71-248.5t191-204.5 286-136.5 348-50.5q244 0 450 85.5t326 233 120 321.5z\"}]}}),h.register({\"commenting-o\":{width:1792,height:1792,paths:[{d:\"M640 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1024 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM896 384q-204 0-381.5 69.5t-282 187.5-104.5 255q0 112 71.5 213.5t201.5 175.5l87 50-27 96q-24 91-70 172 152-63 275-171l43-38 57 6q69 8 130 8 204 0 381.5-69.5t282-187.5 104.5-255-104.5-255-282-187.5-381.5-69.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22h-5q-15 0-27-10.5t-16-27.5v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-130 71-248.5t191-204.5 286-136.5 348-50.5 348 50.5 286 136.5 191 204.5 71 248.5z\"}]}}),h.register({commenting:{width:1792,height:1792,paths:[{d:\"M640 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1408 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-110 0-211-18-173 173-435 229-52 10-86 13-12 1-22-6t-13-18q-4-15 20-37 5-5 23.5-21.5t25.5-23.5 23.5-25.5 24-31.5 20.5-37 20-48 14.5-57.5 12.5-72.5q-146-90-229.5-216.5t-83.5-269.5q0-174 120-321.5t326-233 450-85.5 450 85.5 326 233 120 321.5z\"}]}}),h.register({\"comments-o\":{width:1792,height:1792,paths:[{d:\"M704 384q-153 0-286 52t-211.5 141-78.5 191q0 82 53 158t149 132l97 56-35 84q34-20 62-39l44-31 53 10q78 14 153 14 153 0 286-52t211.5-141 78.5-191-78.5-191-211.5-141-286-52zM704 256q191 0 353.5 68.5t256.5 186.5 94 257-94 257-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t0.5-6.5 2-6l2.5-5t3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5zM1526 1425q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5t2 6 0.5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230q0 120-71 224.5t-195 176.5z\"}]}}),h.register({comments:{width:1792,height:1792,paths:[{d:\"M1408 768q0 139-94 257t-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t0.5-6.5 2-6l2.5-5t3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5 353.5 68.5 256.5 186.5 94 257zM1792 1024q0 120-71 224.5t-195 176.5q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5t2 6 0.5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230z\"}]}}),h.register({compass:{width:1536,height:1792,paths:[{d:\"M640 1088l256-128-256-128v256zM1024 497v542l-512 256v-542zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({compress:{width:1536,height:1792,paths:[{d:\"M768 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zM1523 288q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z\"}]}}),h.register({connectdevelop:{width:2048,height:1792,paths:[{d:\"M2048 895q0 21-13 36.5t-33 19.5l-205 356q3 9 3 18 0 20-12.5 35.5t-32.5 19.5l-193 337q3 8 3 16 0 23-16.5 40t-40.5 17q-25 0-41-18h-400q-17 20-43 20t-43-20h-399q-17 20-43 20-23 0-40-16.5t-17-40.5q0-8 4-20l-193-335q-20-4-32.5-19.5t-12.5-35.5q0-9 3-18l-206-356q-20-5-32.5-20.5t-12.5-35.5q0-21 13.5-36.5t33.5-19.5l199-344q0-1-0.5-3t-0.5-3q0-36 34-51l209-363q-4-10-4-18 0-24 17-40.5t40-16.5q26 0 44 21h396q16-21 43-21t43 21h398q18-21 44-21 23 0 40 16.5t17 40.5q0 6-4 18l207 358q23 1 39 17.5t16 38.5q0 13-7 27l187 324q19 4 31.5 19.5t12.5 35.5zM1063 1694h389l-342-354h-143l-342 354h360q18-16 39-16t39 16zM112 882q1 4 1 13 0 10-2 15l208 360 15 6 188-199v-347l-187-194q-13 8-29 10zM986 98h-388l190 200 554-200h-280q-16 16-38 16t-38-16zM1689 1310q1-6 5-11l-64-68-17 79h76zM1583 1310l22-105-252-266-296 307 63 64h463zM1495 1678l16-28 65-310h-427l333 343q8-4 13-5zM578 1694h5l342-354h-373v335l4 6q14 5 22 13zM552 1310h402l64-66-309-321-157 166v221zM359 1310h163v-189l-168 177q4 8 5 12zM358 485q0 1 0.5 2t0.5 2q0 16-8 29l171 177v-269zM552 415v311l153 157 297-314-223-236zM556 111l-4 8v264l205-74-191-201q-6 2-10 3zM1447 98h-16l-621 224 213 225zM1023 590l-297 315 311 319 296-307zM688 902l-136-141v284zM1038 1266l-42 44h85zM1374 918l238 251 132-624-3-5-1-1zM1718 518q-8-13-8-29v-2l-216-376q-5-1-13-5l-437 463 310 327zM522 394v-223l-163 282zM522 1340h-163l163 283v-283zM1607 1340l-48 227 130-227h-82zM1729 1270l207-361q-2-10-2-14 0-1 3-16l-171-296-129 612 77 82q5-3 15-7z\"}]}}),h.register({contao:{width:1792,height:1792,paths:[{d:\"M138 128h197q-70 64-126 149-36 56-59 115t-30 125.5-8.5 120 10.5 132 21 126 28 136.5q4 19 6 28 51 238 81 329 57 171 152 275h-272q-48 0-82-34t-34-82v-1304q0-48 34-82t82-34zM1346 128h308q48 0 82 34t34 82v1304q0 48-34 82t-82 34h-178q212-210 196-565l-469 101q-2 45-12 82t-31 72-59.5 59.5-93.5 36.5q-123 26-199-40-32-27-53-61t-51.5-129-64.5-258q-35-163-45.5-263t-5.5-139 23-77q20-41 62.5-73t102.5-45q45-12 83.5-6.5t67 17 54 35 43 48 34.5 56.5l468-100q-68-175-180-287z\"}]}}),h.register({copy:{width:1792,height:1792,paths:[{d:\"M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zM1152 597l-299 299h299v-299zM512 213l-299 299h299v-299zM708 860l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zM1664 1664v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z\"}]}}),h.register({copyright:{width:1536,height:1792,paths:[{d:\"M1150 1074v109q0 50-36.5 89t-94 60.5-118 32.5-117.5 11q-205 0-342.5-139t-137.5-346q0-203 136-339t339-136q34 0 75.5 4.5t93 18 92.5 34 69 56.5 28 81v109q0 16-16 16h-118q-16 0-16-16v-70q0-43-65.5-67.5t-137.5-24.5q-140 0-228.5 91.5t-88.5 237.5q0 151 91.5 249.5t233.5 98.5q68 0 138-24t70-66v-70q0-7 4.5-11.5t10.5-4.5h119q6 0 11 4.5t5 11.5zM768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"creative-commons\":{width:1792,height:1792,paths:[{d:\"M605 1233q153 0 257-104 14-18 3-36l-45-82q-6-13-24-17-16-2-27 11l-4 3q-4 4-11.5 10t-17.5 13.5-23.5 14.5-28.5 13-33.5 9.5-37.5 3.5q-76 0-125-50t-49-127q0-76 48-125.5t122-49.5q37 0 71.5 14t50.5 28l16 14q11 11 26 10 16-2 24-14l53-78q13-20-2-39-3-4-11-12t-30-23.5-48.5-28-67.5-22.5-86-10q-148 0-246 96.5t-98 240.5q0 146 97 241.5t247 95.5zM1235 1233q153 0 257-104 14-18 4-36l-45-82q-8-14-25-17-16-2-27 11l-4 3q-4 4-11.5 10t-17.5 13.5-23.5 14.5-28.5 13-33.5 9.5-37.5 3.5q-76 0-125-50t-49-127q0-76 48-125.5t122-49.5q37 0 71.5 14t50.5 28l16 14q11 11 26 10 16-2 24-14l53-78q13-20-2-39-3-4-11-12t-30-23.5-48.5-28-67.5-22.5-86-10q-147 0-245.5 96.5t-98.5 240.5q0 146 97 241.5t247 95.5zM896 160q-150 0-286 58.5t-234.5 157-157 234.5-58.5 286 58.5 286 157 234.5 234.5 157 286 58.5 286-58.5 234.5-157 157-234.5 58.5-286-58.5-286-157-234.5-234.5-157-286-58.5zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71z\"}]}}),h.register({\"credit-card-alt\":{width:2304,height:1792,paths:[{d:\"M0 1504v-608h2304v608q0 66-47 113t-113 47h-1984q-66 0-113-47t-47-113zM640 1280v128h384v-128h-384zM256 1280v128h256v-128h-256zM2144 128q66 0 113 47t47 113v224h-2304v-224q0-66 47-113t113-47h1984z\"}]}}),h.register({\"credit-card\":{width:1920,height:1792,paths:[{d:\"M1760 128q66 0 113 47t47 113v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600zM160 256q-13 0-22.5 9.5t-9.5 22.5v224h1664v-224q0-13-9.5-22.5t-22.5-9.5h-1600zM1760 1536q13 0 22.5-9.5t9.5-22.5v-608h-1664v608q0 13 9.5 22.5t22.5 9.5h1600zM256 1408v-128h256v128h-256zM640 1408v-128h384v128h-384z\"}]}}),h.register({crop:{width:1664,height:1792,paths:[{d:\"M557 1280h595v-595zM512 1235l595-595h-595v595zM1664 1312v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z\"}]}}),h.register({crosshairs:{width:1536,height:1792,paths:[{d:\"M1197 1024h-109q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26 0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5 112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32 188.5-112.5t112.5-188.5zM1536 832v128q0 26-19 45t-45 19h-143q-37 161-154.5 278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161 154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161 37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\"}]}}),h.register({css3:{width:1792,height:1792,paths:[{d:\"M275 128h1505l-266 1333-804 267-698-267 71-356h297l-29 147 422 161 486-161 68-339h-1208l58-297h1209l38-191h-1208z\"}]}}),h.register({cube:{width:1792,height:1792,paths:[{d:\"M896 1629l640-349v-636l-640 233v752zM832 764l698-254-698-254-698 254zM1664 512v768q0 35-18 65t-49 47l-704 384q-28 16-61 16t-61-16l-704-384q-31-17-49-47t-18-65v-768q0-40 23-73t61-47l704-256q22-8 44-8t44 8l704 256q38 14 61 47t23 73z\"}]}}),h.register({cubes:{width:2304,height:1792,paths:[{d:\"M640 1632l384-192v-314l-384 164v342zM576 1178l404-173-404-173-404 173zM1664 1632l384-192v-314l-384 164v342zM1600 1178l404-173-404-173-404 173zM1152 885l384-165v-266l-384 164v267zM1088 506l441-189-441-189-441 189zM2176 1024v416q0 36-19 67t-52 47l-448 224q-25 14-57 14t-57-14l-448-224q-4-2-7-4-2 2-7 4l-448 224q-25 14-57 14t-57-14l-448-224q-33-16-52-47t-19-67v-416q0-38 21.5-70t56.5-48l434-186v-400q0-38 21.5-70t56.5-48l448-192q23-10 50-10t50 10l448 192q35 16 56.5 48t21.5 70v400l434 186q36 16 57 48t21 70z\"}]}}),h.register({cut:{width:1792,height:1792,paths:[{d:\"M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1260 960l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zM579 700q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zM494 1445q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zM672 832l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zM896 1056l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zM1600 1472l128-64-520-408-177 138q-2 3-13 7z\"}]}}),h.register({cutlery:{width:1408,height:1792,paths:[{d:\"M640 64v640q0 61-35.5 111t-92.5 70v779q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-779q-57-20-92.5-70t-35.5-111v-640q0-26 19-45t45-19 45 19 19 45v416q0 26 19 45t45 19 45-19 19-45v-416q0-26 19-45t45-19 45 19 19 45v416q0 26 19 45t45 19 45-19 19-45v-416q0-26 19-45t45-19 45 19 19 45zM1408 64v1600q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-512h-224q-13 0-22.5-9.5t-9.5-22.5v-800q0-132 94-226t226-94h256q26 0 45 19t19 45z\"}]}}),h.register({dashboard:{width:1792,height:1792,paths:[{d:\"M384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM576 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1004 1185l101-382q6-26-7.5-48.5t-38.5-29.5-48 6.5-30 39.5l-101 382q-60 5-107 43.5t-63 98.5q-20 77 20 146t117 89 146-20 89-117q16-60-6-117t-72-91zM1664 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1472 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 1152q0 261-141 483-19 29-54 29h-1402q-35 0-54-29-141-221-141-483 0-182 71-348t191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({dashcube:{width:1536,height:1792,paths:[{d:\"M0 680q0-131 91.5-226.5t222.5-95.5h742l352-358v1470q0 132-91.5 227t-222.5 95h-780q-131 0-222.5-95t-91.5-227v-790zM1232 1434l-176-180v-425q0-46-32-79t-78-33h-484q-46 0-78 33t-32 79v492q0 46 32.5 79.5t77.5 33.5h770z\"}]}}),h.register({database:{width:1536,height:1792,paths:[{d:\"M768 768q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 1536q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 1152q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 0q208 0 385 34.5t280 93.5 103 128v128q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-128q0-69 103-128t280-93.5 385-34.5z\"}]}}),h.register({deaf:{width:1792,height:1792,paths:[{d:\"M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z\"}]}}),h.register({deafness:{width:1792,height:1792,paths:[{d:\"M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z\"}]}}),h.register({dedent:{width:1792,height:1792,paths:[{d:\"M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({delicious:{width:1536,height:1792,paths:[{d:\"M1472 1376v-480h-704v-704h-480q-93 0-158.5 65.5t-65.5 158.5v480h704v704h480q93 0 158.5-65.5t65.5-158.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({desktop:{width:1920,height:1792,paths:[{d:\"M1792 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 160v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({deviantart:{width:1024,height:1792,paths:[{d:\"M1024 303l-303 582 24 31h279v415h-507l-44 30-142 273-30 30h-301v-303l303-583-24-30h-279v-415h507l44-30 142-273 30-30h301v303z\"}]}}),h.register({diamond:{width:2048,height:1792,paths:[{d:\"M212 768l623 665-300-665h-323zM1024 1540l349-772h-698zM538 640l204-384h-262l-288 384h346zM1213 1433l623-665h-323zM683 640h682l-204-384h-274zM1510 640h346l-288-384h-262zM1651 154l384 512q14 18 13 41.5t-17 40.5l-960 1024q-18 20-47 20t-47-20l-960-1024q-16-17-17-40.5t13-41.5l384-512q18-26 51-26h1152q33 0 51 26z\"}]}}),h.register({digg:{width:2048,height:1792,paths:[{d:\"M328 282h204v983h-532v-697h328v-286zM328 1101v-369h-123v369h123zM614 568v697h205v-697h-205zM614 282v204h205v-204h-205zM901 568h533v942h-533v-163h328v-82h-328v-697zM1229 1101v-369h-123v369h123zM1516 568h532v942h-532v-163h327v-82h-327v-697zM1843 1101v-369h-123v369h123z\"}]}}),h.register({dollar:{width:1024,height:1792,paths:[{d:\"M978 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z\"}]}}),h.register({\"dot-circle-o\":{width:1536,height:1792,paths:[{d:\"M1024 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({download:{width:1664,height:1792,paths:[{d:\"M1280 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 1120v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h465l135 136q58 56 136 56t136-56l136-136h464q40 0 68 28t28 68zM1339 551q17 41-14 70l-448 448q-18 19-45 19t-45-19l-448-448q-31-29-14-70 17-39 59-39h256v-448q0-26 19-45t45-19h256q26 0 45 19t19 45v448h256q42 0 59 39z\"}]}}),h.register({dribbble:{width:1536,height:1792,paths:[{d:\"M1024 1500q-42-241-140-498h-2l-2 1q-16 6-43 16.5t-101 49-137 82-131 114.5-103 148l-15-11q184 150 418 150 132 0 256-52zM839 893q-21-49-53-111-311 93-673 93-1 7-1 21 0 124 44 236.5t124 201.5q50-89 123.5-166.5t142.5-124.5 130.5-81 99.5-48l37-13q4-1 13-3.5t13-4.5zM732 681q-120-213-244-378-138 65-234 186t-128 272q302 0 606-80zM1416 1000q-210-60-409-29 87 239 128 469 111-75 185-189.5t96-250.5zM611 259q-1 0-2 1 1-1 2-1zM1201 404q-185-164-433-164-76 0-155 19 131 170 246 382 69-26 130-60.5t96.5-61.5 65.5-57 37.5-40.5zM1424 889q-3-232-149-410l-1 1q-9 12-19 24.5t-43.5 44.5-71 60.5-100 65-131.5 64.5q25 53 44 95 2 5 6.5 17t7.5 17q36-5 74.5-7t73.5-2 69 1.5 64 4 56.5 5.5 48 6.5 36.5 6 25 4.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"drivers-license-o\":{width:2048,height:1792,paths:[{\nd:\"M896 1212q0 55-31.5 93.5t-75.5 38.5h-426q-44 0-75.5-38.5t-31.5-93.5q0-54 7.5-100.5t24.5-90 51-68.5 81-25q64 64 156 64t156-64q47 0 81 25t51 68.5 24.5 90 7.5 100.5zM768 768q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1184v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1408 928v64q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h320q14 0 23 9t9 23zM1792 928v64q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 672v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1920 1504v-1120h-1792v1120q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"drivers-license\":{width:2048,height:1792,paths:[{d:\"M896 1212q0-54-7.5-100.5t-24.5-90-51-68.5-81-25q-64 64-156 64t-156-64q-47 0-81 25t-51 68.5-24.5 90-7.5 100.5q0 55 31.5 93.5t75.5 38.5h426q44 0 75.5-38.5t31.5-93.5zM768 768q0-80-56-136t-136-56-136 56-56 136 56 136 136 56 136-56 56-136zM1792 1248v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1408 992v-64q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23-9t9-23zM1792 992v-64q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v64q0 14 9 23t23 9h192q14 0 23-9t9-23zM1792 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM128 384h1792v-96q0-14-9-23t-23-9h-1728q-14 0-23 9t-9 23v96zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({dropbox:{width:1792,height:1792,paths:[{d:\"M402 707l494 305-342 285-490-319zM1388 1262v108l-490 293v1l-1-1-1 1v-1l-489-293v-108l147 96 342-284v-2l1 1 1-1v2l343 284zM554 118l342 285-494 304-338-270zM1390 707l338 271-489 319-343-285zM1239 118l489 319-338 270-494-304z\"}]}}),h.register({drupal:{width:1536,height:1792,paths:[{d:\"M1167 1586q-5-19-24-5-30 22-87 39t-131 17q-129 0-193-49-5-4-13-4-11 0-26 12-7 6-7.5 16t7.5 20q34 32 87.5 46t102.5 12.5 99-4.5q41-4 84.5-20.5t65-30 28.5-20.5q12-12 7-29zM1128 1471q-19-47-39-61-23-15-76-15-47 0-71 10-29 12-78 56-26 24-12 44 9 8 17.5 4.5t31.5-23.5q3-2 10.5-8.5t10.5-8.5 10-7 11.5-7 12.5-5 15-4.5 16.5-2.5 20.5-1q27 0 44.5 7.5t23 14.5 13.5 22q10 17 12.5 20t12.5-1q23-12 14-34zM1483 1190q0-22-5-44.5t-16.5-45-34-36.5-52.5-14q-33 0-97 41.5t-129 83.5-101 42q-27 1-63.5-19t-76-49-83.5-58-100-49-111-19q-115 1-197 78.5t-84 178.5q-2 112 74 164 29 20 62.5 28.5t103.5 8.5q57 0 132-32.5t134-71 120-70.5 93-31q26 1 65 31.5t71.5 67 68 67.5 55.5 32q35 3 58.5-14t55.5-63q28-41 42.5-101t14.5-106zM1536 1030q0 164-62 304.5t-166 236-242.5 149.5-290.5 54-293-57.5-247.5-157-170.5-241.5-64-302q0-89 19.5-172.5t49-145.5 70.5-118.5 78.5-94 78.5-69.5 64.5-46.5 42.5-24.5q14-8 51-26.5t54.5-28.5 48-30 60.5-44q36-28 58-72.5t30-125.5q129 155 186 193 44 29 130 68t129 66q21 13 39 25t60.5 46.5 76 70.5 75 95 69 122 47 148.5 19.5 177.5z\"}]}}),h.register({edge:{width:1792,height:1792,paths:[{d:\"M69 795h1q16-126 58.5-241.5t115-217 167.5-176 223.5-117.5 276.5-43q231 0 414 105.5t294 303.5q104 187 104 442v188h-1125q1 111 53.5 192.5t136.5 122.5 189.5 57 213 3 208-46.5 173.5-84.5v377q-92 55-229.5 92t-312.5 38-316-53q-189-73-311.5-249t-124.5-372q-3-242 111-412t325-268q-48 60-78 125.5t-46 159.5h635q8-77-8-140t-47-101.5-70.5-66.5-80.5-41-75-20.5-56-8.5l-22-1q-135 5-259.5 44.5t-223.5 104.5-176 140.5-138 163.5z\"}]}}),h.register({edit:{width:1792,height:1792,paths:[{d:\"M888 1184l116-116-152-152-116 116v56h96v96h56zM1328 464q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zM1408 1058v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zM1312 320l288 288-672 672h-288v-288zM1756 452l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z\"}]}}),h.register({eercast:{width:1792,height:1792,paths:[{d:\"M1341 784q29-44-6.5-129.5t-121.5-142.5q-58-39-125.5-53.5t-118-4.5-68.5 37q-12 23-4.5 28t42.5 10q23 3 38.5 5t44.5 9.5 56 17.5q36 13 67.5 31.5t53 37 40 38.5 30.5 38 22 34.5 16.5 28.5 12 18.5 10.5 6 11-9.5zM1704 1358q-52 127-148.5 220t-214.5 141.5-253 60.5-266-13.5-251-91-210-161.5-141.5-235.5-46.5-303.5q1-41 8.5-84.5t12.5-64 24-80.5 23-73q-51 208 1 397t173 318 291 206 346 83 349-74.5 289-244.5q20-27 18-14 0 4-4 14zM1465 909q0 104-40.5 199t-108.5 164-162 109.5-198 40.5-198-40.5-162-109.5-108.5-164-40.5-199 40.5-199 108.5-164 162-109.5 198-40.5 198 40.5 162 109.5 108.5 164 40.5 199zM1752 621q-65-147-180.5-251t-253-153.5-292-53.5-301 36.5-275.5 129-220 211.5-131 297-10 373q-49-161-51.5-311.5t35.5-272.5 109-227 165.5-180.5 207-126 232-71 242.5-9 236 54 216 124.5 178 197q33 50 62 121t31 112zM1690 963q12-244-136.5-416t-396.5-240q-8 0-10-5t24-8q125 4 230 50t173 120 116 168.5 58.5 199-1 208-61.5 197.5-122.5 167-185 117.5-248.5 46.5q108-30 201.5-80t174-123 129.5-176.5 55-225.5z\"}]}}),h.register({eject:{width:1538,height:1792,paths:[{d:\"M14 979l710-710q19-19 45-19t45 19l710 710q19 19 13 32t-32 13h-1472q-26 0-32-13t13-32zM1473 1536h-1408q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1408q26 0 45 19t19 45v256q0 26-19 45t-45 19z\"}]}}),h.register({\"ellipsis-h\":{width:1408,height:1792,paths:[{d:\"M384 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM896 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM1408 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68z\"}]}}),h.register({\"ellipsis-v\":{width:384,height:1792,paths:[{d:\"M384 1248v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM384 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM384 224v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68z\"}]}}),h.register({empire:{width:1792,height:1792,paths:[{d:\"M874 1638v66q-208-6-385-109.5t-283-275.5l58-34q29 49 73 99l65-57q148 168 368 212l-17 86q65 12 121 13zM276 1108l-83 28q22 60 49 112l-57 33q-98-180-98-385t98-385l57 33q-30 56-49 112l82 28q-35 100-35 212 0 109 36 212zM1528 1285l58 34q-106 172-283 275.5t-385 109.5v-66q56-1 121-13l-17-86q220-44 368-212l65 57q44-50 73-99zM1377 731l-233 80q14 42 14 85t-14 85l232 80q-31 92-98 169l-185-162q-57 67-147 85l48 241q-52 10-98 10t-98-10l48-241q-90-18-147-85l-185 162q-67-77-98-169l232-80q-14-42-14-85t14-85l-233-80q33-93 99-169l185 162q59-68 147-86l-48-240q44-10 98-10t98 10l-48 240q88 18 147 86l185-162q66 76 99 169zM874 88v66q-65 2-121 13l17 86q-220 42-368 211l-65-56q-38 42-73 98l-57-33q106-172 282-275.5t385-109.5zM1705 896q0 205-98 385l-57-33q27-52 49-112l-83-28q36-103 36-212 0-112-35-212l82-28q-19-56-49-112l57-33q98 180 98 385zM1585 473l-57 33q-35-56-73-98l-65 56q-148-169-368-211l17-86q-56-11-121-13v-66q209 6 385 109.5t282 275.5zM1748 896q0-173-67.5-331t-181.5-272-272-181.5-331-67.5-331 67.5-272 181.5-181.5 272-67.5 331 67.5 331 181.5 272 272 181.5 331 67.5 331-67.5 272-181.5 181.5-272 67.5-331zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({\"envelope-o\":{width:1792,height:1792,paths:[{d:\"M1664 1504v-768q-32 36-69 66-268 206-426 338-51 43-83 67t-86.5 48.5-102.5 24.5h-1-1q-48 0-102.5-24.5t-86.5-48.5-83-67q-158-132-426-338-37-30-69-66v768q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1664 453v-11-13.5t-0.5-13-3-12.5-5.5-9-9-7.5-14-2.5h-1472q-13 0-22.5 9.5t-9.5 22.5q0 168 147 284 193 152 401 317 6 5 35 29.5t46 37.5 44.5 31.5 50.5 27.5 43 9h1 1q20 0 43-9t50.5-27.5 44.5-31.5 46-37.5 35-29.5q208-165 401-317 54-43 100.5-115.5t46.5-131.5zM1792 416v1088q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"envelope-open-o\":{width:1792,height:1792,paths:[{d:\"M1474 913l39 51q8 11 6.5 23.5t-11.5 20.5q-43 34-126.5 98.5t-146.5 113-67 51.5q-39 32-60 48t-60.5 41-76.5 36.5-74 11.5h-1-1q-37 0-74-11.5t-76-36.5-61-41.5-60-47.5q-5-4-65-50.5t-143.5-111-122.5-94.5q-11-8-12.5-20.5t6.5-23.5l37-52q8-11 21.5-13t24.5 7q94 73 306 236 5 4 43.5 35t60.5 46.5 56.5 32.5 58.5 17h1 1q24 0 58.5-17t56.5-32.5 60.5-46.5 43.5-35q258-198 313-242 11-8 24-6.5t21 12.5zM1664 1632v-928q-90-83-159-139-91-74-389-304-3-2-43-35t-61-48-56-32.5-59-17.5h-1-1q-24 0-59 17.5t-56 32.5-61 48-43 35q-215 166-315.5 245.5t-129.5 104-82 74.5q-14 12-21 19v928q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1792 704v928q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-928q0-56 41-94 123-114 350-290.5t233-181.5q36-30 59-47.5t61.5-42 76-36.5 74.5-12h1 1q37 0 74.5 12t76 36.5 61.5 42 59 47.5q43 36 156 122t226 177 201 173q41 38 41 94z\"}]}}),h.register({\"envelope-open\":{width:1792,height:1792,paths:[{d:\"M1792 654v978q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-978q0-15 11-24 8-7 39-34.5t41.5-36 45.5-37.5 70-55.5 96-73 143.5-107 192.5-140.5q5-4 52.5-40t71.5-52.5 64-35 69-18.5 69 18.5 65 35.5 71 52 52 40q110 80 192.5 140.5t143.5 107 96 73 70 55.5 45.5 37.5 41.5 36 39 34.5q11 9 11 24zM1228 1239q263-191 345-252 11-8 12.5-20.5t-6.5-23.5l-38-52q-8-11-21-12.5t-24 6.5q-231 169-343 250-5 3-52 39t-71.5 52.5-64.5 35-69 18.5-69-18.5-64.5-35-71.5-52.5-52-39q-186-134-343-250-11-8-24-6.5t-21 12.5l-38 52q-8 11-6.5 23.5t12.5 20.5q82 61 345 252 10 8 50 38t65 47 64 39.5 77.5 33.5 75.5 11 75.5-11 79-34.5 64.5-39.5 65-47.5 48-36.5z\"}]}}),h.register({\"envelope-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM1280 1184v-436q-31 35-64 55-34 22-132.5 85t-151.5 99q-98 69-164 69v0 0q-66 0-164-69-47-32-142-92.5t-142-92.5q-12-8-33-27t-31-27v436q0 40 28 68t68 28h832q40 0 68-28t28-68zM1280 611q0-41-27.5-70t-68.5-29h-832q-40 0-68 28t-28 68q0 37 30.5 76.5t67.5 64.5q47 32 137.5 89t129.5 83q3 2 17 11.5t21 14 21 13 23.5 13 21.5 9.5 22.5 7.5 20.5 2.5 20.5-2.5 22.5-7.5 21.5-9.5 23.5-13 21-13 21-14 17-11.5l267-174q35-23 66.5-62.5t31.5-73.5z\"}]}}),h.register({envelope:{width:1792,height:1792,paths:[{d:\"M1792 710v794q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-794q44 49 101 87 362 246 497 345 57 42 92.5 65.5t94.5 48 110 24.5h1 1q51 0 110-24.5t94.5-48 92.5-65.5q170-123 498-345 57-39 100-87zM1792 416q0 79-49 151t-122 123q-376 261-468 325-10 7-42.5 30.5t-54 38-52 32.5-57.5 27-50 9h-1-1q-23 0-50-9t-57.5-27-52-32.5-54-38-42.5-30.5q-91-64-262-182.5t-205-142.5q-62-42-117-115.5t-55-136.5q0-78 41.5-130t118.5-52h1472q65 0 112.5 47t47.5 113z\"}]}}),h.register({envira:{width:1792,height:1792,paths:[{d:\"M896 816q-104-196-160-278-139-202-347-318-34-19-70-36-89-40-94-32t34 38l39 31q62 43 112.5 93.5t94.5 116.5 70.5 113 70.5 131q9 17 13 25 44 84 84 153t98 154 115.5 150 131 123.5 148.5 90.5q153 66 154 60 1-3-49-37-53-36-81-57-77-58-179-211t-185-310zM549 1359q-76-60-132.5-125t-98-143.5-71-154.5-58.5-186-52-209-60.5-252-76.5-289q273 0 497.5 36t379 92 271 144.5 185.5 172.5 110 198.5 56 199.5 12.5 198.5-9.5 173-20 143.5-13 107l323 327h-104l-281-285q-22 2-91.5 14t-121.5 19-138 6-160.5-17-167.5-59-179-111z\"}]}}),h.register({eraser:{width:1920,height:1792,paths:[{d:\"M896 1408l336-384h-768l-336 384h768zM1909 331q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z\"}]}}),h.register({etsy:{width:1536,height:1792,paths:[{d:\"M518 183v655q103 1 191.5-1.5t125.5-5.5l37-3q68-2 90.5-24.5t39.5-94.5l33-142h103l-14 322 7 319h-103l-29-127q-15-68-45-93t-84-26q-87-8-352-8v556q0 78 43.5 115.5t133.5 37.5h357q35 0 59.5-2t55-7.5 54-18 48.5-32 46-50.5 39-73l93-216h89q-6 37-31.5 252t-30.5 276q-146-5-263.5-8t-162.5-4h-44-628l-376 12v-102l127-25q67-13 91.5-37t25.5-79l8-643q3-402-8-645-2-61-25.5-84t-91.5-36l-127-24v-102l376 12h702q139 0 374-27-6 68-14 194.5t-12 219.5l-5 92h-93l-32-124q-31-121-74-179.5t-113-58.5h-548q-28 0-35.5 8.5t-7.5 30.5z\"}]}}),h.register({eur:{width:1024,height:1792,paths:[{d:\"M976 1307l35 159q3 12-3 22.5t-17 14.5l-5 1q-4 2-10.5 3.5t-16 4.5-21.5 5.5-25.5 5-30 5-33.5 4.5-36.5 3-38.5 1q-234 0-409-130.5t-238-351.5h-95q-13 0-22.5-9.5t-9.5-22.5v-113q0-13 9.5-22.5t22.5-9.5h66q-2-57 1-105h-67q-14 0-23-9t-9-23v-114q0-14 9-23t23-9h98q67-210 243.5-338t400.5-128q102 0 194 23 11 3 20 15 6 11 3 24l-43 159q-3 13-14 19.5t-24 2.5l-4-1q-4-1-11.5-2.5l-17.5-3.5t-22.5-3.5-26-3-29-2.5-29.5-1q-126 0-226 64t-150 176h468q16 0 25 12 10 12 7 26l-24 114q-5 26-32 26h-488q-3 37 0 105h459q15 0 25 12 9 12 6 27l-24 112q-2 11-11 18.5t-20 7.5h-387q48 117 149.5 185.5t228.5 68.5q18 0 36-1.5t33.5-3.5 29.5-4.5 24.5-5 18.5-4.5l12-3 5-2q13-5 26 2 12 7 15 21z\"}]}}),h.register({euro:{width:1024,height:1792,paths:[{d:\"M976 1307l35 159q3 12-3 22.5t-17 14.5l-5 1q-4 2-10.5 3.5t-16 4.5-21.5 5.5-25.5 5-30 5-33.5 4.5-36.5 3-38.5 1q-234 0-409-130.5t-238-351.5h-95q-13 0-22.5-9.5t-9.5-22.5v-113q0-13 9.5-22.5t22.5-9.5h66q-2-57 1-105h-67q-14 0-23-9t-9-23v-114q0-14 9-23t23-9h98q67-210 243.5-338t400.5-128q102 0 194 23 11 3 20 15 6 11 3 24l-43 159q-3 13-14 19.5t-24 2.5l-4-1q-4-1-11.5-2.5l-17.5-3.5t-22.5-3.5-26-3-29-2.5-29.5-1q-126 0-226 64t-150 176h468q16 0 25 12 10 12 7 26l-24 114q-5 26-32 26h-488q-3 37 0 105h459q15 0 25 12 9 12 6 27l-24 112q-2 11-11 18.5t-20 7.5h-387q48 117 149.5 185.5t228.5 68.5q18 0 36-1.5t33.5-3.5 29.5-4.5 24.5-5 18.5-4.5l12-3 5-2q13-5 26 2 12 7 15 21z\"}]}}),h.register({exchange:{width:1792,height:1792,paths:[{d:\"M1792 1184v192q0 13-9.5 22.5t-22.5 9.5h-1376v192q0 13-9.5 22.5t-22.5 9.5q-12 0-24-10l-319-320q-9-9-9-22 0-14 9-23l320-320q9-9 23-9 13 0 22.5 9.5t9.5 22.5v192h1376q13 0 22.5 9.5t9.5 22.5zM1792 640q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-1376q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1376v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z\"}]}}),h.register({\"exclamation-circle\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM896 1375v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zM894 1031l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z\"}]}}),h.register({\"exclamation-triangle\":{width:1792,height:1792,paths:[{d:\"M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zM1022 1001l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zM1008 67l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z\"}]}}),h.register({exclamation:{width:640,height:1792,paths:[{d:\"M512 1248v224q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-224q0-26 19-45t45-19h256q26 0 45 19t19 45zM542 192l-28 768q-1 26-20.5 45t-45.5 19h-256q-26 0-45.5-19t-20.5-45l-28-768q-1-26 17.5-45t44.5-19h320q26 0 44.5 19t17.5 45z\"}]}}),h.register({expand:{width:1536,height:1792,paths:[{d:\"M755 1056q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23zM1536 192v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45z\"}]}}),h.register({expeditedssl:{width:1792,height:1792,paths:[{d:\"M896 64q-169 0-323 66t-265.5 177.5-177.5 265.5-66 323 66 323 177.5 265.5 265.5 177.5 323 66 323-66 265.5-177.5 177.5-265.5 66-323-66-323-177.5-265.5-265.5-177.5-323-66zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM496 832q16 0 16 16v480q0 16-16 16h-32q-16 0-16-16v-480q0-16 16-16h32zM896 896q53 0 90.5 37.5t37.5 90.5q0 35-17.5 64t-46.5 46v114q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-114q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5zM896 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM544 608v96q0 14 9 23t23 9h64q14 0 23-9t9-23v-96q0-93 65.5-158.5t158.5-65.5 158.5 65.5 65.5 158.5v96q0 14 9 23t23 9h64q14 0 23-9t9-23v-96q0-146-103-249t-249-103-249 103-103 249zM1408 1344v-512q0-26-19-45t-45-19h-896q-26 0-45 19t-19 45v512q0 26 19 45t45 19h896q26 0 45-19t19-45z\"}]}}),h.register({\"external-link-square\":{width:1536,height:1792,paths:[{d:\"M1280 928v-480q0-26-19-45t-45-19h-480q-42 0-59 39-17 41 14 70l144 144-534 534q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l534-534 144 144q18 19 45 19 12 0 25-5 39-17 39-59zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"external-link\":{width:1792,height:1792,paths:[{d:\"M1408 928v320q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-320q0-14 9-23t23-9h64q14 0 23 9t9 23zM1792 64v512q0 26-19 45t-45 19-45-19l-176-176-652 652q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l652-652-176-176q-19-19-19-45t19-45 45-19h512q26 0 45 19t19 45z\"}]}}),h.register({\"eye-slash\":{width:1792,height:1792,paths:[{d:\"M555 1335l78-141q-87-63-136-159t-49-203q0-121 61-225-229 117-381 353 167 258 427 375zM944 576q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zM1307 385q0 7-1 9-106 189-316 567t-315 566l-49 89q-10 16-28 16-12 0-134-70-16-10-16-28 0-12 44-87-143-65-263.5-173t-208.5-245q-20-31-20-69t20-69q153-235 380-371t496-136q89 0 180 17l54-97q10-16 28-16 5 0 18 6t31 15.5 33 18.5 31.5 18.5 19.5 11.5q16 10 16 27zM1344 832q0 139-79 253.5t-209 164.5l280-502q8 45 8 84zM1792 960q0 35-20 69-39 64-109 145-150 172-347.5 267t-419.5 95l74-132q212-18 392.5-137t301.5-307q-115-179-282-294l63-112q95 64 182.5 153t144.5 184q20 34 20 69z\"}]}}),h.register({eye:{width:1792,height:1792,paths:[{d:\"M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zM944 576q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zM1792 960q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z\"}]}}),h.register({eyedropper:{width:1792,height:1792,paths:[{d:\"M1698 94q94 94 94 226.5t-94 225.5l-225 223 104 104q10 10 10 23t-10 23l-210 210q-10 10-23 10t-23-10l-105-105-603 603q-37 37-90 37h-203l-256 128-64-64 128-256v-203q0-53 37-90l603-603-105-105q-10-10-10-23t10-23l210-210q10-10 23-10t23 10l104 104 223-225q93-94 225.5-94t226.5 94zM512 1472l576-576-192-192-576 576v192h192z\"}]}}),h.register({fa:{width:1536,height:1792,paths:[{d:\"M1536 512v839q0 48-49 62-174 52-338 52-73 0-215.5-29.5t-227.5-29.5q-164 0-370 48v338h-160v-1368q-63-25-101-81t-38-124q0-91 64-155t155-64 155 64 64 155q0 68-38 124t-101 81v68q190-44 343-44 99 0 198 15 14 2 111.5 22.5t149.5 20.5q77 0 165-18 11-2 80-21t89-19q26 0 45 19t19 45z\"}]}}),h.register({\"facebook-f\":{width:1024,height:1792,paths:[{d:\"M959 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z\"}]}}),h.register({\"facebook-official\":{width:1536,height:1792,paths:[{d:\"M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z\"}]}}),h.register({\"facebook-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-188v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-532q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z\"}]}}),h.register({facebook:{width:1024,height:1792,paths:[{d:\"M959 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z\"}]}}),h.register({\"fast-backward\":{width:1792,height:1792,paths:[{d:\"M1747 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v710q0 26-13 32t-32-13l-710-710q-9-9-13-19v678q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h128q26 0 45 19t19 45v678q4-10 13-19l710-710q19-19 32-13t13 32v710q4-10 13-19z\"}]}}),h.register({\"fast-forward\":{width:1792,height:1792,paths:[{d:\"M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-710q0-26 13-32t32 13l710 710q9 9 13 19v-678q0-26 19-45t45-19h128q26 0 45 19t19 45v1408q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-678q-4 10-13 19l-710 710q-19 19-32 13t-13-32v-710q-4 10-13 19z\"}]}}),h.register({fax:{width:1792,height:1792,paths:[{d:\"M288 384q66 0 113 47t47 113v1088q0 66-47 113t-113 47h-128q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h128zM1664 547q58 34 93 93t35 128v768q0 106-75 181t-181 75h-864q-66 0-113-47t-47-113v-1536q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v163zM928 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM928 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM928 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1536 640v-256h-160q-40 0-68-28t-28-68v-160h-640v512h896z\"}]}}),h.register({feed:{width:1408,height:1792,paths:[{d:\"M384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1467q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zM1408 1469q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z\"}]}}),h.register({female:{width:1280,height:1792,paths:[{d:\"M1280 1056q0 40-28 68t-68 28q-51 0-80-43l-227-341h-45v132l247 411q9 15 9 33 0 26-19 45t-45 19h-192v272q0 46-33 79t-79 33h-160q-46 0-79-33t-33-79v-272h-192q-26 0-45-19t-19-45q0-18 9-33l247-411v-132h-45l-227 341q-29 43-80 43-40 0-68-28t-28-68q0-29 16-53l256-384q73-107 176-107h384q103 0 176 107l256 384q16 24 16 53zM864 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({\"fighter-jet\":{width:1920,height:1792,paths:[{d:\"M1920 960q-1 32-288 96l-352 32-224 64h-64l-293 352h69q26 0 45 4.5t19 11.5-19 11.5-45 4.5h-96-160-64v-32h64v-416h-160l-192 224h-96l-32-32v-192h32v-32h128v-8l-192-24v-128l192-24v-8h-128v-32h-32v-192l32-32h96l192 224h160v-416h-64v-32h64 160 96q26 0 45 4.5t19 11.5-19 11.5-45 4.5h-69l293 352h64l224 64 352 32q128 28 200 52t80 34z\"}]}}),h.register({\"file-archive-o\":{width:1536,height:1792,paths:[{d:\"M640 384v-128h-128v128h128zM768 512v-128h-128v128h128zM640 640v-128h-128v128h128zM768 768v-128h-128v128h128zM1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-128v128h-128v-128h-512v1536h1280zM781 943l107 349q8 27 8 52 0 83-72.5 137.5t-183.5 54.5-183.5-54.5-72.5-137.5q0-25 8-52 21-63 120-396v-128h128v128h79q22 0 39 13t23 34zM640 1408q53 0 90.5-19t37.5-45-37.5-45-90.5-19-90.5 19-37.5 45 37.5 45 90.5 19z\"}]}}),h.register({\"file-audio-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM620 850q20 8 20 30v544q0 22-20 30-8 2-12 2-12 0-23-9l-166-167h-131q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h131l166-167q16-15 35-7zM1037 1539q31 0 50-24 129-159 129-363t-129-363q-16-21-43-24t-47 14q-21 17-23.5 43.5t14.5 47.5q100 123 100 282t-100 282q-17 21-14.5 47.5t23.5 42.5q18 15 40 15zM826 1391q27 0 47-20 87-93 87-219t-87-219q-18-19-45-20t-46 17-20 44.5 18 46.5q52 57 52 131t-52 131q-19 20-18 46.5t20 44.5q20 17 44 17z\"}]}}),h.register({\"file-code-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM480 768q8-11 21-12.5t24 6.5l51 38q11 8 12.5 21t-6.5 24l-182 243 182 243q8 11 6.5 24t-12.5 21l-51 38q-11 8-24 6.5t-21-12.5l-226-301q-14-19 0-38zM1282 1069q14 19 0 38l-226 301q-8 11-21 12.5t-24-6.5l-51-38q-11-8-12.5-21t6.5-24l182-243-182-243q-8-11-6.5-24t12.5-21l51-38q11-8 24-6.5t21 12.5zM662 1530q-13-2-20.5-13t-5.5-24l138-831q2-13 13-20.5t24-5.5l63 10q13 2 20.5 13t5.5 24l-138 831q-2 13-13 20.5t-24 5.5z\"}]}}),h.register({\"file-excel-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM429 1430v106h281v-106h-75l103-161q5-7 10-16.5t7.5-13.5 3.5-4h2q1 4 5 10 2 4 4.5 7.5t6 8 6.5 8.5l107 161h-76v106h291v-106h-68l-192-273 195-282h67v-107h-279v107h74l-103 159q-4 7-10 16.5t-9 13.5l-2 3h-2q-1-4-5-10-6-11-17-23l-106-159h76v-107h-290v107h68l189 272-194 283h-68z\"}]}}),h.register({\"file-image-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z\"}]}}),h.register({\"file-movie-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM768 768q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zM1260 770q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z\"}]}}),h.register({\"file-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280z\"}]}}),h.register({\"file-pdf-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM894 1071q33 26 84 56 59-7 117-7 147 0 177 49 16 22 2 52 0 1-1 2l-2 2v1q-6 38-71 38-48 0-115-20t-130-53q-221 24-392 83-153 262-242 262-15 0-28-7l-24-12q-1-1-6-5-10-10-6-36 9-40 56-91.5t132-96.5q14-9 23 6 2 2 2 4 52-85 107-197 68-136 104-262-24-82-30.5-159.5t6.5-127.5q11-40 42-40h21 1q23 0 35 15 18 21 9 68-2 6-4 8 1 3 1 8v30q-2 123-14 192 55 164 146 238zM318 1482q52-24 137-158-51 40-87.5 84t-49.5 74zM716 562q-15 42-2 132 1-7 7-44 0-3 7-43 1-4 4-8-1-1-1-2-1-2-1-3-1-22-13-36 0 1-1 2v2zM592 1223q135-54 284-81-2-1-13-9.5t-16-13.5q-76-67-127-176-27 86-83 197-30 56-45 83zM1238 1207q-24-24-140-24 76 28 124 28 14 0 18-1 0-1-2-3z\"}]}}),h.register({\"file-photo-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z\"}]}}),h.register({\"file-picture-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z\"}]}}),h.register({\"file-powerpoint-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM416 1430v106h327v-106h-93v-167h137q76 0 118-15 67-23 106.5-87t39.5-146q0-81-37-141t-100-87q-48-19-130-19h-368v107h92v555h-92zM769 1150h-119v-268h120q52 0 83 18 56 33 56 115 0 89-62 120-31 15-78 15z\"}]}}),h.register({\"file-sound-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM620 850q20 8 20 30v544q0 22-20 30-8 2-12 2-12 0-23-9l-166-167h-131q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h131l166-167q16-15 35-7zM1037 1539q31 0 50-24 129-159 129-363t-129-363q-16-21-43-24t-47 14q-21 17-23.5 43.5t14.5 47.5q100 123 100 282t-100 282q-17 21-14.5 47.5t23.5 42.5q18 15 40 15zM826 1391q27 0 47-20 87-93 87-219t-87-219q-18-19-45-20t-46 17-20 44.5 18 46.5q52 57 52 131t-52 131q-19 20-18 46.5t20 44.5q20 17 44 17z\"}]}}),h.register({\"file-text-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM384 800q0-14 9-23t23-9h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64zM1120 1024q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704zM1120 1280q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704z\"}]}}),h.register({\"file-text\":{width:1536,height:1792,paths:[{d:\"M1468 476q14 14 28 36h-472v-472q22 14 36 28zM992 640h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544q0 40 28 68t68 28zM1152 1376v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1152 1120v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1152 864v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23z\"}]}}),h.register({\"file-video-o\":{width:1536,height:1792,paths:[{\nd:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM768 768q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zM1260 770q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z\"}]}}),h.register({\"file-word-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM233 768v107h70l164 661h159l128-485q7-20 10-46 2-16 2-24h4l3 24q1 3 3.5 20t5.5 26l128 485h159l164-661h70v-107h-300v107h90l-99 438q-5 20-7 46l-2 21h-4q0-3-0.5-6.5t-1.5-8-1-6.5q-1-5-4-21t-5-25l-144-545h-114l-144 545q-2 9-4.5 24.5t-3.5 21.5l-4 21h-4l-2-21q-2-26-7-46l-99-438h90v-107h-300z\"}]}}),h.register({\"file-zip-o\":{width:1536,height:1792,paths:[{d:\"M640 384v-128h-128v128h128zM768 512v-128h-128v128h128zM640 640v-128h-128v128h128zM768 768v-128h-128v128h128zM1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-128v128h-128v-128h-512v1536h1280zM781 943l107 349q8 27 8 52 0 83-72.5 137.5t-183.5 54.5-183.5-54.5-72.5-137.5q0-25 8-52 21-63 120-396v-128h128v128h79q22 0 39 13t23 34zM640 1408q53 0 90.5-19t37.5-45-37.5-45-90.5-19-90.5 19-37.5 45 37.5 45 90.5 19z\"}]}}),h.register({file:{width:1536,height:1792,paths:[{d:\"M1024 512v-472q22 14 36 28l408 408q14 14 28 36h-472zM896 544q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z\"}]}}),h.register({\"files-o\":{width:1792,height:1792,paths:[{d:\"M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zM1152 597l-299 299h299v-299zM512 213l-299 299h299v-299zM708 860l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zM1664 1664v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z\"}]}}),h.register({film:{width:1920,height:1792,paths:[{d:\"M384 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM384 1216v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM384 832v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1408 1600v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zM384 448v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1408 832v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zM1792 1216v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 832v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 448v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1920 288v1344q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1344q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({filter:{width:1408,height:1792,paths:[{d:\"M1403 295q17 41-14 70l-493 493v742q0 42-39 59-13 5-25 5-27 0-45-19l-256-256q-19-19-19-45v-486l-493-493q-31-29-14-70 17-39 59-39h1280q42 0 59 39z\"}]}}),h.register({\"fire-extinguisher\":{width:1408,height:1792,paths:[{d:\"M512 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 160v320q0 16-12 25-8 7-20 7-4 0-7-1l-448-96q-11-2-18-11t-7-20h-256v102q111 23 183.5 111t72.5 203v800q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-800q0-106 62.5-190.5t161.5-114.5v-111h-32q-59 0-115 23.5t-91.5 53-66 66.5-40.5 53.5-14 24.5q-17 35-57 35-16 0-29-7-23-12-31.5-37t3.5-49q5-10 14.5-26t37.5-53.5 60.5-70 85-67 108.5-52.5q-25-42-25-86 0-66 47-113t113-47 113 47 47 113q0 33-14 64h302q0-11 7-20t18-11l448-96q3-1 7-1 12 0 20 7 12 9 12 25z\"}]}}),h.register({fire:{width:1408,height:1792,paths:[{d:\"M1408 1696v64q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1152 640q0 78-24.5 144t-64 112.5-87.5 88-96 77.5-87.5 72-64 81.5-24.5 96.5q0 96 67 224l-4-1 1 1q-90-41-160-83t-138.5-100-113.5-122.5-72.5-150.5-27.5-184q0-78 24.5-144t64-112.5 87.5-88 96-77.5 87.5-72 64-81.5 24.5-96.5q0-94-66-224l3 1-1-1q90 41 160 83t138.5 100 113.5 122.5 72.5 150.5 27.5 184z\"}]}}),h.register({firefox:{width:1792,height:1792,paths:[{d:\"M903 1792q-283 0-504.5-150.5t-329.5-398.5q-58-131-67-301t26-332.5 111-312 179-242.5l-11 281q11-14 68-15.5t70 15.5q42-81 160.5-138t234.5-59q-54 45-119.5 148.5t-58.5 163.5q25 8 62.5 13.5t63 7.5 68 4 50.5 3q15 5 9.5 45.5t-30.5 75.5q-5 7-16.5 18.5t-56.5 35.5-101 34l15 189-139-67q-18 43-7.5 81.5t36 66.5 65.5 41.5 81 6.5q51-9 98-34.5t83.5-45 73.5-17.5q61 4 89.5 33t19.5 65q-1 2-2.5 5.5t-8.5 12.5-18 15.5-31.5 10.5-46.5 1q-60 95-144.5 135.5t-209.5 29.5q74 61 162.5 82.5t168.5 6 154.5-52 128-87.5 80.5-104q43-91 39-192.5t-37.5-188.5-78.5-125q87 38 137 79.5t77 112.5q15-170-57.5-343t-209.5-284q265 77 412 279.5t151 517.5q2 127-40.5 255t-123.5 238-189 196-247.5 135.5-288.5 49.5z\"}]}}),h.register({\"first-order\":{width:1536,height:1792,paths:[{d:\"M1322 896q0 45-5 76l-236-14 224 78q-19 73-58 141l-214-103 177 158q-44 61-107 108l-157-178 103 215q-61 37-140 59l-79-228 14 240q-38 6-76 6t-76-6l14-238-78 226q-74-19-140-59l103-215-157 178q-59-43-108-108l178-158-214 104q-39-69-58-141l224-79-237 14q-5-42-5-76 0-35 5-77l238 14-225-79q19-73 58-140l214 104-177-159q46-61 107-108l158 178-103-215q67-39 140-58l77 224-13-236q36-6 75-6 38 0 76 6l-14 237 78-225q74 19 140 59l-103 214 158-178q61 47 107 108l-177 159 213-104q37 62 58 141l-224 78 237-14q5 31 5 77zM1352 896q0-160-78.5-295.5t-213-214-292.5-78.5q-119 0-227 46.5t-186.5 125-124.5 187.5-46 229q0 119 46 228t124.5 187.5 186.5 125 227 46.5q158 0 292.5-78.5t213-214 78.5-294.5zM1425 513v766l-657 383-657-383v-766l657-383zM768 1719l708-412v-823l-708-411-708 411v823zM1536 448v896l-768 448-768-448v-896l768-448z\"}]}}),h.register({\"flag-checkered\":{width:1792,height:1792,paths:[{d:\"M832 1000v-192q-181 16-384 117v185q205-96 384-110zM832 582v-197q-172 8-384 126v189q215-111 384-118zM1664 1045v-184q-235 116-384 71v-224q-20-6-39-15-5-3-33-17t-34.5-17-31.5-15-34.5-15.5-32.5-13-36-12.5-35-8.5-39.5-7.5-39.5-4-44-2q-23 0-49 3v222h19q102 0 192.5 29t197.5 82q19 9 39 15v188q42 17 91 17 120 0 293-92zM1664 618v-189q-169 91-306 91-45 0-78-8v196q148 42 384-90zM320 256q0 35-17.5 64t-46.5 46v1266q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-1266q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 39-35 57-10 5-17 9-218 116-369 116-88 0-158-35l-28-14q-64-33-99-48t-91-29-114-14q-102 0-235.5 44t-228.5 102q-15 9-33 9-16 0-32-8-32-19-32-56v-742q0-35 31-55 35-21 78.5-42.5t114-52 152.5-49.5 155-19q112 0 209 31t209 86q38 19 89 19 122 0 310-112 22-12 31-17 31-16 62 2 31 20 31 55z\"}]}}),h.register({\"flag-o\":{width:1792,height:1792,paths:[{d:\"M1664 1045v-616q-169 91-306 91-82 0-145-32-100-49-184-76.5t-178-27.5q-173 0-403 127v599q245-113 433-113 55 0 103.5 7.5t98 26 77 31 82.5 39.5l28 14q44 22 101 22 120 0 293-92zM320 256q0 35-17.5 64t-46.5 46v1266q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-1266q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 39-35 57-10 5-17 9-218 116-369 116-88 0-158-35l-28-14q-64-33-99-48t-91-29-114-14q-102 0-235.5 44t-228.5 102q-15 9-33 9-16 0-32-8-32-19-32-56v-742q0-35 31-55 35-21 78.5-42.5t114-52 152.5-49.5 155-19q112 0 209 31t209 86q38 19 89 19 122 0 310-112 22-12 31-17 31-16 62 2 31 20 31 55z\"}]}}),h.register({flag:{width:1792,height:1792,paths:[{d:\"M320 256q0 72-64 110v1266q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-1266q-64-38-64-110 0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 25-12.5 38.5t-39.5 27.5q-215 116-369 116-61 0-123.5-22t-108.5-48-115.5-48-142.5-22q-192 0-464 146-17 9-33 9-26 0-45-19t-19-45v-742q0-32 31-55 21-14 79-43 236-120 421-120 107 0 200 29t219 88q38 19 88 19 54 0 117.5-21t110-47 88-47 54.5-21q26 0 45 19t19 45z\"}]}}),h.register({flash:{width:896,height:1792,paths:[{d:\"M885 566q18 20 7 44l-540 1157q-13 25-42 25-4 0-14-2-17-5-25.5-19t-4.5-30l197-808-406 101q-4 1-12 1-18 0-31-11-18-15-13-39l201-825q4-14 16-23t28-9h328q19 0 32 12.5t13 29.5q0 8-5 18l-171 463 396-98q8-2 12-2 19 0 34 15z\"}]}}),h.register({flask:{width:1664,height:1792,paths:[{d:\"M1527 1448q56 89 21.5 152.5t-140.5 63.5h-1152q-106 0-140.5-63.5t21.5-152.5l503-793v-399h-64q-26 0-45-19t-19-45 19-45 45-19h512q26 0 45 19t19 45-19 45-45 19h-64v399zM748 723l-272 429h712l-272-429-20-31v-37-399h-128v399 37z\"}]}}),h.register({flickr:{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM698 896q0-88-62-150t-150-62-150 62-62 150 62 150 150 62 150-62 62-150zM1262 896q0-88-62-150t-150-62-150 62-62 150 62 150 150 62 150-62 62-150z\"}]}}),h.register({\"floppy-o\":{width:1536,height:1792,paths:[{d:\"M384 1536h768v-384h-768v384zM1280 1536h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zM896 608v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zM1536 640v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"}]}}),h.register({\"folder-o\":{width:1664,height:1792,paths:[{d:\"M1536 1312v-704q0-40-28-68t-68-28h-704q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v960q0 40 28 68t68 28h1216q40 0 68-28t28-68zM1664 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z\"}]}}),h.register({\"folder-open-o\":{width:1920,height:1792,paths:[{d:\"M1781 931q0-35-53-35h-1088q-40 0-85.5 21.5t-71.5 52.5l-294 363q-18 24-18 40 0 35 53 35h1088q40 0 86-22t71-53l294-363q18-22 18-39zM640 768h768v-160q0-40-28-68t-68-28h-576q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v853l256-315q44-53 116-87.5t140-34.5zM1909 931q0 62-46 120l-295 363q-43 53-116 87.5t-140 34.5h-1088q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158v160h192q54 0 99 24.5t67 70.5q15 32 15 68z\"}]}}),h.register({\"folder-open\":{width:1920,height:1792,paths:[{d:\"M1879 952q0 31-31 66l-336 396q-43 51-120.5 86.5t-143.5 35.5h-1088q-34 0-60.5-13t-26.5-43q0-31 31-66l336-396q43-51 120.5-86.5t143.5-35.5h1088q34 0 60.5 13t26.5 43zM1536 608v160h-832q-94 0-197 47.5t-164 119.5l-337 396-5 6q0-4-0.5-12.5t-0.5-12.5v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158z\"}]}}),h.register({folder:{width:1664,height:1792,paths:[{d:\"M1664 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z\"}]}}),h.register({\"font-awesome\":{width:1536,height:1792,paths:[{d:\"M1536 512v839q0 48-49 62-174 52-338 52-73 0-215.5-29.5t-227.5-29.5q-164 0-370 48v338h-160v-1368q-63-25-101-81t-38-124q0-91 64-155t155-64 155 64 64 155q0 68-38 124t-101 81v68q190-44 343-44 99 0 198 15 14 2 111.5 22.5t149.5 20.5q77 0 165-18 11-2 80-21t89-19q26 0 45 19t19 45z\"}]}}),h.register({font:{width:1664,height:1792,paths:[{d:\"M725 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zM0 1664l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h75 53q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-0.5 13.5t-0.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\"}]}}),h.register({fonticons:{width:1536,height:1792,paths:[{d:\"M0 128h1536v1536h-1536v-1536zM908 448l-12 33 75 83-31 114 25 25 107-57 107 57 25-25-31-114 75-83-12-33h-95l-53-96h-32l-53 96h-95zM641 611q32 0 44.5 16t11.5 63l174-21q0-55-17.5-92.5t-50.5-56-69-25.5-85-7q-133 0-199 57.5t-66 182.5v72h-96v128h76q20 0 20 8v382q0 14-5 20t-18 7l-73 7v88h448v-86l-149-14q-6-1-8.5-1.5t-3.5-2.5-0.5-4 1-7 0.5-10v-387h191l38-128h-231q-6 0-2-6t4-9v-80q0-27 1.5-40.5t7.5-28 19.5-20 36.5-5.5zM1248 1440v-86l-54-9q-7-1-9.5-2.5t-2.5-3 1-7.5 1-12v-520h-275l-23 101 83 22q23 7 23 27v370q0 14-6 18.5t-20 6.5l-70 9v86h352z\"}]}}),h.register({\"fort-awesome\":{width:1792,height:1792,paths:[{d:\"M640 1008v-224q0-16-16-16h-96q-16 0-16 16v224q0 16 16 16h96q16 0 16-16zM1152 1008v-224q0-16-16-16h-96q-16 0-16 16v224q0 16 16 16h96q16 0 16-16zM1664 1040v752h-640v-320q0-80-56-136t-136-56-136 56-56 136v320h-640v-752q0-16 16-16h96q16 0 16 16v112h128v-624q0-16 16-16h96q16 0 16 16v112h128v-112q0-16 16-16h96q16 0 16 16v112h128v-112q0-6 2.5-9.5t8.5-5 9.5-2 11.5 0 9 0.5v-391q-32-15-32-50 0-23 16.5-39t38.5-16 38.5 16 16.5 39q0 35-32 50v17q45-10 83-10 21 0 59.5 7.5t54.5 7.5q17 0 47-7.5t37-7.5q16 0 16 16v210q0 15-35 21.5t-62 6.5q-18 0-54.5-7.5t-55.5-7.5q-40 0-90 12v133q1 0 9-0.5t11.5 0 9.5 2 8.5 5 2.5 9.5v112h128v-112q0-16 16-16h96q16 0 16 16v112h128v-112q0-16 16-16h96q16 0 16 16v624h128v-112q0-16 16-16h96q16 0 16 16z\"}]}}),h.register({forumbee:{width:1536,height:1792,paths:[{d:\"M934 150q-317 121-556 362.5t-358 560.5q-20-89-20-176 0-208 102.5-384.5t278.5-279 384-102.5q82 0 169 19zM1203 269q93 65 164 155-389 113-674.5 400.5t-396.5 676.5q-93-72-155-162 112-386 395-671t667-399zM470 1603q115-356 379.5-622t619.5-384q40 92 54 195-292 120-516 345t-343 518q-103-14-194-52zM1536 1661q-193-50-367-115-135 84-290 107 109-205 274-370.5t369-275.5q-21 152-101 284 65 175 115 370z\"}]}}),h.register({forward:{width:1664,height:1792,paths:[{d:\"M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-710q0-26 13-32t32 13l710 710q19 19 19 45t-19 45l-710 710q-19 19-32 13t-13-32v-710q-4 10-13 19z\"}]}}),h.register({foursquare:{width:1280,height:1792,paths:[{d:\"M1000 434l37-194q5-23-9-40t-35-17h-712q-23 0-38.5 17t-15.5 37v1101q0 7 6 1l291-352q23-26 38-33.5t48-7.5h239q22 0 37-14.5t18-29.5q24-130 37-191 4-21-11.5-40t-36.5-19h-294q-29 0-48-19t-19-48v-42q0-29 19-47.5t48-18.5h346q18 0 35-13.5t20-29.5zM1227 212q-15 73-53.5 266.5t-69.5 350-35 173.5q-6 22-9 32.5t-14 32.5-24.5 33-38.5 21-58 10h-271q-13 0-22 10-8 9-426 494-22 25-58.5 28.5t-48.5-5.5q-55-22-55-98v-1410q0-55 38-102.5t120-47.5h888q95 0 127 53t10 159zM1227 212l-158 790q4-17 35-173.5t69.5-350 53.5-266.5z\"}]}}),h.register({\"free-code-camp\":{width:2304,height:1792,paths:[{d:\"M453 1637q0 21-16 37.5t-37 16.5q-1 0-13-3-63-15-162-140-225-284-225-676 0-341 213-614 39-51 95-103.5t94-52.5q19 0 35 13.5t16 32.5q0 27-63 90-98 102-147 184-119 199-119 449 0 281 123 491 50 85 136 173 2 3 14.5 16t19.5 21 17 20.5 14.5 23.5 4.5 21zM1796 1503q0 29-17.5 48.5t-46.5 19.5h-1081q-26 0-45-19t-19-45q0-29 17.5-48.5t46.5-19.5h1081q26 0 45 19t19 45zM1581 892q0 134-67 233-25 38-69.5 78.5t-83.5 60.5q-16 10-27 10-7 0-15-6t-8-12q0-9 19-30t42-46 42-67.5 19-88.5q0-76-35-130-29-42-46-42-3 0-3 5 0 12 7.5 35.5t7.5 36.5q0 22-21.5 35t-44.5 13q-66 0-66-76 0-15 1.5-44t1.5-44q0-25-10-46-13-25-42-53.5t-51-28.5q-5 0-7 0.5t-3.5 2.5-1.5 6q0 2 16 26t16 54q0 37-19 68t-46 54-53.5 46-45.5 54-19 68q0 98 42 160 29 43 79 63 16 5 17 10 1 2 1 5 0 16-18 16-6 0-33-11-119-43-195-139.5t-76-218.5q0-55 24.5-115.5t60-115 70.5-108.5 59.5-113.5 24.5-111.5q0-53-25-94-29-48-56-64-19-9-19-21 0-20 41-20 50 0 110 29 41 19 71 44.5t49.5 51 33.5 62.5 22 69 16 80q0 1 3 17.5t4.5 25 5.5 25 9 27 11 21.5 14.5 16.5 18.5 5.5q23 0 37-14t14-37q0-25-20-67t-20-52 10-10q27 0 93 70 72 76 102.5 156t30.5 186zM2304 921q0 274-138 503-19 32-48 72t-68 86.5-81 77-74 30.5q-16 0-31-15.5t-15-31.5q0-15 29-50.5t68.5-77 48.5-52.5q183-230 183-531 0-131-20.5-235t-72.5-211q-58-119-163-228-2-3-13-13.5t-16.5-16.5-15-17.5-15-20-9.5-18.5-4-19q0-19 16-35.5t35-16.5q70 0 196 169 98 131 146 273t60 314q2 42 2 64z\"}]}}),h.register({\"frown-o\":{width:1536,height:1792,paths:[{d:\"M1134 1229q8 25-4 48.5t-37 31.5-49-4-32-38q-25-80-92.5-129.5t-151.5-49.5-151.5 49.5-92.5 129.5q-8 26-31.5 38t-48.5 4q-26-8-38-31.5t-4-48.5q37-121 138-195t228-74 228 74 138 195zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"futbol-o\":{width:1792,height:1792,paths:[{d:\"M609 816l287-208 287 208-109 336h-355zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM1515 1350q149-203 149-454v-3l-102 89-240-224 63-323 134 12q-150-206-389-282l53 124-287 159-287-159 53-124q-239 76-389 282l135-12 62 323-240 224-102-89v3q0 251 149 454l30-132 326 40 139 298-116 69q117 39 240 39t240-39l-116-69 139-298 326-40z\"}]}}),h.register({gamepad:{width:1920,height:1792,paths:[{d:\"M832 1088v-128q0-14-9-23t-23-9h-192v-192q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v192h-192q-14 0-23 9t-9 23v128q0 14 9 23t23 9h192v192q0 14 9 23t23 9h128q14 0 23-9t9-23v-192h192q14 0 23-9t9-23zM1408 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1920 1024q0 212-150 362t-362 150q-192 0-338-128h-220q-146 128-338 128-212 0-362-150t-150-362 150-362 362-150h896q212 0 362 150t150 362z\"}]}}),h.register({gavel:{width:1792,height:1792,paths:[{d:\"M1771 1536q0 53-37 90l-107 108q-39 37-91 37-53 0-90-37l-363-364q-38-36-38-90 0-53 43-96l-256-256-126 126q-14 14-34 14t-34-14q2 2 12.5 12t12.5 13 10 11.5 10 13.5 6 13.5 5.5 16.5 1.5 18q0 38-28 68-3 3-16.5 18t-19 20.5-18.5 16.5-22 15.5-22 9-26 4.5q-40 0-68-28l-408-408q-28-28-28-68 0-13 4.5-26t9-22 15.5-22 16.5-18.5 20.5-19 18-16.5q30-28 68-28 10 0 18 1.5t16.5 5.5 13.5 6 13.5 10 11.5 10 13 12.5 12 12.5q-14-14-14-34t14-34l348-348q14-14 34-14t34 14q-2-2-12.5-12t-12.5-13-10-11.5-10-13.5-6-13.5-5.5-16.5-1.5-18q0-38 28-68 3-3 16.5-18t19-20.5 18.5-16.5 22-15.5 22-9 26-4.5q40 0 68 28l408 408q28 28 28 68 0 13-4.5 26t-9 22-15.5 22-16.5 18.5-20.5 19-18 16.5q-30 28-68 28-10 0-18-1.5t-16.5-5.5-13.5-6-13.5-10-11.5-10-13-12.5-12-12.5q14 14 14 34t-14 34l-126 126 256 256q43-43 96-43 52 0 91 37l363 363q37 39 37 91z\"}]}}),h.register({gbp:{width:1024,height:1792,paths:[{d:\"M1020 1137v367q0 14-9 23t-23 9h-956q-14 0-23-9t-9-23v-150q0-13 9.5-22.5t22.5-9.5h97v-383h-95q-14 0-23-9.5t-9-22.5v-131q0-14 9-23t23-9h95v-223q0-171 123.5-282t314.5-111q185 0 335 125 9 8 10 20.5t-7 22.5l-103 127q-9 11-22 12-13 2-23-7-5-5-26-19t-69-32-93-18q-85 0-137 47t-52 123v215h305q13 0 22.5 9t9.5 23v131q0 13-9.5 22.5t-22.5 9.5h-305v379h414v-181q0-13 9-22.5t23-9.5h162q14 0 23 9.5t9 22.5z\"}]}}),h.register({ge:{width:1792,height:1792,paths:[{d:\"M874 1638v66q-208-6-385-109.5t-283-275.5l58-34q29 49 73 99l65-57q148 168 368 212l-17 86q65 12 121 13zM276 1108l-83 28q22 60 49 112l-57 33q-98-180-98-385t98-385l57 33q-30 56-49 112l82 28q-35 100-35 212 0 109 36 212zM1528 1285l58 34q-106 172-283 275.5t-385 109.5v-66q56-1 121-13l-17-86q220-44 368-212l65 57q44-50 73-99zM1377 731l-233 80q14 42 14 85t-14 85l232 80q-31 92-98 169l-185-162q-57 67-147 85l48 241q-52 10-98 10t-98-10l48-241q-90-18-147-85l-185 162q-67-77-98-169l232-80q-14-42-14-85t14-85l-233-80q33-93 99-169l185 162q59-68 147-86l-48-240q44-10 98-10t98 10l-48 240q88 18 147 86l185-162q66 76 99 169zM874 88v66q-65 2-121 13l17 86q-220 42-368 211l-65-56q-38 42-73 98l-57-33q106-172 282-275.5t385-109.5zM1705 896q0 205-98 385l-57-33q27-52 49-112l-83-28q36-103 36-212 0-112-35-212l82-28q-19-56-49-112l57-33q98 180 98 385zM1585 473l-57 33q-35-56-73-98l-65 56q-148-169-368-211l17-86q-56-11-121-13v-66q209 6 385 109.5t282 275.5zM1748 896q0-173-67.5-331t-181.5-272-272-181.5-331-67.5-331 67.5-272 181.5-181.5 272-67.5 331 67.5 331 181.5 272 272 181.5 331 67.5 331-67.5 272-181.5 181.5-272 67.5-331zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({gear:{width:1536,height:1792,paths:[{d:\"M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1536 787v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z\"}]}}),h.register({gears:{width:1920,height:1792,paths:[{d:\"M896 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1664 1408q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1664 384q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1280 805v185q0 10-7 19.5t-16 10.5l-155 24q-11 35-32 76 34 48 90 115 7 11 7 20 0 12-7 19-23 30-82.5 89.5t-78.5 59.5q-11 0-21-7l-115-90q-37 19-77 31-11 108-23 155-7 24-30 24h-186q-11 0-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118 89q-7 7-20 7-11 0-21-8-144-133-144-160 0-9 7-19 10-14 41-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5t-7-19.5v-185q0-10 7-19.5t16-10.5l155-24q11-35 32-76-34-48-90-115-7-11-7-20 0-12 7-20 22-30 82-89t79-59q11 0 21 7l115 90q34-18 77-32 11-108 23-154 7-24 30-24h186q11 0 20 7.5t10 17.5l23 153q34 10 75 31l118-89q8-7 20-7 11 0 21 8 144 133 144 160 0 8-7 19-12 16-42 54t-45 60q23 48 34 82l152 23q10 2 17 10.5t7 19.5zM1920 1338v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31zM1920 314v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31z\"}]}}),h.register({genderless:{width:1280,height:1792,paths:[{d:\"M1024 960q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1152 960q0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5z\"}]}}),h.register({\"get-pocket\":{width:1720,height:1792,paths:[{d:\"M1565 128q65 0 110 45.5t45 110.5v519q0 176-68 336t-182.5 275-274 182.5-334.5 67.5q-176 0-335.5-67.5t-274.5-182.5-183-275-68-336v-519q0-64 46-110t110-46h1409zM861 1192q47 0 82-33l404-388q37-35 37-85 0-49-34.5-83.5t-83.5-34.5q-47 0-82 33l-323 310-323-310q-35-33-81-33-49 0-83.5 34.5t-34.5 83.5q0 51 36 85l405 388q33 33 81 33z\"}]}}),h.register({\"gg-circle\":{width:1792,height:1792,paths:[{d:\"M717 1354l271-271-279-279-88 88 192 191-96 96-279-279 279-279 40 40 87-87-127-128-454 454zM1075 1346l454-454-454-454-271 271 279 279 88-88-192-191 96-96 279 279-279 279-40-40-87 88zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({gg:{width:2048,height:1792,paths:[{d:\"M736 800l384 384-384 384-672-672 672-672 168 168-96 96-72-72-480 480 480 480 193-193-289-287zM1312 224l672 672-672 672-168-168 96-96 72 72 480-480-480-480-193 193 289 287-96 96-384-384z\"}]}}),h.register({gift:{width:1536,height:1792,paths:[{d:\"M928 1356v-56-468-192h-320v192 468 56q0 25 18 38.5t46 13.5h192q28 0 46-13.5t18-38.5zM472 512h195l-126-161q-26-31-69-31-40 0-68 28t-28 68 28 68 68 28zM1160 416q0-40-28-68t-68-28q-43 0-69 31l-125 161h194q40 0 68-28t28-68zM1536 672v320q0 14-9 23t-23 9h-96v416q0 40-28 68t-68 28h-1088q-40 0-68-28t-28-68v-416h-96q-14 0-23-9t-9-23v-320q0-14 9-23t23-9h440q-93 0-158.5-65.5t-65.5-158.5 65.5-158.5 158.5-65.5q107 0 168 77l128 165 128-165q61-77 168-77 93 0 158.5 65.5t65.5 158.5-65.5 158.5-158.5 65.5h440q14 0 23 9t9 23z\"}]}}),h.register({\"git-square\":{width:1536,height:1792,paths:[{d:\"M582 1308q0 66-93 66-107 0-107-63 0-64 98-64 102 0 102 61zM546 842q0 85-74 85-77 0-77-84 0-90 77-90 36 0 55 25.5t19 63.5zM712 767v-125q-78 29-135 29-50-29-110-29-86 0-145 57t-59 143q0 50 29.5 102t73.5 67v3q-38 17-38 85 0 53 41 77v3q-113 37-113 139 0 45 20 78.5t54 51 72 25.5 81 8q224 0 224-188 0-67-48-99t-126-46q-27-5-51.5-20.5t-24.5-39.5q0-44 49-52 77-15 122-70t45-134q0-24-10-52 37-9 49-13zM771 1186h137q-2-27-2-82v-387q0-46 2-69h-137q3 23 3 71v392q0 50-3 75zM1280 1170v-121q-30 21-68 21-53 0-53-82v-225h52q9 0 26.5 1t26.5 1v-117h-105q0-82 3-102h-140q4 24 4 55v47h-60v117q36-3 37-3 3 0 11 0.5t12 0.5v2h-2v217q0 37 2.5 64t11.5 56.5 24.5 48.5 43.5 31 66 12q64 0 108-24zM924 464q0-36-24-63.5t-60-27.5-60.5 27-24.5 64q0 36 25 62.5t60 26.5 59.5-27 24.5-62zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({git:{width:1792,height:1792,paths:[{d:\"M595 1514q0-100-165-100-158 0-158 104 0 101 172 101 151 0 151-105zM536 759q0-61-30-102t-89-41q-124 0-124 145 0 135 124 135 119 0 119-137zM805 435v202q-36 12-79 22 16 43 16 84 0 127-73 216.5t-197 112.5q-40 8-59.5 27t-19.5 58q0 31 22.5 51.5t58 32 78.5 22 86 25.5 78.5 37.5 58 64 22.5 98.5q0 304-363 304-69 0-130-12.5t-116-41-87.5-82-32.5-127.5q0-165 182-225v-4q-67-41-67-126 0-109 63-137v-4q-72-24-119.5-108.5t-47.5-165.5q0-139 95-231.5t235-92.5q96 0 178 47 98 0 218-47zM1123 1316h-222q4-45 4-134v-609q0-94-4-128h222q-4 33-4 124v613q0 89 4 134zM1724 1094v196q-71 39-174 39-62 0-107-20t-70-50-39.5-78-18.5-92-4-103v-351h2v-4q-7 0-19-1t-18-1q-21 0-59 6v-190h96v-76q0-54-6-89h227q-6 41-6 165h171v190q-15 0-43.5-2t-42.5-2h-85v365q0 131 87 131 61 0 109-33zM1148 147q0 58-39 101.5t-96 43.5q-58 0-98-43.5t-40-101.5q0-59 39.5-103t98.5-44q58 0 96.5 44.5t38.5 102.5z\"}]}}),h.register({\"github-alt\":{width:1664,height:1792,paths:[{d:\"M640 1216q0 40-12.5 82t-43 76-72.5 34-72.5-34-43-76-12.5-82 12.5-82 43-76 72.5-34 72.5 34 43 76 12.5 82zM1280 1216q0 40-12.5 82t-43 76-72.5 34-72.5-34-43-76-12.5-82 12.5-82 43-76 72.5-34 72.5 34 43 76 12.5 82zM1440 1216q0-120-69-204t-187-84q-41 0-195 21-71 11-157 11t-157-11q-152-21-195-21-118 0-187 84t-69 204q0 88 32 153.5t81 103 122 60 140 29.5 149 7h168q82 0 149-7t140-29.5 122-60 81-103 32-153.5zM1664 1040q0 207-61 331-38 77-105.5 133t-141 86-170 47.5-171.5 22-167 4.5q-78 0-142-3t-147.5-12.5-152.5-30-137-51.5-121-81-86-115q-62-123-62-331 0-237 136-396-27-82-27-170 0-116 51-218 108 0 190 39.5t189 123.5q147-35 309-35 148 0 280 32 105-82 187-121t189-39q51 102 51 218 0 87-27 168 136 160 136 398z\"}]}}),h.register({\"github-square\":{width:1536,height:1792,paths:[{d:\"M519 1200q4-6-3-13-9-7-14-2-4 6 3 13 9 7 14 2zM491 1159q-5-7-12-4-6 4 0 12 7 8 12 5 6-4 0-13zM450 1119q2-4-5-8-7-2-8 2-3 5 4 8 8 2 9-2zM471 1142q2-1 1.5-4.5t-3.5-5.5q-6-7-10-3t1 11q6 6 11 2zM557 1217q2-7-9-11-9-3-13 4-2 7 9 11 9 3 13-4zM599 1220q0-8-12-8-10 0-10 8t11 8 11-8zM638 1213q-2-7-13-5t-9 9q2 8 12 6t10-10zM1280 896q0-212-150-362t-362-150-362 150-150 362q0 167 98 300.5t252 185.5q18 3 26.5-5t8.5-20q0-52-1-95-6 1-15.5 2.5t-35.5 2-48-4-43.5-20-29.5-41.5q-23-59-57-74-2-1-4.5-3.5l-8-8t-7-9.5 4-7.5 19.5-3.5q6 0 15 2t30 15.5 33 35.5q16 28 37.5 42t43.5 14 38-3.5 30-9.5q7-47 33-69-49-6-86-18.5t-73-39-55.5-76-19.5-119.5q0-79 53-137-24-62 5-136 19-6 54.5 7.5t60.5 29.5l26 16q58-17 128-17t128 17q11-7 28.5-18t55.5-26 57-9q29 74 5 136 53 58 53 137 0 57-14 100.5t-35.5 70-53.5 44.5-62.5 26-68.5 12q35 31 35 95 0 40-0.5 89t-0.5 51q0 12 8.5 20t26.5 5q154-52 252-185.5t98-300.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({github:{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5q0 251-146.5 451.5t-378.5 277.5q-27 5-40-7t-13-30q0-3 0.5-76.5t0.5-134.5q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-119-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-85-13.5q-45 113-8 204-79 87-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-39 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 0.5 88.5t0.5 54.5q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103zM291 1231q3-7-7-12-10-3-13 2-3 7 7 12 9 6 13-2zM322 1265q7-5-2-16-10-9-16-3-7 5 2 16 10 10 16 3zM352 1310q9-7 0-19-8-13-17-6-9 5 0 18t17 7zM394 1352q8-8-4-19-12-12-20-3-9 8 4 19 12 12 20 3zM451 1377q3-11-13-16-15-4-19 7t13 15q15 6 19-6zM514 1382q0-13-17-11-16 0-16 11 0 13 17 11 16 0 16-11zM572 1372q-2-11-18-9-16 3-14 15t18 8 14-14z\"}]}}),h.register({gitlab:{width:1792,height:1792,paths:[{d:\"M104 706l792 1015-868-630q-18-13-25-34.5t0-42.5l101-308v0zM566 706h660l-330 1015v0zM368 94l198 612h-462l198-612q8-23 33-23t33 23zM1688 706l101 308q7 21 0 42.5t-25 34.5l-868 630 792-1015v0zM1688 706h-462l198-612q8-23 33-23t33 23z\"}]}}),h.register({gittip:{width:1536,height:1792,paths:[{d:\"M773 1302l350-473q16-22 24.5-59t-6-85-61.5-79q-40-26-83-25.5t-73.5 17.5-54.5 45q-36 40-96 40-59 0-95-40-24-28-54.5-45t-73.5-17.5-84 25.5q-46 31-60.5 79t-6 85 24.5 59zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({glass:{width:1792,height:1792,paths:[{d:\"M1699 186q0 35-43 78l-632 632v768h320q26 0 45 19t19 45-19 45-45 19h-896q-26 0-45-19t-19-45 19-45 45-19h320v-768l-632-632q-43-43-43-78 0-23 18-36.5t38-17.5 43-4h1408q23 0 43 4t38 17.5 18 36.5z\"}]}}),h.register({\"glide-g\":{width:1535,height:1792,paths:[{d:\"M744 305q0-24-2-38.5t-8.5-30-21-23-37.5-7.5q-39 0-78 23-105 58-159 190.5t-54 269.5q0 44 8.5 85.5t26.5 80.5 52.5 62.5 81.5 23.5q4 0 18 0.5t20 0 16-3 15-8.5 7-16q16-77 48-231.5t48-231.5q19-91 19-146zM1498 961q0 7-7.5 13.5t-15.5 6.5l-6-1q-22-3-62-11t-72-12.5-63-4.5q-167 0-351 93-15 8-21 27-10 36-24.5 105.5t-22.5 100.5q-23 91-70 179.5t-112.5 164.5-154.5 123-185 47q-135 0-214.5-83.5t-79.5-219.5q0-53 19.5-117t63-116.5 97.5-52.5q38 0 120 33.5t83 61.5q0 1-16.5 12.5t-39.5 31-46 44.5-39 61-16 74q0 33 16.5 53t48.5 20q45 0 85-31.5t66.5-78 48-105.5 32.5-107 16-90v-9q0-2-3.5-3.5t-8.5-1.5h-10t-10 0.5-6 0.5q-227 0-352-122.5t-125-348.5q0-108 34.5-221t96-210 156-167.5 204.5-89.5q52-9 106-9 374 0 374 360 0 98-38 273t-43 211l3 3q101-57 182.5-88t167.5-31q22 0 53 13 19 7 80 102.5t61 116.5z\"}]}}),h.register({glide:{width:1536,height:1792,paths:[{\nd:\"M866 515q0 27-13 94-11 50-31.5 150t-30.5 150q-2 11-4.5 12.5t-13.5 2.5q-20 2-31 2-58 0-84-49.5t-26-113.5q0-88 35-174t103-124q28-14 51-14 28 0 36.5 16.5t8.5 47.5zM1352 939q0-14-39-75.5t-52-66.5q-21-8-34-8-91 0-226 77l-2-2q3-22 27.5-135t24.5-178q0-233-242-233-24 0-68 6-94 17-168.5 89.5t-111.5 166.5-37 189q0 146 80.5 225t227.5 79q25 0 25 3t-1 5q-4 34-26 117-14 52-51.5 101t-82.5 49q-42 0-42-47 0-24 10.5-47.5t25-39.5 29.5-28.5 26-20 11-8.5q0-3-7-10-24-22-58.5-36.5t-65.5-14.5q-35 0-63.5 34t-41 75-12.5 75q0 88 51.5 142t138.5 54q82 0 155-53t117.5-126 65.5-153q6-22 15.5-66.5t14.5-66.5q3-12 14-18 118-60 227-60 48 0 127 18 1 1 4 1 5 0 9.5-4.5t4.5-8.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({globe:{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1042 649q-2 1-9.5 9.5t-13.5 9.5q2 0 4.5-5t5-11 3.5-7q6-7 22-15 14-6 52-12 34-8 51 11-2-2 9.5-13t14.5-12q3-2 15-4.5t15-7.5l2-22q-12 1-17.5-7t-6.5-21q0 2-6 8 0-7-4.5-8t-11.5 1-9 1q-10-3-15-7.5t-8-16.5-4-15q-2-5-9.5-11t-9.5-10q-1-2-2.5-5.5t-3-6.5-4-5.5-5.5-2.5-7 5-7.5 10-4.5 5q-3-2-6-1.5t-4.5 1-4.5 3-5 3.5q-3 2-8.5 3t-8.5 2q15-5-1-11-10-4-16-3 9-4 7.5-12t-8.5-14h5q-1-4-8.5-8.5t-17.5-8.5-13-6q-8-5-34-9.5t-33-0.5q-5 6-4.5 10.5t4 14 3.5 12.5q1 6-5.5 13t-6.5 12q0 7 14 15.5t10 21.5q-3 8-16 16t-16 12q-5 8-1.5 18.5t10.5 16.5q2 2 1.5 4t-3.5 4.5-5.5 4-6.5 3.5l-3 2q-11 5-20.5-6t-13.5-26q-7-25-16-30-23-8-29 1-5-13-41-26-25-9-58-4 6-1 0-15-7-15-19-12 3-6 4-17.5t1-13.5q3-13 12-23 1-1 7-8.5t9.5-13.5 0.5-6q35 4 50-11 5-5 11.5-17t10.5-17q9-6 14-5.5t14.5 5.5 14.5 5q14 1 15.5-11t-7.5-20q12 1 3-17-4-7-8-9-12-4-27 5-8 4 2 8-1-1-9.5 10.5t-16.5 17.5-16-5q-1-1-5.5-13.5t-9.5-13.5q-8 0-16 15 3-8-11-15t-24-8q19-12-8-27-7-4-20.5-5t-19.5 4q-5 7-5.5 11.5t5 8 10.5 5.5 11.5 4 8.5 3q14 10 8 14-2 1-8.5 3.5t-11.5 4.5-6 4q-3 4 0 14t-2 14q-5-5-9-17.5t-7-16.5q7 9-25 6l-10-1q-4 0-16 2t-20.5 1-13.5-8q-4-8 0-20 1-4 4-2-4-3-11-9.5t-10-8.5q-46 15-94 41 6 1 12-1 5-2 13-6.5t10-5.5q34-14 42-7l5-5q14 16 20 25-7-4-30-1-20 6-22 12 7 12 5 18-4-3-11.5-10t-14.5-11-15-5q-16 0-22 1-146 80-235 222 7 7 12 8 4 1 5 9t2.5 11 11.5-3q9 8 3 19 1-1 44 27 19 17 21 21 3 11-10 18-1-2-9-9t-9-4q-3 5 0.5 18.5t10.5 12.5q-7 0-9.5 16t-2.5 35.5-1 23.5l2 1q-3 12 5.5 34.5t21.5 19.5q-13 3 20 43 6 8 8 9 3 2 12 7.5t15 10 10 10.5q4 5 10 22.5t14 23.5q-2 6 9.5 20t10.5 23q-1 0-2.5 1t-2.5 1q3 7 15.5 14t15.5 13q1 3 2 10t3 11 8 2q2-20-24-62-15-25-17-29-3-5-5.5-15.5t-4.5-14.5q2 0 6 1.5t8.5 3.5 7.5 4 2 3q-3 7 2 17.5t12 18.5 17 19 12 13q6 6 14 19.5t0 13.5q9 0 20 10.5t17 19.5q5 8 8 26t5 24q2 7 8.5 13.5t12.5 9.5l16 8t13 7q5 2 18.5 10.5t21.5 11.5q10 4 16 4t14.5-2.5 13.5-3.5q15-2 29 15t21 21q36 19 55 11-2 1 0.5 7.5t8 15.5 9 14.5 5.5 8.5q5 6 18 15t18 15q6-4 7-9-3 8 7 20t18 10q14-3 14-32-31 15-49-18 0-1-2.5-5.5t-4-8.5-2.5-8.5 0-7.5 5-3q9 0 10-3.5t-2-12.5-4-13q-1-8-11-20t-12-15q-5 9-16 8t-16-9q0 1-1.5 5.5t-1.5 6.5q-13 0-15-1 1-3 2.5-17.5t3.5-22.5q1-4 5.5-12t7.5-14.5 4-12.5-4.5-9.5-17.5-2.5q-19 1-26 20-1 3-3 10.5t-5 11.5-9 7q-7 3-24 2t-24-5q-13-8-22.5-29t-9.5-37q0-10 2.5-26.5t3-25-5.5-24.5q3-2 9-9.5t10-10.5q2-1 4.5-1.5t4.5 0 4-1.5 3-6q-1-1-4-3-3-3-4-3 7 3 28.5-1.5t27.5 1.5q15 11 22-2 0-1-2.5-9.5t-0.5-13.5q5 27 29 9 3 3 15.5 5t17.5 5q3 2 7 5.5t5.5 4.5 5-0.5 8.5-6.5q10 14 12 24 11 40 19 44 7 3 11 2t4.5-9.5 0-14-1.5-12.5l-1-8v-18l-1-8q-15-3-18.5-12t1.5-18.5 15-18.5q1-1 8-3.5t15.5-6.5 12.5-8q21-19 15-35 7 0 11-9-1 0-5-3t-7.5-5-4.5-2q9-5 2-16 5-3 7.5-11t7.5-10q9 12 21 2 8-8 1-16 5-7 20.5-10.5t18.5-9.5q7 2 8-2t1-12 3-12q4-5 15-9t13-5l17-11q3-4 0-4 18 2 31-11 10-11-6-20 3-6-3-9.5t-15-5.5q3-1 11.5-0.5t10.5-1.5q15-10-7-16-17-5-43 12zM879 1526q206-36 351-189-3-3-12.5-4.5t-12.5-3.5q-18-7-24-8 1-7-2.5-13t-8-9-12.5-8-11-7q-2-2-7-6t-7-5.5-7.5-4.5-8.5-2-10 1l-3 1q-3 1-5.5 2.5t-5.5 3-4 3 0 2.5q-21-17-36-22-5-1-11-5.5t-10.5-7-10-1.5-11.5 7q-5 5-6 15t-2 13q-7-5 0-17.5t2-18.5q-3-6-10.5-4.5t-12 4.5-11.5 8.5-9 6.5-8.5 5.5-8.5 7.5q-3 4-6 12t-5 11q-2-4-11.5-6.5t-9.5-5.5q2 10 4 35t5 38q7 31-12 48-27 25-29 40-4 22 12 26 0 7-8 20.5t-7 21.5q0 6 2 16z\"}]}}),h.register({\"google-plus-circle\":{width:1536,height:1792,paths:[{d:\"M917 905q0-33-6-64h-362v132h217q-12 76-74.5 120.5t-142.5 44.5q-99 0-169-71.5t-70-170.5 70-170.5 169-71.5q93 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"google-plus-official\":{width:1536,height:1792,paths:[{d:\"M917 905q0-33-6-64h-362v132h217q-12 76-74.5 120.5t-142.5 44.5q-99 0-169-71.5t-70-170.5 70-170.5 169-71.5q93 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"google-plus-square\":{width:1536,height:1792,paths:[{d:\"M917 905q0-26-6-64h-362v132h217q-3 24-16.5 50t-37.5 53-66.5 44.5-96.5 17.5q-99 0-169-71t-70-171 70-171 169-71q92 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"google-plus\":{width:2304,height:1792,paths:[{d:\"M1437 913q0 208-87 370.5t-248 254-369 91.5q-149 0-285-58t-234-156-156-234-58-285 58-285 156-234 234-156 285-58q286 0 491 192l-199 191q-117-113-292-113-123 0-227.5 62t-165.5 168.5-61 232.5 61 232.5 165.5 168.5 227.5 62q83 0 152.5-23t114.5-57.5 78.5-78.5 49-83 21.5-74h-416v-252h692q12 63 12 122zM2304 791v210h-209v209h-210v-209h-209v-210h209v-209h210v209h209z\"}]}}),h.register({\"google-wallet\":{width:1792,height:1792,paths:[{d:\"M441 672q33 0 52 26 266 364 362 774h-446q-127-441-367-749-12-16-3-33.5t29-17.5h373zM1000 1029q-49 199-125 393-79-310-256-594 40-221 44-449 211 340 337 650zM1099 320q235 324 384.5 698.5t184.5 773.5h-451q-41-665-553-1472h435zM1792 896q0 424-101 812-67-560-359-1083-25-301-106-584-4-16 5.5-28.5t25.5-12.5h359q21 0 38.5 13t22.5 33q115 409 115 850z\"}]}}),h.register({google:{width:1536,height:1792,paths:[{d:\"M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z\"}]}}),h.register({\"graduation-cap\":{width:2304,height:1792,paths:[{d:\"M1774 836l18 316q4 69-82 128t-235 93.5-323 34.5-323-34.5-235-93.5-82-128l18-316 574 181q22 7 48 7t48-7zM2304 512q0 23-22 31l-1120 352q-4 1-10 1t-10-1l-652-206q-43 34-71 111.5t-34 178.5q63 36 63 109 0 69-58 107l58 433q2 14-8 25-9 11-24 11h-192q-15 0-24-11-10-11-8-25l58-433q-58-38-58-107 0-73 65-111 11-207 98-330l-333-104q-22-8-22-31t22-31l1120-352q4-1 10-1t10 1l1120 352q22 8 22 31z\"}]}}),h.register({gratipay:{width:1536,height:1792,paths:[{d:\"M773 1302l350-473q16-22 24.5-59t-6-85-61.5-79q-40-26-83-25.5t-73.5 17.5-54.5 45q-36 40-96 40-59 0-95-40-24-28-54.5-45t-73.5-17.5-84 25.5q-46 31-60.5 79t-6 85 24.5 59zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({grav:{width:1794,height:1792,paths:[{d:\"M1291 476q-15-17-35-8.5t-26 28.5 5 38q14 17 40 14.5t34-20.5-18-52zM895 722q-8 8-19.5 8t-18.5-8q-8-8-8-19t8-18q7-8 18.5-8t19.5 8q7 7 7 18t-7 19zM1060 796l-35 35q-12 13-29.5 13t-30.5-13l-38-38q-12-13-12-30t12-30l35-35q12-12 29.5-12t30.5 12l38 39q12 12 12 29.5t-12 29.5zM951 666q-7 8-18.5 8t-19.5-8q-7-8-7-19t7-19q8-8 19-8t19 8 8 19-8 19zM1354 568q-34 64-107.5 85.5t-127.5-16.5q-38-28-61-66.5t-21-87.5 39-92 75.5-53 70.5 5 70 51q2 2 13 12.5t14.5 13.5 13 13.5 12.5 15.5 10 15.5 8.5 18 4 18.5 1 21-5 22-9.5 24zM1555 1050q3-20-8.5-34.5t-27.5-21.5-33-17-23-20q-40-71-84-98.5t-113-11.5q19-13 40-18.5t33-4.5l12 1q2-45-34-90 6-20 6.5-40.5t-2.5-30.5l-3-10q43-24 71-65t34-91q10-84-43-150.5t-137-76.5q-60-7-114 18.5t-82 74.5q-30 51-33.5 101t14.5 87 43.5 64 56.5 42q-45-4-88-36t-57-88q-28-108 32-222-16-21-29-32-50 0-89 19 19-24 42-37t36-14l13-1q0-50-13-78-10-21-32.5-28.5t-47 3.5-37.5 40q2-4 4-7-7 28-6.5 75.5t19 117 48.5 122.5q-25 14-47 36-35 16-85.5 70.5t-84.5 101.5l-33 46q-90 34-181 125.5t-75 162.5q1 16 11 27-15 12-30 30-21 25-21 54t21.5 40 63.5-6q41-19 77-49.5t55-60.5q-2-2-6.5-5t-20.5-7.5-33-3.5q23-5 51-12.5t40-10 27.5-6 26-4 23.5-0.5q14 7 22-34 7-37 7-90 0-102-40-150 106 103 101 219-1 29-15 50t-27 27l-13 6q-4 7-19 32t-26 45.5-26.5 52-25 61-17 63-6.5 66.5 10 63q-35-54-37-80-22 24-34.5 39t-33.5 42-30.5 46-16.5 41-0.5 38 25.5 27q45 25 144-64t190.5-221.5 122.5-228.5q86-52 145-115.5t86-119.5q47 93 154 178 104 83 167 80 39-2 46-43zM1794 896q0 182-71 348t-191 286-286.5 191-348.5 71-348.5-71-286.5-191-191-286-71-348 71-348 191-286 286.5-191 348.5-71 348.5 71 286.5 191 191 286 71 348z\"}]}}),h.register({group:{width:1920,height:1792,paths:[{d:\"M593 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zM1664 1533q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zM640 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1344 640q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1920 865q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zM1792 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z\"}]}}),h.register({\"h-square\":{width:1536,height:1792,paths:[{d:\"M1280 1344v-896q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-512v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v896q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h512v320q0 26 19 45t45 19h128q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"hacker-news\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"hand-grab-o\":{width:1536,height:1792,paths:[{d:\"M768 384q-53 0-90.5 37.5t-37.5 90.5v128h-32v-93q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v429l-32-30v-172q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v224q0 47 35 82l310 296q39 39 39 102 0 26 19 45t45 19h640q26 0 45-19t19-45v-25q0-41 10-77l108-436q10-36 10-77v-246q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v32h-32v-125q0-40-25-72.5t-64-40.5q-14-2-23-2-46 0-79 33t-33 79v128h-32v-122q0-51-32.5-89.5t-82.5-43.5q-5-1-13-1zM768 256q84 0 149 50 57-34 123-34 59 0 111 27t86 76q27-7 59-7 100 0 170 71.5t70 171.5v246q0 51-13 108l-109 436q-6 24-6 71 0 80-56 136t-136 56h-640q-84 0-138-58.5t-54-142.5l-308-296q-76-73-76-175v-224q0-99 70.5-169.5t169.5-70.5q11 0 16 1 6-95 75.5-160t164.5-65q52 0 98 21 72-69 174-69z\"}]}}),h.register({\"hand-lizard-o\":{width:2048,height:1792,paths:[{d:\"M1151 0q61 0 116 28t91 77l572 781q118 159 118 359v355q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-177l-286-143h-546q-80 0-136-56t-56-136v-32q0-119 84.5-203.5t203.5-84.5h420l42-128h-686q-100 0-173.5-67.5t-81.5-166.5q-65-79-65-182v-32q0-80 56-136t136-56h959zM1920 1600v-355q0-157-93-284l-573-781q-39-52-103-52h-959q-26 0-45 19t-19 45q0 32 1.5 49.5t9.5 40.5 25 43q10-31 35.5-50t56.5-19h832v32h-832q-26 0-45 19t-19 45q0 44 3 58 8 44 44 73t81 29h640 91q40 0 68 28t28 68q0 15-5 30l-64 192q-10 29-35 47.5t-56 18.5h-443q-66 0-113 47t-47 113v32q0 26 19 45t45 19h561q16 0 29 7l317 158q24 13 38.5 36t14.5 50v197q0 26 19 45t45 19h384q26 0 45-19t19-45z\"}]}}),h.register({\"hand-o-down\":{width:1536,height:1792,paths:[{d:\"M1408 960q0-84-32-183t-64-194-32-167v-32h-640v32q0 35-12 67.5t-37 62.5-46 50-54 49q-9 8-14 12-81 72-145 112-22 14-68 38-3 1-22.5 10.5t-36 18.5-35.5 20-30.5 21.5-11.5 18.5q0 71 30.5 115.5t97.5 44.5q43 0 84.5-15t68-33 55-33 48.5-15v576q0 50 38.5 89t89.5 39q52 0 90-38t38-90v-331q46 35 103 35 69 0 119-53 32 18 69 18t73.5-17.5 52.5-47.5q24 4 56 4 85 0 126-48.5t41-135.5zM1280 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 956q0 142-77.5 230t-217.5 87l-5-1q-76 61-178 61-22 0-43-3-54 30-119 37v169q0 105-76 180.5t-181 75.5q-103 0-179-76t-76-180v-374q-54 22-128 22-121 0-188.5-81.5t-67.5-206.5q0-38 17.5-69.5t49.5-55 63-40.5 72-37 62-33q55-35 129-100 3-2 17-14t21.5-19 21.5-20.5 22.5-24 18-22.5 14-23.5 4.5-21.5v-288q0-53 37.5-90.5t90.5-37.5h640q53 0 90.5 37.5t37.5 90.5v288q0 59 59 223 69 190 69 317z\"}]}}),h.register({\"hand-o-left\":{width:1792,height:1792,paths:[{d:\"M1376 1408h32v-640h-32q-35 0-67.5-12t-62.5-37-50-46-49-54q-8-9-12-14-72-81-112-145-14-22-38-68-1-3-10.5-22.5t-18.5-36-20-35.5-21.5-30.5-18.5-11.5q-71 0-115.5 30.5t-44.5 97.5q0 43 15 84.5t33 68 33 55 15 48.5h-576q-50 0-89 38.5t-39 89.5q0 52 38 90t90 38h331q-15 17-25 47.5t-10 55.5q0 69 53 119-18 32-18 69t17.5 73.5 47.5 52.5q-4 24-4 56 0 85 48.5 126t135.5 41q84 0 183-32t194-64 167-32zM1664 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1792 768v640q0 53-37.5 90.5t-90.5 37.5h-288q-59 0-223 59-190 69-317 69-142 0-230-77.5t-87-217.5l1-5q-61-76-61-178 0-22 3-43-33-57-37-119h-169q-105 0-180.5-76t-75.5-181q0-103 76-179t180-76h374q-22-60-22-128 0-122 81.5-189t206.5-67q38 0 69.5 17.5t55 49.5 40.5 63 37 72 33 62q35 55 100 129 2 3 14 17t19 21.5 20.5 21.5 24 22.5 22.5 18 23.5 14 21.5 4.5h288q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({\"hand-o-right\":{width:1792,height:1792,paths:[{d:\"M256 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 768q0-51-39-89.5t-89-38.5h-576q0-20 15-48.5t33-55 33-68 15-84.5q0-67-44.5-97.5t-115.5-30.5q-24 0-90 139-24 44-37 65-40 64-112 145-71 81-101 106-69 57-140 57h-32v640h32q72 0 167 32t193.5 64 179.5 32q189 0 189-167 0-26-5-56 30-16 47.5-52.5t17.5-73.5-18-69q53-50 53-119 0-25-10-55.5t-25-47.5h331q52 0 90-38t38-90zM1792 767q0 105-75.5 181t-180.5 76h-169q-4 62-37 119 3 21 3 43 0 101-60 178 1 139-85 219.5t-227 80.5q-133 0-322-69-164-59-223-59h-288q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h288q10 0 21.5-4.5t23.5-14 22.5-18 24-22.5 20.5-21.5 19-21.5 14-17q65-74 100-129 13-21 33-62t37-72 40.5-63 55-49.5 69.5-17.5q125 0 206.5 67t81.5 189q0 68-22 128h374q104 0 180 76t76 179z\"}]}}),h.register({\"hand-o-up\":{width:1536,height:1792,paths:[{d:\"M1280 1600q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 836q0-189-167-189-26 0-56 5-16-30-52.5-47.5t-73.5-17.5-69 18q-50-53-119-53-25 0-55.5 10t-47.5 25v-331q0-52-38-90t-90-38q-51 0-89.5 39t-38.5 89v576q-20 0-48.5-15t-55-33-68-33-84.5-15q-67 0-97.5 44.5t-30.5 115.5q0 24 139 90 44 24 65 37 64 40 145 112 81 71 106 101 57 69 57 140v32h640v-32q0-72 32-167t64-193.5 32-179.5zM1536 831q0 133-69 322-59 164-59 223v288q0 53-37.5 90.5t-90.5 37.5h-640q-53 0-90.5-37.5t-37.5-90.5v-288q0-10-4.5-21.5t-14-23.5-18-22.5-22.5-24-21.5-20.5-21.5-19-17-14q-74-65-129-100-21-13-62-33t-72-37-63-40.5-49.5-55-17.5-69.5q0-125 67-206.5t189-81.5q68 0 128 22v-374q0-104 76-180t179-76q105 0 181 75.5t76 180.5v169q62 4 119 37 21-3 43-3 101 0 178 60 139-1 219.5 85t80.5 227z\"}]}}),h.register({\"hand-paper-o\":{width:1792,height:1792,paths:[{d:\"M880 128q-46 0-79 33t-33 79v656h-32v-528q0-46-33-79t-79-33-79 33-33 79v528 256l-154-205q-38-51-102-51-53 0-90.5 37.5t-37.5 90.5q0 43 26 77l384 512q38 51 102 51h688q34 0 61-22t34-56l76-405q5-32 5-59v-498q0-46-33-79t-79-33-79 33-33 79v272h-32v-528q0-46-33-79t-79-33-79 33-33 79v528h-32v-656q0-46-33-79t-79-33zM880 0q68 0 125.5 35.5t88.5 96.5q19-4 42-4 99 0 169.5 70.5t70.5 169.5v17q105-6 180.5 64t75.5 175v498q0 40-8 83l-76 404q-14 79-76.5 131t-143.5 52h-688q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-106 75-181t181-75q78 0 128 34v-434q0-99 70.5-169.5t169.5-70.5q23 0 42 4 31-61 88.5-96.5t125.5-35.5z\"}]}}),h.register({\"hand-peace-o\":{width:1536,height:1792,paths:[{d:\"M1288 647q60 0 107 23 141 63 141 226v177q0 94-23 186l-85 339q-21 86-90.5 140t-157.5 54h-668q-106 0-181-75t-75-181v-401l-239-628q-17-45-17-91 0-106 75-181t181-75q80 0 145.5 45.5t93.5 119.5l17 44v-113q0-106 75-181t181-75 181 75 75 181v261q27-5 48-5 69 0 127.5 36.5t88.5 98.5zM1072 640q-33 0-60.5 18t-41.5 48l-74 163-71 155h55q50 0 90 31.5t50 80.5l154-338q10-20 10-46 0-46-33-79t-79-33zM1293 775q-22 0-40.5 8t-29 16-23.5 29.5-17 30.5-17 37l-132 290q-10 20-10 46 0 46 33 79t79 33q33 0 60.5-18t41.5-48l160-352q9-18 9-38 0-50-32-81.5t-82-31.5zM128 416q0 22 8 46l248 650v69l102-111q43-46 106-46h198l106-233v-535q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5v640h-64l-200-526q-14-37-47-59.5t-73-22.5q-53 0-90.5 37.5t-37.5 90.5zM1180 1664q44 0 78.5-27t45.5-70l85-339q19-73 19-155v-91l-141 310q-17 38-53 61t-78 23q-53 0-93.5-34.5t-48.5-86.5q-44 57-114 57h-208v-32h208q46 0 81-33t35-79-31-79-77-33h-296q-49 0-82 36l-126 136v308q0 53 37.5 90.5t90.5 37.5h668z\"}]}}),h.register({\"hand-pointer-o\":{width:1792,height:1792,paths:[{d:\"M640 128q-53 0-90.5 37.5t-37.5 90.5v512 384l-151-202q-41-54-107-54-52 0-89 38t-37 90q0 43 26 77l384 512q38 51 102 51h718q22 0 39.5-13.5t22.5-34.5l92-368q24-96 24-194v-217q0-41-28-71t-68-30-68 28-28 68h-32v-61q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v64h-32v-90q0-55-37-94.5t-91-39.5q-53 0-90.5 37.5t-37.5 90.5v96h-32v-570q0-55-37-94.5t-91-39.5zM640 0q107 0 181.5 77.5t74.5 184.5v220q22-2 32-2 99 0 173 69 47-21 99-21 113 0 184 87 27-7 56-7 94 0 159 67.5t65 161.5v217q0 116-28 225l-92 368q-16 64-68 104.5t-118 40.5h-718q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-105 74.5-180.5t179.5-75.5q71 0 130 35v-547q0-106 75-181t181-75zM768 1408v-384h-32v384h32zM1024 1408v-384h-32v384h32zM1280 1408v-384h-32v384h32z\"}]}}),h.register({\"hand-rock-o\":{width:1536,height:1792,paths:[{d:\"M768 384q-53 0-90.5 37.5t-37.5 90.5v128h-32v-93q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v429l-32-30v-172q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v224q0 47 35 82l310 296q39 39 39 102 0 26 19 45t45 19h640q26 0 45-19t19-45v-25q0-41 10-77l108-436q10-36 10-77v-246q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v32h-32v-125q0-40-25-72.5t-64-40.5q-14-2-23-2-46 0-79 33t-33 79v128h-32v-122q0-51-32.5-89.5t-82.5-43.5q-5-1-13-1zM768 256q84 0 149 50 57-34 123-34 59 0 111 27t86 76q27-7 59-7 100 0 170 71.5t70 171.5v246q0 51-13 108l-109 436q-6 24-6 71 0 80-56 136t-136 56h-640q-84 0-138-58.5t-54-142.5l-308-296q-76-73-76-175v-224q0-99 70.5-169.5t169.5-70.5q11 0 16 1 6-95 75.5-160t164.5-65q52 0 98 21 72-69 174-69z\"}]}}),h.register({\"hand-scissors-o\":{width:1792,height:1792,paths:[{d:\"M1073 1664h-177q-163 0-226-141-23-49-23-102v-5q-62-30-98.5-88.5t-36.5-127.5q0-38 5-48h-261q-106 0-181-75t-75-181 75-181 181-75h113l-44-17q-74-28-119.5-93.5t-45.5-145.5q0-106 75-181t181-75q46 0 91 17l628 239h401q106 0 181 75t75 181v668q0 88-54 157.5t-140 90.5l-339 85q-92 23-186 23zM1024 953l-155 71-163 74q-30 14-48 41.5t-18 60.5q0 46 33 79t79 33q26 0 46-10l338-154q-49-10-80.5-50t-31.5-90v-55zM1344 1264q0-46-33-79t-79-33q-26 0-46 10l-290 132q-28 13-37 17t-30.5 17-29.5 23.5-16 29-8 40.5q0 50 31.5 82t81.5 32q20 0 38-9l352-160q30-14 48-41.5t18-60.5zM1112 512l-650-248q-24-8-46-8-53 0-90.5 37.5t-37.5 90.5q0 40 22.5 73t59.5 47l526 200v64h-640q-53 0-90.5 37.5t-37.5 90.5 37.5 90.5 90.5 37.5h535l233-106v-198q0-63 46-106l111-102h-69zM1073 1536q82 0 155-19l339-85q43-11 70-45.5t27-78.5v-668q0-53-37.5-90.5t-90.5-37.5h-308l-136 126q-36 33-36 82v296q0 46 33 77t79 31 79-35 33-81v-208h32v208q0 70-57 114 52 8 86.5 48.5t34.5 93.5q0 42-23 78t-61 53l-310 141h91z\"}]}}),h.register({\"hand-spock-o\":{width:2048,height:1792,paths:[{d:\"M459 1792q-77 0-137.5-47.5t-79.5-122.5l-101-401q-13-57-13-108 0-45-5-67l-116-477q-7-27-7-57 0-93 62-161t155-78q17-85 82.5-139t152.5-54q83 0 148 51.5t85 132.5l83 348 103-428q20-81 85-132.5t148-51.5q89 0 155.5 57.5t80.5 144.5q92 10 152 79t60 162q0 24-7 59l-123 512q10-7 37.5-28.5t38.5-29.5 35-23 41-20.5 41.5-11 49.5-5.5q105 0 180 74t75 179q0 62-28.5 118t-78.5 94l-507 380q-68 51-153 51h-694zM1104 128q-38 0-68.5 24t-39.5 62l-164 682h-127l-145-602q-9-38-39.5-62t-68.5-24q-48 0-80 33t-32 80q0 15 3 28l132 547h-26l-99-408q-9-37-40-62.5t-69-25.5q-47 0-80 33t-33 79q0 14 3 26l116 478q7 28 9 86t10 88l100 401q8 32 34 52.5t59 20.5h694q42 0 76-26l507-379q56-43 56-110 0-52-37.5-88.5t-89.5-36.5q-43 0-77 26l-307 230v-227q0-4 32-138t68-282 39-161q4-18 4-29 0-47-32-81t-79-34q-39 0-69.5 24t-39.5 62l-116 482h-26l150-624q3-14 3-28 0-48-31.5-82t-79.5-34z\"}]}}),h.register({\"hand-stop-o\":{width:1792,height:1792,paths:[{d:\"M880 128q-46 0-79 33t-33 79v656h-32v-528q0-46-33-79t-79-33-79 33-33 79v528 256l-154-205q-38-51-102-51-53 0-90.5 37.5t-37.5 90.5q0 43 26 77l384 512q38 51 102 51h688q34 0 61-22t34-56l76-405q5-32 5-59v-498q0-46-33-79t-79-33-79 33-33 79v272h-32v-528q0-46-33-79t-79-33-79 33-33 79v528h-32v-656q0-46-33-79t-79-33zM880 0q68 0 125.5 35.5t88.5 96.5q19-4 42-4 99 0 169.5 70.5t70.5 169.5v17q105-6 180.5 64t75.5 175v498q0 40-8 83l-76 404q-14 79-76.5 131t-143.5 52h-688q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-106 75-181t181-75q78 0 128 34v-434q0-99 70.5-169.5t169.5-70.5q23 0 42 4 31-61 88.5-96.5t125.5-35.5z\"}]}}),h.register({\"handshake-o\":{width:2304,height:1792,paths:[{d:\"M192 1152q40 0 56-32t0-64-56-32-56 32 0 64 56 32zM1665 1094q-10-13-38.5-50t-41.5-54-38-49-42.5-53-40.5-47-45-49l-125 140q-83 94-208.5 92t-205.5-98q-57-69-56.5-158t58.5-157l177-206q-22-11-51-16.5t-47.5-6-56.5 0.5-49 1q-92 0-158 66l-158 158h-155v544q5 0 21-0.5t22 0 19.5 2 20.5 4.5 17.5 8.5 18.5 13.5l297 292q115 111 227 111 78 0 125-47 57 20 112.5-8t72.5-85q74 6 127-44 20-18 36-45.5t14-50.5q10 10 43 10 43 0 77-21t49.5-53 12-71.5-30.5-73.5zM1824 1152h96v-512h-93l-157-180q-66-76-169-76h-167q-89 0-146 67l-209 243q-28 33-28 75t27 75q43 51 110 52t111-49l193-218q25-23 53.5-21.5t47 27 8.5 56.5q16 19 56 63t60 68q29 36 82.5 105.5t64.5 84.5q52 66 60 140zM2112 1152q40 0 56-32t0-64-56-32-56 32 0 64 56 32zM2304 576v640q0 26-19 45t-45 19h-434q-27 65-82 106.5t-125 51.5q-33 48-80.5 81.5t-102.5 45.5q-42 53-104.5 81.5t-128.5 24.5q-60 34-126 39.5t-127.5-14-117-53.5-103.5-81l-287-282h-358q-26 0-45-19t-19-45v-672q0-26 19-45t45-19h421q14-14 47-48t47.5-48 44-40 50.5-37.5 51-25.5 62-19.5 68-5.5h117q99 0 181 56 82-56 181-56h167q35 0 67 6t56.5 14.5 51.5 26.5 44.5 31 43 39.5 39 42 41 48 41.5 48.5h355q26 0 45 19t19 45z\"}]}}),h.register({\"hard-of-hearing\":{width:1792,height:1792,paths:[{d:\"M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z\"}]}}),h.register({hashtag:{width:1792,height:1792,paths:[{d:\"M991 1024l64-256h-254l-64 256h254zM1759 520l-56 224q-7 24-31 24h-327l-64 256h311q15 0 25 12 10 14 6 28l-56 224q-5 24-31 24h-327l-81 328q-7 24-31 24h-224q-16 0-26-12-9-12-6-28l78-312h-254l-81 328q-7 24-31 24h-225q-15 0-25-12-9-12-6-28l78-312h-311q-15 0-25-12-9-12-6-28l56-224q7-24 31-24h327l64-256h-311q-15 0-25-12-10-14-6-28l56-224q5-24 31-24h327l81-328q7-24 32-24h224q15 0 25 12 9 12 6 28l-78 312h254l81-328q7-24 32-24h224q15 0 25 12 9 12 6 28l-78 312h311q15 0 25 12 9 12 6 28z\"}]}}),h.register({\"hdd-o\":{width:1536,height:1792,paths:[{d:\"M1040 1216q0 33-23.5 56.5t-56.5 23.5-56.5-23.5-23.5-56.5 23.5-56.5 56.5-23.5 56.5 23.5 23.5 56.5zM1296 1216q0 33-23.5 56.5t-56.5 23.5-56.5-23.5-23.5-56.5 23.5-56.5 56.5-23.5 56.5 23.5 23.5 56.5zM1408 1376v-320q0-13-9.5-22.5t-22.5-9.5h-1216q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5-9.5t9.5-22.5zM178 896h1180l-157-482q-4-13-16-21.5t-26-8.5h-782q-14 0-26 8.5t-16 21.5zM1536 1056v320q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-320q0-25 16-75l197-606q17-53 63-86t101-33h782q55 0 101 33t63 86l197 606q16 50 16 75z\"}]}}),h.register({header:{width:1792,height:1792,paths:[{d:\"M1682 1664q-44 0-132.5-3.5t-133.5-3.5q-44 0-132 3.5t-132 3.5q-24 0-37-20.5t-13-45.5q0-31 17-46t39-17 51-7 45-15q33-21 33-140l-1-391q0-21-1-31-13-4-50-4h-675q-38 0-51 4-1 10-1 31l-1 371q0 142 37 164 16 10 48 13t57 3.5 45 15 20 45.5q0 26-12.5 48t-36.5 22q-47 0-139.5-3.5t-138.5-3.5q-43 0-128 3.5t-127 3.5q-23 0-35.5-21t-12.5-45q0-30 15.5-45t36-17.5 47.5-7.5 42-15q33-23 33-143l-1-57v-813q0-3 0.5-26t0-36.5-1.5-38.5-3.5-42-6.5-36.5-11-31.5-16-18q-15-10-45-12t-53-2-41-14-18-45q0-26 12-48t36-22q46 0 138.5 3.5t138.5 3.5q42 0 126.5-3.5t126.5-3.5q25 0 37.5 22t12.5 48q0 30-17 43.5t-38.5 14.5-49.5 4-43 13q-35 21-35 160l1 320q0 21 1 32 13 3 39 3h699q25 0 38-3 1-11 1-32l1-320q0-139-35-160-18-11-58.5-12.5t-66-13-25.5-49.5q0-26 12.5-48t37.5-22q44 0 132 3.5t132 3.5q43 0 129-3.5t129-3.5q25 0 37.5 22t12.5 48q0 30-17.5 44t-40 14.5-51.5 3-44 12.5q-35 23-35 161l1 943q0 119 34 140 16 10 46 13.5t53.5 4.5 41.5 15.5 18 44.5q0 26-12 48t-36 22z\"}]}}),h.register({headphones:{width:1664,height:1792,paths:[{d:\"M1664 886q0 166-60 314l-20 49-185 33q-22 83-90.5 136.5t-156.5 53.5v32q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23v32q71 0 130 35.5t93 95.5l68-12q29-95 29-193 0-148-88-279t-236.5-209-315.5-78-315.5 78-236.5 209-88 279q0 98 29 193l68 12q34-60 93-95.5t130-35.5v-32q0-14 9-23t23-9h64q14 0 23 9t9 23v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-32q-88 0-156.5-53.5t-90.5-136.5l-185-33-20-49q-60-148-60-314 0-151 67-291t179-242.5 266-163.5 320-61 320 61 266 163.5 179 242.5 67 291z\"}]}}),h.register({\"heart-o\":{width:1792,height:1792,paths:[{d:\"M1664 596q0-81-21.5-143t-55-98.5-81.5-59.5-94-31-98-8-112 25.5-110.5 64-86.5 72-60 61.5q-18 22-49 22t-49-22q-24-28-60-61.5t-86.5-72-110.5-64-112-25.5-98 8-94 31-81.5 59.5-55 98.5-21.5 143q0 168 187 355l581 560 580-559q188-188 188-356zM1792 596q0 221-229 450l-623 600q-18 18-44 18t-44-18l-624-602q-10-8-27.5-26t-55.5-65.5-68-97.5-53.5-121-23.5-138q0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344z\"}]}}),h.register({heart:{width:1792,height:1792,paths:[{d:\"M896 1664q-26 0-44-18l-624-602q-10-8-27.5-26t-55.5-65.5-68-97.5-53.5-121-23.5-138q0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344q0 221-229 450l-623 600q-18 18-44 18z\"}]}}),h.register({heartbeat:{width:1792,height:1792,paths:[{d:\"M1280 1024h305q-5 6-10 10.5t-9 7.5l-3 4-623 600q-18 18-44 18t-44-18l-624-602q-5-2-21-20h369q22 0 39.5-13.5t22.5-34.5l70-281 190 667q6 20 23 33t39 13q21 0 38-13t23-33l146-485 56 112q18 35 57 35zM1792 596q0 145-103 300h-369l-111-221q-8-17-25.5-27t-36.5-8q-45 5-56 46l-129 430-196-686q-6-20-23.5-33t-39.5-13-39 13.5-22 34.5l-116 464h-423q-103-155-103-300 0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344z\"}]}}),h.register({history:{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298zM896 608v448q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-352q0-14 9-23t23-9h64q14 0 23 9t9 23z\"}]}}),h.register({home:{width:1664,height:1792,paths:[{d:\"M1408 992v480q0 26-19 45t-45 19h-384v-384h-256v384h-384q-26 0-45-19t-19-45v-480q0-1 0.5-3t0.5-3l575-474 575 474q1 2 1 6zM1631 923l-62 74q-8 9-21 11h-3q-13 0-21-7l-692-577-692 577q-12 8-24 7-13-2-21-11l-62-74q-8-10-7-23.5t11-21.5l719-599q32-26 76-26t76 26l244 204v-195q0-14 9-23t23-9h192q14 0 23 9t9 23v408l219 182q10 8 11 21.5t-7 23.5z\"}]}}),h.register({\"hospital-o\":{width:1408,height:1792,paths:[{d:\"M384 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1664h384v-1152h-256v32q0 40-28 68t-68 28h-448q-40 0-68-28t-28-68v-32h-256v1152h384v-224q0-13 9.5-22.5t22.5-9.5h320q13 0 22.5 9.5t9.5 22.5v224zM896 480v-320q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v96h-128v-96q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5v-96h128v96q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1408 448v1280q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1280q0-26 19-45t45-19h320v-288q0-40 28-68t68-28h448q40 0 68 28t28 68v288h320q26 0 45 19t19 45z\"}]}}),h.register({hotel:{width:2048,height:1792,paths:[{d:\"M256 1024h1728q26 0 45 19t19 45v448h-256v-256h-1536v256h-256v-1216q0-26 19-45t45-19h128q26 0 45 19t19 45v704zM832 704q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM2048 960v-64q0-159-112.5-271.5t-271.5-112.5h-704q-26 0-45 19t-19 45v384h1152z\"}]}}),h.register({\"hourglass-1\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 66 9 128h1006q9-61 9-128zM1280 1664q0-130-34-249.5t-90.5-208-126.5-152-146-94.5h-230q-76 31-146 94.5t-126.5 152-90.5 208-34 249.5h1024z\"}]}}),h.register({\"hourglass-2\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 206 85 384h854q85-178 85-384zM1223 1344q-54-141-145.5-241.5t-194.5-142.5h-230q-103 42-194.5 142.5t-145.5 241.5h910z\"}]}}),h.register({\"hourglass-3\":{width:1536,height:1792,paths:[{\nd:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-137 51-244 196h700q-107-145-244-196-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z\"}]}}),h.register({\"hourglass-end\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-137 51-244 196h700q-107-145-244-196-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z\"}]}}),h.register({\"hourglass-half\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 206 85 384h854q85-178 85-384zM1223 1344q-54-141-145.5-241.5t-194.5-142.5h-230q-103 42-194.5 142.5t-145.5 241.5h910z\"}]}}),h.register({\"hourglass-o\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-77 29-149 92.5t-129.5 152.5-92.5 210-35 253h1024q0-132-35-253t-92.5-210-129.5-152.5-149-92.5q-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z\"}]}}),h.register({\"hourglass-start\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 66 9 128h1006q9-61 9-128zM1280 1664q0-130-34-249.5t-90.5-208-126.5-152-146-94.5h-230q-76 31-146 94.5t-126.5 152-90.5 208-34 249.5h1024z\"}]}}),h.register({hourglass:{width:1536,height:1792,paths:[{d:\"M1504 1600q14 0 23 9t9 23v128q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h1472zM130 1536q3-55 16-107t30-95 46-87 53.5-76 64.5-69.5 66-60 70.5-55 66.5-47.5 65-43q-43-28-65-43t-66.5-47.5-70.5-55-66-60-64.5-69.5-53.5-76-46-87-30-95-16-107h1276q-3 55-16 107t-30 95-46 87-53.5 76-64.5 69.5-66 60-70.5 55-66.5 47.5-65 43q43 28 65 43t66.5 47.5 70.5 55 66 60 64.5 69.5 53.5 76 46 87 30 95 16 107h-1276zM1504 0q14 0 23 9t9 23v128q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h1472z\"}]}}),h.register({houzz:{width:1024,height:1792,paths:[{d:\"M512 1191l512-295v591l-512 296v-592zM0 896v591l512-296zM512 9v591l-512 296v-591zM512 600l512-295v591z\"}]}}),h.register({html5:{width:1408,height:1792,paths:[{d:\"M1130 597l16-175h-884l47 534h612l-22 228-197 53-196-53-13-140h-175l22 278 362 100h4v-1l359-99 50-544h-644l-15-181h674zM0 128h1408l-128 1438-578 162-574-162z\"}]}}),h.register({\"i-cursor\":{width:1024,height:1792,paths:[{d:\"M832 128q-320 0-320 224v416h128v128h-128v544q0 224 320 224h64v128h-64q-272 0-384-146-112 146-384 146h-64v-128h64q320 0 320-224v-544h-128v-128h128v-416q0-224-320-224h-64v-128h64q272 0 384 146 112-146 384-146h64v128h-64z\"}]}}),h.register({\"id-badge\":{width:1280,height:1792,paths:[{d:\"M1024 1258q0 64-37 107t-91 43h-512q-54 0-91-43t-37-107 9-118 29.5-104 61-78.5 96.5-28.5q80 75 188 75t188-75q56 0 96.5 28.5t61 78.5 29.5 104 9 118zM870 739q0 94-67.5 160.5t-162.5 66.5-162.5-66.5-67.5-160.5 67.5-160.5 162.5-66.5 162.5 66.5 67.5 160.5zM1152 1632v-1376h-1024v1376q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1280 160v1472q0 66-47 113t-113 47h-960q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h352v96q0 14 9 23t23 9h192q14 0 23-9t9-23v-96h352q66 0 113 47t47 113z\"}]}}),h.register({\"id-card-o\":{width:2048,height:1792,paths:[{d:\"M896 1212q0 55-31.5 93.5t-75.5 38.5h-426q-44 0-75.5-38.5t-31.5-93.5q0-54 7.5-100.5t24.5-90 51-68.5 81-25q64 64 156 64t156-64q47 0 81 25t51 68.5 24.5 90 7.5 100.5zM768 768q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1184v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1408 928v64q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h320q14 0 23 9t9 23zM1792 928v64q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 672v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1920 1504v-1120h-1792v1120q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"id-card\":{width:2048,height:1792,paths:[{d:\"M896 1212q0-54-7.5-100.5t-24.5-90-51-68.5-81-25q-64 64-156 64t-156-64q-47 0-81 25t-51 68.5-24.5 90-7.5 100.5q0 55 31.5 93.5t75.5 38.5h426q44 0 75.5-38.5t31.5-93.5zM768 768q0-80-56-136t-136-56-136 56-56 136 56 136 136 56 136-56 56-136zM1792 1248v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1408 992v-64q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23-9t9-23zM1792 992v-64q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v64q0 14 9 23t23 9h192q14 0 23-9t9-23zM1792 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM128 384h1792v-96q0-14-9-23t-23-9h-1728q-14 0-23 9t-9 23v96zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({ils:{width:1536,height:1792,paths:[{d:\"M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({image:{width:1920,height:1792,paths:[{d:\"M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({imdb:{width:1536,height:1792,paths:[{d:\"M922 797v182q0 4 0.5 15t0 15l-1.5 12t-3.5 11.5-6.5 7.5-11 5.5-16 1.5v-309q9 0 16 1t11 5 6.5 5.5 3.5 9.5 1 10.5v13.5 14zM1238 893v121q0 1 0.5 12.5t0 15.5-2.5 11.5-7.5 10.5-13.5 3q-9 0-14-9-4-10-4-165v-7-8.5-9t1.5-8.5l3.5-7t5-5.5 8-1.5q6 0 10 1.5t6.5 4.5 4 6 2 8.5 0.5 8v9.5 9zM180 1129h122v-472h-122v472zM614 1129h106v-472h-159l-28 221q-20-148-32-221h-158v472h107v-312l45 312h76l43-319v319zM1039 824q0-67-5-90-3-16-11-28.5t-17-20.5-25-14-26.5-8.5-31-4-29-1.5h-29.5-12-91v472h56q169 1 197-24.5t25-180.5q-1-62-1-100zM1356 1021v-133q0-29-2-45t-9.5-33.5-24.5-25-46-7.5q-46 0-77 34v-154h-117v472h110l7-30q30 36 77 36 50 0 66-30.5t16-83.5zM1536 288v1216q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1216q66 0 113 47t47 113z\"}]}}),h.register({inbox:{width:1536,height:1792,paths:[{d:\"M1023 960h316q-1-3-2.5-8.5t-2.5-7.5l-212-496h-708l-212 496q-1 3-2.5 8.5t-2.5 7.5h316l95 192h320zM1536 990v482q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-482q0-62 25-123l238-552q10-25 36.5-42t52.5-17h832q26 0 52.5 17t36.5 42l238 552q25 61 25 123z\"}]}}),h.register({indent:{width:1792,height:1792,paths:[{d:\"M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({industry:{width:1792,height:1792,paths:[{d:\"M448 0q26 0 45 19t19 45v891l536-429q17-14 40-14 26 0 45 19t19 45v379l536-429q17-14 40-14 26 0 45 19t19 45v1152q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h384z\"}]}}),h.register({\"info-circle\":{width:1536,height:1792,paths:[{d:\"M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zM896 480v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({info:{width:640,height:1792,paths:[{d:\"M640 1344v128q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64v-384h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h384q26 0 45 19t19 45v576h64q26 0 45 19t19 45zM512 192v192q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-192q0-26 19-45t45-19h256q26 0 45 19t19 45z\"}]}}),h.register({inr:{width:898,height:1792,paths:[{d:\"M898 470v102q0 14-9 23t-23 9h-168q-23 144-129 234t-276 110q167 178 459 536 14 16 4 34-8 18-29 18h-195q-16 0-25-12-306-367-498-571-9-9-9-22v-127q0-13 9.5-22.5t22.5-9.5h112q132 0 212.5-43t102.5-125h-427q-14 0-23-9t-9-23v-102q0-14 9-23t23-9h413q-57-113-268-113h-145q-13 0-22.5-9.5t-9.5-22.5v-133q0-14 9-23t23-9h832q14 0 23 9t9 23v102q0 14-9 23t-23 9h-233q47 61 64 144h171q14 0 23 9t9 23z\"}]}}),h.register({instagram:{width:1536,height:1792,paths:[{d:\"M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1162 896q0 164-115 279t-279 115-279-115-115-279 115-279 279-115 279 115 115 279zM1270 486q0 38-27 65t-65 27-65-27-27-65 27-65 65-27 65 27 27 65zM768 266q-7 0-76.5-0.5t-105.5 0-96.5 3-103 10-71.5 18.5q-50 20-88 58t-58 88q-11 29-18.5 71.5t-10 103-3 96.5 0 105.5 0.5 76.5-0.5 76.5 0 105.5 3 96.5 10 103 18.5 71.5q20 50 58 88t88 58q29 11 71.5 18.5t103 10 96.5 3 105.5 0 76.5-0.5 76.5 0.5 105.5 0 96.5-3 103-10 71.5-18.5q50-20 88-58t58-88q11-29 18.5-71.5t10-103 3-96.5 0-105.5-0.5-76.5 0.5-76.5 0-105.5-3-96.5-10-103-18.5-71.5q-20-50-58-88t-88-58q-29-11-71.5-18.5t-103-10-96.5-3-105.5 0-76.5 0.5zM1536 896q0 229-5 317-10 208-124 322t-322 124q-88 5-317 5t-317-5q-208-10-322-124t-124-322q-5-88-5-317t5-317q10-208 124-322t322-124q88-5 317-5t317 5q208 10 322 124t124 322q5 88 5 317z\"}]}}),h.register({institution:{width:2048,height:1792,paths:[{d:\"M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z\"}]}}),h.register({\"internet-explorer\":{width:1792,height:1792,paths:[{d:\"M1792 937q0 56-7 104h-1151q0 146 109.5 244.5t257.5 98.5q99 0 185.5-46.5t136.5-130.5h423q-56 159-170.5 281t-267.5 188.5-321 66.5q-187 0-356-83-228 116-394 116-237 0-237-263 0-115 45-275 17-60 109-229 199-360 475-606-184 79-427 354 63-274 283.5-449.5t501.5-175.5q30 0 45 1 255-117 433-117 64 0 116 13t94.5 40.5 66.5 76.5 24 115q0 116-75 286 101 182 101 390zM1722 297q0-83-53-132t-137-49q-108 0-254 70 121 47 222.5 131.5t170.5 195.5q51-135 51-216zM128 1534q0 86 48.5 132.5t134.5 46.5q115 0 266-83-122-72-213.5-183t-137.5-245q-98 205-98 332zM632 821h728q-5-142-113-237t-251-95q-144 0-251.5 95t-112.5 237z\"}]}}),h.register({intersex:{width:1536,height:1792,paths:[{d:\"M1024 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-149-16-270.5-103t-186.5-223.5-53-291.5q16-204 160-353.5t347-172.5q118-14 228 19t198 103l255-254h-134q-14 0-23-9t-9-23v-64zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({ioxhost:{width:2048,height:1792,paths:[{d:\"M1463 832q0 35-25 60.5t-61 25.5h-702q-36 0-61-25.5t-25-60.5 25-60.5 61-25.5h702q36 0 61 25.5t25 60.5zM1677 832q0-86-23-170h-982q-36 0-61-25t-25-60q0-36 25-61t61-25h908q-88-143-235-227t-320-84q-177 0-327.5 87.5t-238 237.5-87.5 327q0 86 23 170h982q36 0 61 25t25 60q0 36-25 61t-61 25h-908q88 143 235.5 227t320.5 84q132 0 253-51.5t208-139 139-208 52-253.5zM2048 577q0 35-25 60t-61 25h-131q17 85 17 170 0 167-65.5 319.5t-175.5 263-262.5 176-319.5 65.5q-246 0-448.5-133t-301.5-350h-189q-36 0-61-25t-25-61q0-35 25-60t61-25h132q-17-85-17-170 0-167 65.5-319.5t175.5-263 262.5-176 320.5-65.5q245 0 447.5 133t301.5 350h188q36 0 61 25t25 61z\"}]}}),h.register({italic:{width:1024,height:1792,paths:[{d:\"M0 1662l17-85q22-7 61.5-16.5t72-19 59.5-23.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z\"}]}}),h.register({joomla:{width:1536,height:1792,paths:[{d:\"M1070 1073l-160 160-151 152-30 30q-65 64-151.5 87t-171.5 2q-16 70-72 115t-129 45q-85 0-145-60.5t-60-145.5q0-72 44.5-128t113.5-72q-22-86 1-173t88-152l12-12 151 152-11 11q-37 37-37 89t37 90q37 37 89 37t89-37l30-30 151-152 161-160zM729 391l12 12-152 152-12-12q-37-37-89-37t-89 37-37 89.5 37 89.5l29 29 152 152 160 160-151 152-161-160-151-152-30-30q-68-67-90-159.5t5-179.5q-70-15-115-71t-45-129q0-85 60-145.5t145-60.5q76 0 133.5 49t69.5 123q84-20 169.5 3.5t149.5 87.5zM1536 1458q0 85-60 145.5t-145 60.5q-74 0-131-47t-71-118q-86 28-179.5 6t-161.5-90l-11-12 151-152 12 12q37 37 89 37t89-37 37-89-37-89l-30-30-152-152-160-160 152-152 160 160 152 152 29 30q64 64 87.5 150.5t2.5 171.5q76 11 126.5 68.5t50.5 134.5zM1534 334q0 77-51 135t-127 69q26 85 3 176.5t-90 158.5l-12 12-151-152 12-12q37-37 37-89t-37-89-89-37-89 37l-30 30-152 152-160 160-152-152 161-160 152-152 29-30q67-67 159-89.5t178 3.5q11-75 68.5-126t135.5-51q85 0 145 60.5t60 145.5z\"}]}}),h.register({jpy:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({jsfiddle:{width:2048,height:1792,paths:[{d:\"M1800 772q111 46 179.5 145.5t68.5 221.5q0 164-118 280.5t-285 116.5q-4 0-11.5-0.5t-10.5-0.5h-1209-1-2-5q-170-10-288-125.5t-118-280.5q0-110 55-203t147-147q-12-39-12-82 0-115 82-196t199-81q95 0 172 58 75-154 222.5-248t326.5-94q166 0 306 80.5t221.5 218.5 81.5 301q0 6-0.5 18t-0.5 18zM468 1038q0 122 84 193t208 71q137 0 240-99-16-20-47.5-56.5t-43.5-50.5q-67 65-144 65-55 0-93.5-33.5t-38.5-87.5q0-53 38.5-87t91.5-34q44 0 84.5 21t73 55 65 75 69 82 77 75 97 55 121.5 21q121 0 204.5-71.5t83.5-190.5q0-121-84-192t-207-71q-143 0-241 97l93 108q66-64 142-64 52 0 92 33t40 84q0 57-37 91.5t-94 34.5q-43 0-82.5-21t-72-55-65.5-75-69.5-82-77.5-75-96.5-55-118.5-21q-122 0-207 70.5t-85 189.5z\"}]}}),h.register({key:{width:1792,height:1792,paths:[{d:\"M832 512q0-80-56-136t-136-56-136 56-56 136q0 42 19 83-41-19-83-19-80 0-136 56t-56 136 56 136 136 56 136-56 56-136q0-42-19-83 41 19 83 19 80 0 136-56t56-136zM1683 1216q0 17-49 66t-66 49q-9 0-28.5-16t-36.5-33-38.5-40-24.5-26l-96 96 220 220q28 28 28 68 0 42-39 81t-81 39q-40 0-68-28l-671-671q-176 131-365 131-163 0-265.5-102.5t-102.5-265.5q0-160 95-313t248-248 313-95q163 0 265.5 102.5t102.5 265.5q0 189-131 365l355 355 96-96q-3-3-26-24.5t-40-38.5-33-36.5-16-28.5q0-17 49-66t66-49q13 0 23 10 6 6 46 44.5t82 79.5 86.5 86 73 78 28.5 41z\"}]}}),h.register({\"keyboard-o\":{width:1920,height:1792,paths:[{d:\"M384 1168v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM512 912v96q0 16-16 16h-224q-16 0-16-16v-96q0-16 16-16h224q16 0 16 16zM384 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1408 1168v96q0 16-16 16h-864q-16 0-16-16v-96q0-16 16-16h864q16 0 16 16zM768 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM640 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1024 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM896 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1280 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1664 1168v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1152 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1408 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1664 656v352q0 16-16 16h-224q-16 0-16-16v-96q0-16 16-16h112v-240q0-16 16-16h96q16 0 16 16zM1792 1408v-896h-1664v896h1664zM1920 512v896q0 53-37.5 90.5t-90.5 37.5h-1664q-53 0-90.5-37.5t-37.5-90.5v-896q0-53 37.5-90.5t90.5-37.5h1664q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({krw:{width:1792,height:1792,paths:[{d:\"M514 1195l81-299h-159l75 300q1 1 1 3t1 3q0-1 0.5-3.5t0.5-3.5zM630 768l35-128h-292l32 128h225zM822 768h139l-35-128h-70zM1271 1196l78-300h-162l81 299q0 1 0.5 3.5t1.5 3.5q0-1 0.5-3t0.5-3zM1382 768l33-128h-297l34 128h230zM1792 800v64q0 14-9 23t-23 9h-213l-164 616q-7 24-31 24h-159q-24 0-31-24l-166-616h-209l-167 616q-7 24-31 24h-159q-11 0-19.5-7t-10.5-17l-160-616h-208q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h175l-33-128h-142q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h109l-89-344q-5-15 5-28 10-12 26-12h137q26 0 31 24l90 360h359l97-360q7-24 31-24h126q24 0 31 24l98 360h365l93-360q5-24 31-24h137q16 0 26 12 10 13 5 28l-91 344h111q14 0 23 9t9 23v64q0 14-9 23t-23 9h-145l-34 128h179q14 0 23 9t9 23z\"}]}}),h.register({language:{width:1536,height:1792,paths:[{d:\"M654 1078q-1 3-12.5-0.5t-31.5-11.5l-20-9q-44-20-87-49-7-5-41-31.5t-38-28.5q-67 103-134 181-81 95-105 110-4 2-19.5 4t-18.5 0q6-4 82-92 21-24 85.5-115t78.5-118q17-30 51-98.5t36-77.5q-8-1-110 33-8 2-27.5 7.5t-34.5 9.5-17 5q-2 2-2 10.5t-1 9.5q-5 10-31 15-23 7-47 0-18-4-28-21-4-6-5-23 6-2 24.5-5t29.5-6q58-16 105-32 100-35 102-35 10-2 43-19.5t44-21.5q9-3 21.5-8t14.5-5.5 6 0.5q2 12-1 33 0 2-12.5 27t-26.5 53.5-17 33.5q-25 50-77 131l64 28q12 6 74.5 32t67.5 28q4 1 10.5 25.5t4.5 30.5zM449 592q3 15-4 28-12 23-50 38-30 12-60 12-26-3-49-26-14-15-18-41l1-3q3 3 19.5 5t26.5 0 58-16q36-12 55-14 17 0 21 17zM1147 721l63 227-139-42zM39 1521l694-232v-1032l-694 233v1031zM1280 1204l102 31-181-657-100-31-216 536 102 31 45-110 211 65zM777 242l573 184v-380zM1088 1565l158 13-54 160-40-66q-130 83-276 108-58 12-91 12h-84q-79 0-199.5-39t-183.5-85q-8-7-8-16 0-8 5-13.5t13-5.5q4 0 18 7.5t30.5 16.5 20.5 11q73 37 159.5 61.5t157.5 24.5q95 0 167-14.5t157-50.5q15-7 30.5-15.5t34-19 28.5-16.5zM1536 486v1079l-774-246q-14 6-375 127.5t-368 121.5q-13 0-18-13 0-1-1-3v-1078q3-9 4-10 5-6 20-11 107-36 149-50v-384l558 198q2 0 160.5-55t316-108.5 161.5-53.5q20 0 20 21v418z\"}]}}),h.register({laptop:{width:1920,height:1792,paths:[{d:\"M416 1280q-66 0-113-47t-47-113v-704q0-66 47-113t113-47h1088q66 0 113 47t47 113v704q0 66-47 113t-113 47h-1088zM384 416v704q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5-9.5t9.5-22.5v-704q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5zM1760 1344h160v96q0 40-47 68t-113 28h-1600q-66 0-113-28t-47-68v-96h160 1600zM1040 1440q16 0 16-16t-16-16h-160q-16 0-16 16t16 16h160z\"}]}}),h.register({\"lastfm-square\":{width:1536,height:1792,paths:[{d:\"M1432 1052q0-173-234-239-35-10-53-16.5t-38-25-29-46.5q0-2-2-8.5t-3-12-1-7.5q0-36 24.5-59.5t60.5-23.5q54 0 71 15h-1q20 15 39 51l93-71q-39-54-49-64-33-29-67.5-39t-85.5-10q-80 0-142 57.5t-62 137.5q0 7 2 23 16 96 64.5 140t148.5 73q29 8 49 15.5t45 21.5 38.5 34.5 13.5 46.5v5q1 58-40.5 93t-100.5 35q-97 0-167-144-23-47-51.5-121.5t-48-125.5-54-110.5-74-95.5-103.5-60.5-147-24.5q-101 0-192 56t-144 148-50 192v1q4 108 50.5 199t133.5 147.5 196 56.5q186 0 279-110 20-27 31-51l-60-109q-42 80-99 116t-146 36q-115 0-191-87t-76-204q0-105 82-189t186-84q112 0 170 53.5t104 172.5q8 21 25.5 68.5t28.5 76.5 31.5 74.5 38.5 74 45.5 62.5 55.5 53.5 66 33 80 13.5q107 0 183-69.5t76-174.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({lastfm:{width:1792,height:1792,paths:[{d:\"M1292 704q0 6 10 41 10 29 25 49.5t41 34 44 20 55 16.5q325 91 325 332 0 146-105.5 242.5t-254.5 96.5q-59 0-111.5-18.5t-91.5-45.5-77-74.5-63-87.5-53.5-103.5-43.5-103-39.5-106.5-35.5-95q-32-81-61.5-133.5t-73.5-96.5-104-64-142-20q-96 0-183 55.5t-138 144.5-51 185q0 160 106.5 279.5t263.5 119.5q177 0 258-95 56-63 83-116l84 152q-15 34-44 70l1 1q-131 152-388 152-147 0-269.5-79t-190.5-207.5-68-274.5q0-105 43.5-206t116-176.5 172-121.5 204.5-46q87 0 159 19t123.5 50 95 80 72.5 99 58.5 117 50.5 124.5 50 130.5 55 127q96 200 233 200 81 0 138.5-48.5t57.5-128.5q0-42-19-72t-50.5-46-72.5-31.5-84.5-27-87.5-34-81-52-65-82-39-122.5q-3-16-3-33 0-110 87.5-192t198.5-78q78 3 120.5 14.5t90.5 53.5h-1q12 11 23 24.5t26 36 19 27.5l-129 99q-26-49-54-70v-1q-23-21-97-21-49 0-84 33t-35 83z\"}]}}),h.register({leaf:{width:1792,height:1792,paths:[{d:\"M1280 704q0-26-19-45t-45-19q-172 0-318 49.5t-259.5 134-235.5 219.5q-19 21-19 45 0 26 19 45t45 19q24 0 45-19 27-24 74-71t67-66q137-124 268.5-176t313.5-52q26 0 45-19t19-45zM1792 506q0 95-20 193-46 224-184.5 383t-357.5 268q-214 108-438 108-148 0-286-47-15-5-88-42t-96-37q-16 0-39.5 32t-45 70-52.5 70-60 32q-43 0-63.5-17.5t-45.5-59.5q-2-4-6-11t-5.5-10-3-9.5-1.5-13.5q0-35 31-73.5t68-65.5 68-56 31-48q0-4-14-38t-16-44q-9-51-9-104 0-115 43.5-220t119-184.5 170.5-139 204-95.5q55-18 145-25.5t179.5-9 178.5-6 163.5-24 113.5-56.5l29.5-29.5t29.5-28 27-20 36.5-16 43.5-4.5q39 0 70.5 46t47.5 112 24 124 8 96z\"}]}}),h.register({leanpub:{width:2048,height:1792,paths:[{d:\"M1893 392l155 1272q-131 0-257-57-200-91-393-91-226 0-374 148-148-148-374-148-193 0-393 91-128 57-252 57h-5l155-1272q224-127 482-127 233 0 387 106 154-106 387-106 258 0 482 127zM1398 1379q129 0 232 28.5t260 93.5l-124-1021q-171-78-368-78-224 0-374 141-150-141-374-141-197 0-368 78l-124 1021q105-43 165.5-65t148.5-39.5 178-17.5q202 0 374 108 172-108 374-108zM1438 1345l-55-907q-211 4-359 155-152-155-374-155-176 0-336 66l-114 941q124-51 228.5-76t221.5-25q209 0 374 102 172-107 374-102z\"}]}}),h.register({legal:{width:1792,height:1792,paths:[{d:\"M1771 1536q0 53-37 90l-107 108q-39 37-91 37-53 0-90-37l-363-364q-38-36-38-90 0-53 43-96l-256-256-126 126q-14 14-34 14t-34-14q2 2 12.5 12t12.5 13 10 11.5 10 13.5 6 13.5 5.5 16.5 1.5 18q0 38-28 68-3 3-16.5 18t-19 20.5-18.5 16.5-22 15.5-22 9-26 4.5q-40 0-68-28l-408-408q-28-28-28-68 0-13 4.5-26t9-22 15.5-22 16.5-18.5 20.5-19 18-16.5q30-28 68-28 10 0 18 1.5t16.5 5.5 13.5 6 13.5 10 11.5 10 13 12.5 12 12.5q-14-14-14-34t14-34l348-348q14-14 34-14t34 14q-2-2-12.5-12t-12.5-13-10-11.5-10-13.5-6-13.5-5.5-16.5-1.5-18q0-38 28-68 3-3 16.5-18t19-20.5 18.5-16.5 22-15.5 22-9 26-4.5q40 0 68 28l408 408q28 28 28 68 0 13-4.5 26t-9 22-15.5 22-16.5 18.5-20.5 19-18 16.5q-30 28-68 28-10 0-18-1.5t-16.5-5.5-13.5-6-13.5-10-11.5-10-13-12.5-12-12.5q14 14 14 34t-14 34l-126 126 256 256q43-43 96-43 52 0 91 37l363 363q37 39 37 91z\"}]}}),h.register({\"lemon-o\":{width:1536,height:1792,paths:[{d:\"M1407 826q0-44-7-113.5t-18-96.5q-12-30-17-44t-9-36.5-4-48.5q0-23 5-68.5t5-67.5q0-37-10-55-4-1-13-1-19 0-58 4.5t-59 4.5q-60 0-176-24t-175-24q-43 0-94.5 11.5t-85 23.5-89.5 34q-137 54-202 103-96 73-159.5 189.5t-88 236-24.5 248.5q0 40 12.5 120t12.5 121q0 23-11 66.5t-11 65.5 12 36.5 34 14.5q24 0 72.5-11t73.5-11q57 0 169.5 15.5t169.5 15.5q181 0 284-36 129-45 235.5-152.5t166-245.5 59.5-275zM1535 824q0 165-70 327.5t-196 288-281 180.5q-124 44-326 44-57 0-170-14.5t-169-14.5q-24 0-72.5 14.5t-73.5 14.5q-73 0-123.5-55.5t-50.5-128.5q0-24 11-68t11-67q0-40-12.5-120.5t-12.5-121.5q0-111 18-217.5t54.5-209.5 100.5-194 150-156q78-59 232-120 194-78 316-78 60 0 175.5 24t173.5 24q19 0 57-5t58-5q81 0 118 50.5t37 134.5q0 23-5 68t-5 68q0 13 2 25t3.5 16.5 7.5 20.5 8 20q16 40 25 118.5t9 136.5z\"}]}}),h.register({\"level-down\":{width:1024,height:1792,paths:[{d:\"M32 256h704q13 0 22.5 9.5t9.5 23.5v863h192q40 0 58 37t-9 69l-320 384q-18 22-49 22t-49-22l-320-384q-26-31-9-69 18-37 58-37h192v-640h-320q-14 0-25-11l-160-192q-13-14-4-34 9-19 29-19z\"}]}}),h.register({\"level-up\":{width:1024,height:1792,paths:[{d:\"M1018 603q-18 37-58 37h-192v864q0 14-9 23t-23 9h-704q-21 0-29-18-8-20 4-35l160-192q9-11 25-11h320v-640h-192q-40 0-58-37-17-37 9-68l320-384q18-22 49-22t49 22l320 384q27 32 9 68z\"}]}}),h.register({\"life-bouy\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"life-buoy\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"life-ring\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"life-saver\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"lightbulb-o\":{width:1024,height:1792,paths:[{d:\"M736 576q0 13-9.5 22.5t-22.5 9.5-22.5-9.5-9.5-22.5q0-46-54-71t-106-25q-13 0-22.5-9.5t-9.5-22.5 9.5-22.5 22.5-9.5q50 0 99.5 16t87 54 37.5 90zM896 576q0-72-34.5-134t-90-101.5-123-62-136.5-22.5-136.5 22.5-123 62-90 101.5-34.5 134q0 101 68 180 10 11 30.5 33t30.5 33q128 153 141 298h228q13-145 141-298 10-11 30.5-33t30.5-33q68-79 68-180zM1024 576q0 155-103 268-45 49-74.5 87t-59.5 95.5-34 107.5q47 28 47 82 0 37-25 64 25 27 25 64 0 52-45 81 13 23 13 47 0 46-31.5 71t-77.5 25q-20 44-60 70t-87 26-87-26-60-70q-46 0-77.5-25t-31.5-71q0-24 13-47-45-29-45-81 0-37 25-64-25-27-25-64 0-54 47-82-4-50-34-107.5t-59.5-95.5-74.5-87q-103-113-103-268 0-99 44.5-184.5t117-142 164-89 186.5-32.5 186.5 32.5 164 89 117 142 44.5 184.5z\"}]}}),h.register({\"line-chart\":{width:2048,height:1792,paths:[{d:\"M2048 1536v128h-2048v-1536h128v1408h1920zM1920 288v435q0 21-19.5 29.5t-35.5-7.5l-121-121-633 633q-10 10-23 10t-23-10l-233-233-416 416-192-192 585-585q10-10 23-10t23 10l233 233 464-464-121-121q-16-16-7.5-35.5t29.5-19.5h435q14 0 23 9t9 23z\"}]}}),h.register({link:{width:1664,height:1792,paths:[{d:\"M1456 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zM753 511q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z\"}]}}),h.register({\"linkedin-square\":{width:1536,height:1792,paths:[{d:\"M237 1414h231v-694h-231v694zM483 506q-1-52-36-86t-93-34-94.5 34-36.5 86q0 51 35.5 85.5t92.5 34.5h1q59 0 95-34.5t36-85.5zM1068 1414h231v-398q0-154-73-233t-193-79q-136 0-209 117h2v-101h-231q3 66 0 694h231v-388q0-38 7-56 15-35 45-59.5t74-24.5q116 0 116 157v371zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({linkedin:{width:1536,height:1792,paths:[{d:\"M349 625v991h-330v-991h330zM370 319q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zM1536 1048v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"}]}}),h.register({linode:{width:1536,height:1792,paths:[{d:\"M330 1535l202 214-34-236-216-213zM556 1761l274-218-11-245-300 215zM245 1123l227 213-48-327-245-204zM495 1347l317-214-14-324-352 200zM843 1358l95 80-2-239-103-79q0 1 1 8.5t0 12-5 7.5l-78 52 85 70q7 6 7 88zM138 606l256 200-68-465-279-173zM1173 1269l15-234-230 164 2 240zM417 814l373-194-19-441-423 163zM1270 1179l20-233-226-142-2 105 144 95q6 4 4 9l-7 119zM1461 1040l30-222-179 128-20 228zM1273 1207l-71-49-8 117q0 5-4 8l-234 187q-7 5-14 0l-98-83 7 161q0 5-4 8l-293 234q-4 2-6 2-8-2-8-3l-228-242q-4-4-59-277-2-7 5-11l61-37q-94-86-95-92l-72-351q-2-7 6-12l94-45q-133-100-135-108l-96-466q-2-10 7-13l433-135q5 0 8 1l317 153q6 4 6 9l20 463q0 7-6 10l-118 61 126 85q5 2 5 8l5 123 121-74q5-4 11 0l84 56 3-110q0-6 5-9l206-126q6-3 11 0l245 135q4 4 5 7t-6.5 60-17.5 124.5-10 70.5q0 5-4 7l-191 153q-6 5-13 0z\"}]}}),h.register({linux:{width:1536,height:1792,paths:[{\nd:\"M663 411q-11 1-15.5 10.5t-8.5 9.5q-5 1-5-5 0-12 19-15h10zM750 425q-4 1-11.5-6.5t-17.5-4.5q24-11 32 2 3 6-3 9zM399 852q-4-1-6 3t-4.5 12.5-5.5 13.5-10 13q-10 11-1 12 4 1 12.5-7t12.5-18q1-3 2-7t2-6 1.5-4.5 0.5-4v-3t-1-2.5-3-2zM1254 1211q0-18-55-42 4-15 7.5-27.5t5-26 3-21.5 0.5-22.5-1-19.5-3.5-22-4-20.5-5-25-5.5-26.5q-10-48-47-103t-72-75q24 20 57 83 87 162 54 278-11 40-50 42-31 4-38.5-18.5t-8-83.5-11.5-107q-9-39-19.5-69t-19.5-45.5-15.5-24.5-13-15-7.5-7q-14-62-31-103t-29.5-56-23.5-33-15-40q-4-21 6-53.5t4.5-49.5-44.5-25q-15-3-44.5-18t-35.5-16q-8-1-11-26t8-51 36-27q37-3 51 30t4 58q-11 19-2 26.5t30 0.5q13-4 13-36v-37q-5-30-13.5-50t-21-30.5-23.5-15-27-7.5q-107 8-89 134 0 15-1 15-9-9-29.5-10.5t-33 0.5-15.5-5q1-57-16-90t-45-34q-27-1-41.5 27.5t-16.5 59.5q-1 15 3.5 37t13 37.5 15.5 13.5q10-3 16-14 4-9-7-8-7 0-15.5-14.5t-9.5-33.5q-1-22 9-37t34-14q17 0 27 21t9.5 39-1.5 22q-22 15-31 29-8 12-27.5 23.5t-20.5 12.5q-13 14-15.5 27t7.5 18q14 8 25 19.5t16 19 18.5 13 35.5 6.5q47 2 102-15 2-1 23-7t34.5-10.5 29.5-13 21-17.5q9-14 20-8 5 3 6.5 8.5t-3 12-16.5 9.5q-20 6-56.5 21.5t-45.5 19.5q-44 19-70 23-25 5-79-2-10-2-9 2t17 19q25 23 67 22 17-1 36-7t36-14 33.5-17.5 30-17 24.5-12 17.5-2.5 8.5 11q0 2-1 4.5t-4 5-6 4.5-8.5 5-9 4.5-10 5-9.5 4.5q-28 14-67.5 44t-66.5 43-49 1q-21-11-63-73-22-31-25-22-1 3-1 10 0 25-15 56.5t-29.5 55.5-21 58 11.5 63q-23 6-62.5 90t-47.5 141q-2 18-1.5 69t-5.5 59q-8 24-29 3-32-31-36-94-2-28 4-56 4-19-1-18-2 1-4 5-36 65 10 166 5 12 25 28t24 20q20 23 104 90.5t93 76.5q16 15 17.5 38t-14 43-45.5 23q8 15 29 44.5t28 54 7 70.5q46-24 7-92-4-8-10.5-16t-9.5-12-2-6q3-5 13-9.5t20 2.5q46 52 166 36 133-15 177-87 23-38 34-30 12 6 10 52-1 25-23 92-9 23-6 37.5t24 15.5q3-19 14.5-77t13.5-90q2-21-6.5-73.5t-7.5-97 23-70.5q15-18 51-18 1-37 34.5-53t72.5-10.5 60 22.5zM626 384q3-17-2.5-30t-11.5-15q-9-2-9 7 2 5 5 6 10 0 7 15-3 20 8 20 3 0 3-3zM1045 581q-2-8-6.5-11.5t-13-5-14.5-5.5q-5-3-9.5-8t-7-8-5.5-6.5-4-4-4 1.5q-14 16 7 43.5t39 31.5q9 1 14.5-8t3.5-20zM867 368q0-11-5-19.5t-11-12.5-9-3q-6 0-8 2t0 4 5 3q14 4 18 31 0 3 8-2 2-2 2-3zM921 135q0-2-2.5-5t-9-7-9.5-6q-15-15-24-15-9 1-11.5 7.5t-1 13-0.5 12.5q-1 4-6 10.5t-6 9 3 8.5q4 3 8 0t11-9 15-9q1-1 9-1t15-2 9-7zM1486 1476q20 12 31 24.5t12 24-2.5 22.5-15.5 22-23.5 19.5-30 18.5-31.5 16.5-32 15.5-27 13q-38 19-85.5 56t-75.5 64q-17 16-68 19.5t-89-14.5q-18-9-29.5-23.5t-16.5-25.5-22-19.5-47-9.5q-44-1-130-1-19 0-57 1.5t-58 2.5q-44 1-79.5 15t-53.5 30-43.5 28.5-53.5 11.5q-29-1-111-31t-146-43q-19-4-51-9.5t-50-9-39.5-9.5-33.5-14.5-17-19.5q-10-23 7-66.5t18-54.5q1-16-4-40t-10-42.5-4.5-36.5 10.5-27q14-12 57-14t60-12q30-18 42-35t12-51q21 73-32 106-32 20-83 15-34-3-43 10-13 15 5 57 2 6 8 18t8.5 18 4.5 17 1 22q0 15-17 49t-14 48q3 17 37 26 20 6 84.5 18.5t99.5 20.5q24 6 74 22t82.5 23 55.5 4q43-6 64.5-28t23-48-7.5-58.5-19-52-20-36.5q-121-190-169-242-68-74-113-40-11 9-15-15-3-16-2-38 1-29 10-52t24-47 22-42q8-21 26.5-72t29.5-78 30-61 39-54q110-143 124-195-12-112-16-310-2-90 24-151.5t106-104.5q39-21 104-21 53-1 106 13.5t89 41.5q57 42 91.5 121.5t29.5 147.5q-5 95 30 214 34 113 133 218 55 59 99.5 163t59.5 191q8 49 5 84.5t-12 55.5-20 22q-10 2-23.5 19t-27 35.5-40.5 33.5-61 14q-18-1-31.5-5t-22.5-13.5-13.5-15.5-11.5-20.5-9-19.5q-22-37-41-30t-28 49 7 97q20 70 1 195-10 65 18 100.5t73 33 85-35.5q59-49 89.5-66.5t103.5-42.5q53-18 77-36.5t18.5-34.5-25-28.5-51.5-23.5q-33-11-49.5-48t-15-72.5 15.5-47.5q1 31 8 56.5t14.5 40.5 20.5 28.5 21 19 21.5 13 16.5 9.5z\"}]}}),h.register({\"list-alt\":{width:1792,height:1792,paths:[{d:\"M384 1184v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 928v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 672v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1536 1184v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 928v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 672v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1664 1376v-832q0-13-9.5-22.5t-22.5-9.5h-1472q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1792 288v1088q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"list-ol\":{width:1792,height:1792,paths:[{d:\"M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zM383 993v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zM384 413v99h-335v-99h107q0-41 0.5-121.5t0.5-121.5v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zM1792 800v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zM1792 288v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({\"list-ul\":{width:1792,height:1792,paths:[{d:\"M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 896q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zM384 384q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 800v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zM1792 288v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({list:{width:1792,height:1792,paths:[{d:\"M256 1312v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM256 928v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM256 544v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM256 160v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({\"location-arrow\":{width:1408,height:1792,paths:[{d:\"M1401 349l-640 1280q-17 35-57 35-5 0-15-2-22-5-35.5-22.5t-13.5-39.5v-576h-576q-22 0-39.5-13.5t-22.5-35.5 4-42 29-30l1280-640q13-7 29-7 27 0 45 19 15 14 18.5 34.5t-6.5 39.5z\"}]}}),h.register({lock:{width:1152,height:1792,paths:[{d:\"M320 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zM1152 864v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\"}]}}),h.register({\"long-arrow-down\":{width:768,height:1792,paths:[{d:\"M765 1299q8 19-5 35l-350 384q-10 10-23 10-14 0-24-10l-355-384q-13-16-5-35 9-19 29-19h224v-1248q0-14 9-23t23-9h192q14 0 23 9t9 23v1248h224q21 0 29 19z\"}]}}),h.register({\"long-arrow-left\":{width:1792,height:1792,paths:[{d:\"M1792 800v192q0 14-9 23t-23 9h-1248v224q0 21-19 29t-35-5l-384-350q-10-10-10-23 0-14 10-24l384-354q16-14 35-6 19 9 19 29v224h1248q14 0 23 9t9 23z\"}]}}),h.register({\"long-arrow-right\":{width:1792,height:1792,paths:[{d:\"M1728 893q0 14-10 24l-384 354q-16 14-35 6-19-9-19-29v-224h-1248q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h1248v-224q0-21 19-29t35 5l384 350q10 10 10 23z\"}]}}),h.register({\"long-arrow-up\":{width:768,height:1792,paths:[{d:\"M765 493q-9 19-29 19h-224v1248q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-1248h-224q-21 0-29-19t5-35l350-384q10-10 23-10 14 0 24 10l355 384q13 16 5 35z\"}]}}),h.register({\"low-vision\":{width:1792,height:1792,paths:[{d:\"M335 1356q-2 0-6-2-86-57-168.5-145t-139.5-180q-21-30-21-69 0-9 2-19t4-18 7-18 8.5-16 10.5-17 10-15 12-15.5 11-14.5q184-251 452-365-110-198-110-211 0-19 17-29 116-64 128-64 18 0 28 16l124 229q92-19 192-19 266 0 497.5 137.5t378.5 369.5q20 31 20 69t-20 69q-91 142-218.5 253.5t-278.5 175.5q110 198 110 211 0 20-17 29-116 64-127 64-19 0-29-16l-124-229-64-119-444-820 7-7q-58 24-99 47 3 5 127 234t243 449 119 223q0 7-9 9-13 3-72 3-57 0-60-7l-456-841q-39 28-82 68 24 43 214 393.5t190 354.5q0 10-11 10-14 0-82.5-22t-72.5-28l-106-197-224-413q-44 53-78 106 2 3 18 25t23 34l176 327q0 10-10 10zM1165 1254l49 91q273-111 450-385-180-277-459-389 67 64 103 148.5t36 176.5q0 106-47 200.5t-132 157.5zM848 640q0 20 14 34t34 14q86 0 147 61t61 147q0 20 14 34t34 14 34-14 14-34q0-126-89-215t-215-89q-20 0-34 14t-14 34zM1214 575l-9-4 7 7z\"}]}}),h.register({magic:{width:1664,height:1792,paths:[{d:\"M1190 581l293-293-107-107-293 293zM1637 288q0 27-18 45l-1286 1286q-18 18-45 18t-45-18l-198-198q-18-18-18-45t18-45l1286-1286q18-18 45-18t45 18l198 198q18 18 18 45zM286 98l98 30-98 30-30 98-30-98-98-30 98-30 30-98zM636 260l196 60-196 60-60 196-60-196-196-60 196-60 60-196zM1566 738l98 30-98 30-30 98-30-98-98-30 98-30 30-98zM926 98l98 30-98 30-30 98-30-98-98-30 98-30 30-98z\"}]}}),h.register({magnet:{width:1536,height:1792,paths:[{d:\"M1536 832v128q0 201-98.5 362t-274 251.5-395.5 90.5-395.5-90.5-274-251.5-98.5-362v-128q0-26 19-45t45-19h384q26 0 45 19t19 45v128q0 52 23.5 90t53.5 57 71 30 64 13 44 2 44-2 64-13 71-30 53.5-57 23.5-90v-128q0-26 19-45t45-19h384q26 0 45 19t19 45zM512 192v384q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h384q26 0 45 19t19 45zM1536 192v384q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h384q26 0 45 19t19 45z\"}]}}),h.register({\"mail-forward\":{width:1792,height:1792,paths:[{d:\"M1792 640q0 26-19 45l-512 512q-19 19-45 19t-45-19-19-45v-256h-224q-98 0-175.5 6t-154 21.5-133 42.5-105.5 69.5-80 101-48.5 138.5-17.5 181q0 55 5 123 0 6 2.5 23.5t2.5 26.5q0 15-8.5 25t-23.5 10q-16 0-28-17-7-9-13-22t-13.5-30-10.5-24q-127-285-127-451 0-199 53-333 162-403 875-403h224v-256q0-26 19-45t45-19 45 19l512 512q19 19 19 45z\"}]}}),h.register({\"mail-reply-all\":{width:1792,height:1792,paths:[{d:\"M640 1082v70q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v69l-397 398q-19 19-19 45t19 45zM1792 1120q0 58-17 133.5t-38.5 138-48 125-40.5 90.5l-20 40q-8 17-28 17-6 0-9-1-25-8-23-34 43-400-106-565-64-71-170.5-110.5t-267.5-52.5v251q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v262q411 28 599 221 169 173 169 509z\"}]}}),h.register({\"mail-reply\":{width:1792,height:1792,paths:[{d:\"M1792 1120q0 166-127 451-3 7-10.5 24t-13.5 30-13 22q-12 17-28 17-15 0-23.5-10t-8.5-25q0-9 2.5-26.5t2.5-23.5q5-68 5-123 0-101-17.5-181t-48.5-138.5-80-101-105.5-69.5-133-42.5-154-21.5-175.5-6h-224v256q0 26-19 45t-45 19-45-19l-512-512q-19-19-19-45t19-45l512-512q19-19 45-19t45 19 19 45v256h224q713 0 875 403 53 134 53 333z\"}]}}),h.register({male:{width:1024,height:1792,paths:[{d:\"M1024 704v416q0 40-28 68t-68 28-68-28-28-68v-352h-64v912q0 46-33 79t-79 33-79-33-33-79v-464h-64v464q0 46-33 79t-79 33-79-33-33-79v-912h-64v352q0 40-28 68t-68 28-68-28-28-68v-416q0-80 56-136t136-56h640q80 0 136 56t56 136zM736 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({\"map-marker\":{width:1024,height:1792,paths:[{d:\"M768 640q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1024 640q0 109-33 179l-364 774q-16 33-47.5 52t-67.5 19-67.5-19-46.5-52l-365-774q-33-70-33-179 0-212 150-362t362-150 362 150 150 362z\"}]}}),h.register({\"map-o\":{width:2048,height:1792,paths:[{d:\"M2020 11q28 20 28 53v1408q0 20-11 36t-29 23l-640 256q-24 11-48 0l-616-246-616 246q-10 5-24 5-19 0-36-11-28-20-28-53v-1408q0-20 11-36t29-23l640-256q24-11 48 0l616 246 616-246q32-13 60 6zM736 146v1270l576 230v-1270zM128 363v1270l544-217v-1270zM1920 1429v-1270l-544 217v1270z\"}]}}),h.register({\"map-pin\":{width:1024,height:1792,paths:[{d:\"M512 1088q66 0 128-15v655q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-655q62 15 128 15zM512 0q212 0 362 150t150 362-150 362-362 150-362-150-150-362 150-362 362-150zM512 224q14 0 23-9t9-23-9-23-23-9q-146 0-249 103t-103 249q0 14 9 23t23 9 23-9 9-23q0-119 84.5-203.5t203.5-84.5z\"}]}}),h.register({\"map-signs\":{width:1792,height:1792,paths:[{d:\"M1745 297q10 10 10 23t-10 23l-141 141q-28 28-68 28h-1344q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h576v-64q0-26 19-45t45-19h128q26 0 45 19t19 45v64h512q40 0 68 28zM768 1216h256v512q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-512zM1600 768q26 0 45 19t19 45v256q0 26-19 45t-45 19h-1344q-40 0-68-28l-141-141q-10-10-10-23t10-23l141-141q28-28 68-28h512v-192h256v192h576z\"}]}}),h.register({map:{width:1792,height:1792,paths:[{d:\"M512 0q13 0 22.5 9.5t9.5 22.5v1472q0 20-17 28l-480 256q-7 4-15 4-13 0-22.5-9.5t-9.5-22.5v-1472q0-20 17-28l480-256q7-4 15-4zM1760 0q13 0 22.5 9.5t9.5 22.5v1472q0 20-17 28l-480 256q-7 4-15 4-13 0-22.5-9.5t-9.5-22.5v-1472q0-20 17-28l480-256q7-4 15-4zM640 0q8 0 14 3l512 256q18 10 18 29v1472q0 13-9.5 22.5t-22.5 9.5q-8 0-14-3l-512-256q-18-10-18-29v-1472q0-13 9.5-22.5t22.5-9.5z\"}]}}),h.register({\"mars-double\":{width:1920,height:1792,paths:[{d:\"M1536 416q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q76 95 107.5 214t9.5 247q-31 182-166 312t-318 156q-210 29-384.5-80t-241.5-300q-117-6-221-57.5t-177.5-133-113.5-192.5-32-230q9-135 78-252t182-191.5 248-89.5q118-14 227.5 19t198.5 103l255-254h-134q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q59 74 93 169 182 9 328 124l255-254h-134q-14 0-23-9t-9-23v-64zM1024 832q0-20-4-58-162 25-271 150t-109 292q0 20 4 58 162-25 271-150t109-292zM128 832q0 168 111 294t276 149q-3-29-3-59 0-210 135-369.5t338-196.5q-53-120-163.5-193t-245.5-73q-185 0-316.5 131.5t-131.5 316.5zM1088 1664q185 0 316.5-131.5t131.5-316.5q0-168-111-294t-276-149q3 28 3 59 0 210-135 369.5t-338 196.5q53 120 163.5 193t245.5 73z\"}]}}),h.register({\"mars-stroke-h\":{width:2048,height:1792,paths:[{d:\"M1901 915q19 19 19 45t-19 45l-294 294q-9 10-22.5 10t-22.5-10l-45-45q-10-9-10-22.5t10-22.5l185-185h-294v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-132q-24 217-187.5 364.5t-384.5 147.5q-167 0-306-87t-212-236-54-319q15-133 88-245.5t188-182 249-80.5q155-12 292 52.5t224 186 103 271.5h132v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224h294l-185-185q-10-9-10-22.5t10-22.5l45-45q9-10 22.5-10t22.5 10zM576 1408q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"mars-stroke-v\":{width:1280,height:1792,paths:[{d:\"M640 644q217 24 364.5 187.5t147.5 384.5q0 167-87 306t-236 212-319 54q-133-15-245.5-88t-182-188-80.5-249q-12-155 52.5-292t186-224 271.5-103v-132h-160q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h160v-165l-92 92q-10 9-23 9t-22-9l-46-46q-9-9-9-22t9-23l202-201q19-19 45-19t45 19l202 201q9 10 9 23t-9 22l-46 46q-9 9-22 9t-23-9l-92-92v165h160q14 0 23 9t9 23v64q0 14-9 23t-23 9h-160v132zM576 1664q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"mars-stroke\":{width:1536,height:1792,paths:[{d:\"M1472 128q26 0 45 19t19 45v416q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-262l-213 214 140 140q9 10 9 23t-9 22l-46 46q-9 9-22 9t-23-9l-140-141-78 79q126 156 126 359 0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5q203 0 359 126l78-78-172-172q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l172 172 213-213h-261q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h416zM576 1536q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({mars:{width:1536,height:1792,paths:[{d:\"M1472 128q26 0 45 19t19 45v416q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-262l-382 383q126 156 126 359 0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5q203 0 359 126l382-382h-261q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h416zM576 1536q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({maxcdn:{width:1792,height:1792,paths:[{d:\"M1745 773l-164 763h-334l178-832q13-56-15-88-27-33-83-33h-169l-204 953h-334l204-953h-286l-204 953h-334l204-953-153-327h1276q101 0 189.5 40.5t147.5 113.5q60 73 81 168.5t0 194.5z\"}]}}),h.register({meanpath:{width:1536,height:1792,paths:[{d:\"M1311 842v114q0 24-13.5 38t-37.5 14h-202q-24 0-38-14t-14-38v-114q0-24 14-38t38-14h202q24 0 37.5 14t13.5 38zM821 1072v-250q0-53-32.5-85.5t-85.5-32.5h-133q-68 0-96 52-28-52-96-52h-130q-53 0-85.5 32.5t-32.5 85.5v250q0 22 21 22h55q22 0 22-22v-230q0-24 13.5-38t38.5-14h94q24 0 38 14t14 38v230q0 22 21 22h54q22 0 22-22v-230q0-24 14-38t38-14h97q24 0 37.5 14t13.5 38v230q0 22 22 22h55q21 0 21-22zM1410 976v-154q0-53-33-85.5t-86-32.5h-264q-53 0-86 32.5t-33 85.5v410q0 21 22 21h55q21 0 21-21v-180q31 42 94 42h191q53 0 86-32.5t33-85.5zM1536 360v1072q0 96-68 164t-164 68h-1072q-96 0-164-68t-68-164v-1072q0-96 68-164t164-68h1072q96 0 164 68t68 164z\"}]}}),h.register({medium:{width:1792,height:1792,paths:[{d:\"M597 421v1173q0 25-12.5 42.5t-36.5 17.5q-17 0-33-8l-465-233q-21-10-35.5-33.5t-14.5-46.5v-1140q0-20 10-34t29-14q14 0 44 15l511 256q3 3 3 5zM661 522l534 866-534-266v-600zM1792 540v1054q0 25-14 40.5t-38 15.5-47-13l-441-220zM1789 420q0 3-256.5 419.5t-300.5 487.5l-390-634 324-527q17-28 52-28 14 0 26 6l541 270q4 2 4 6z\"}]}}),h.register({medkit:{width:1792,height:1792,paths:[{d:\"M1280 1120v-192q0-14-9-23t-23-9h-224v-224q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v224h-224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23-9t9-23v-224h224q14 0 23-9t9-23zM640 384h512v-128h-512v128zM256 384v1280h-32q-92 0-158-66t-66-158v-832q0-92 66-158t158-66h32zM1440 384v1280h-1088v-1280h160v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h160zM1792 608v832q0 92-66 158t-158 66h-32v-1280h32q92 0 158 66t66 158z\"}]}}),h.register({meetup:{width:1920,height:1792,paths:[{d:\"M1334 1234q-4-24-27.5-34t-49.5-10.5-48.5-12.5-25.5-38q-5-47 33-139.5t75-181 32-127.5q-14-101-117-103-45-1-75 16l-3 2-5 2.5t-4.5 2-5 2-5 0.5-6-1.5-6-3.5-6.5-5q-3-2-9-8.5t-9-9-8.5-7.5-9.5-7.5-9.5-5.5-11-4.5-11.5-2.5q-30-5-48 3t-45 31q-1 1-9 8.5t-12.5 11-15 10-16.5 5.5-17-3q-54-27-84-40-41-18-94 5t-76 65q-16 28-41 98.5t-43.5 132.5-40 134-21.5 73q-22 69 18.5 119t110.5 46q30-2 50.5-15t38.5-46q7-13 79-199.5t77-194.5q6-11 21.5-18t29.5 0q27 15 21 53-2 18-51 139.5t-50 132.5q-6 38 19.5 56.5t60.5 7 55-49.5q4-8 45.5-92t81.5-163.5 46-88.5q20-29 41-28 29 0 25 38-2 16-65.5 147.5t-70.5 159.5q-12 53 13 103t74 74q17 9 51 15.5t71.5 8 62.5-14 20-48.5zM383 1450q3 15-5 27.5t-23 15.5q-14 3-26.5-5t-15.5-23q-3-14 5-27t22-16 27 5 16 23zM953 1713q12 17 8.5 37.5t-20.5 32.5-37.5 8-32.5-21q-11-17-7.5-37.5t20.5-32.5 37.5-8 31.5 21zM177 901q-18 27-49.5 33t-57.5-13q-26-18-32-50t12-58q18-27 49.5-33t57.5 12q26 19 32 50.5t-12 58.5zM1467 1578q19 28 13 61.5t-34 52.5-60.5 13-51.5-34-13-61 33-53q28-19 60.5-13t52.5 34zM1579 974q69 113 42.5 244.5t-134.5 207.5q-90 63-199 60-20 80-84.5 127t-143.5 44.5-140-57.5q-12 9-13 10-103 71-225 48.5t-193-126.5q-50-73-53-164-83-14-142.5-70.5t-80.5-128-2-152 81-138.5q-36-60-38-128t24.5-125 79.5-98.5 121-50.5q32-85 99-148t146.5-91.5 168-17 159.5 66.5q72-21 140-17.5t128.5 36 104.5 80 67.5 115 17.5 140.5q52 16 87 57t45.5 89-5.5 99.5-58 87.5zM455 314q14 20 9.5 44.5t-24.5 38.5q-19 14-43.5 9.5t-37.5-24.5q-14-20-9.5-44.5t24.5-38.5q19-14 43.5-9.5t37.5 24.5zM614 33q4 16-5 30.5t-26 18.5-31-5.5-18-26.5q-3-17 6.5-31t25.5-18q17-4 31 5.5t17 26.5zM1800 981q4 20-6.5 37t-30.5 21q-19 4-36-6.5t-21-30.5 6.5-37 30.5-22q20-4 36.5 7.5t20.5 30.5zM1136 88q16 27 8.5 58.5t-35.5 47.5q-27 16-57.5 8.5t-46.5-34.5q-16-28-8.5-59t34.5-48 58-9 47 36zM1882 744q4 15-4 27.5t-23 16.5q-15 3-27.5-5.5t-15.5-22.5q-3-15 5-28t23-16q14-3 26.5 5t15.5 23zM1691 503q15 22 10.5 49t-26.5 43q-22 15-49 10t-42-27-10-49 27-43 48.5-11 41.5 28z\"}]}}),h.register({\"meh-o\":{width:1536,height:1792,paths:[{d:\"M1152 1088q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h640q26 0 45 19t19 45zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({mercury:{width:1280,height:1792,paths:[{d:\"M830 316q145 72 233.5 210.5t88.5 305.5q0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-217-24-364.5-187.5t-147.5-384.5q0-167 88.5-305.5t233.5-210.5q-165-96-228-273-6-16 3.5-29.5t26.5-13.5h69q21 0 29 20 44 106 140 171t214 65 214-65 140-171q8-20 37-20h61q17 0 26.5 13.5t3.5 29.5q-63 177-228 273zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({microchip:{width:1536,height:1792,paths:[{d:\"M192 1280v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 1024v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 768v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 512v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 256v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM1280 96v1472q0 40-28 68t-68 28h-832q-40 0-68-28t-28-68v-1472q0-40 28-68t68-28h832q40 0 68 28t28 68zM1536 1328v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 1072v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 816v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 560v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 304v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16z\"}]}}),h.register({\"microphone-slash\":{width:1408,height:1792,paths:[{d:\"M271 945l-101 101q-42-103-42-214v-128q0-26 19-45t45-19 45 19 19 45v128q0 53 15 113zM1385 343l-361 361v128q0 132-94 226t-226 94q-55 0-109-19l-96 96q97 51 205 51 185 0 316.5-131.5t131.5-316.5v-128q0-26 19-45t45-19 45 19 19 45v128q0 221-147.5 384.5t-364.5 187.5v132h256q26 0 45 19t19 45-19 45-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h256v-132q-125-13-235-81l-254 254q-10 10-23 10t-23-10l-82-82q-10-10-10-23t10-23l1234-1234q10-10 23-10t23 10l82 82q10 10 10 23t-10 23zM1005 211l-621 621v-512q0-132 94-226t226-94q102 0 184.5 59t116.5 152z\"}]}}),h.register({microphone:{width:1152,height:1792,paths:[{d:\"M1152 704v128q0 221-147.5 384.5t-364.5 187.5v132h256q26 0 45 19t19 45-19 45-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h256v-132q-217-24-364.5-187.5t-147.5-384.5v-128q0-26 19-45t45-19 45 19 19 45v128q0 185 131.5 316.5t316.5 131.5 316.5-131.5 131.5-316.5v-128q0-26 19-45t45-19 45 19 19 45zM896 320v512q0 132-94 226t-226 94-226-94-94-226v-512q0-132 94-226t226-94 226 94 94 226z\"}]}}),h.register({\"minus-circle\":{width:1536,height:1792,paths:[{d:\"M1216 960v-128q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v128q0 26 19 45t45 19h768q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"minus-square-o\":{width:1408,height:1792,paths:[{d:\"M1152 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zM1280 1248v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"minus-square\":{width:1536,height:1792,paths:[{d:\"M1280 960v-128q0-26-19-45t-45-19h-896q-26 0-45 19t-19 45v128q0 26 19 45t45 19h896q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({minus:{width:1408,height:1792,paths:[{d:\"M1408 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z\"}]}}),h.register({mixcloud:{width:2304,height:1792,paths:[{d:\"M1645 1098q0-59-34-106.5t-87-68.5q-7 45-23 92-7 24-27.5 38t-44.5 14q-12 0-24-3-31-10-45-38.5t-4-58.5q23-71 23-143 0-123-61-227.5t-166-165.5-228-61q-134 0-247 73t-167 194q108 28 188 106 22 23 22 55t-22 54-54 22-55-22q-75-75-180-75-106 0-181 74.5t-75 180.5 75 180.5 181 74.5h1046q79 0 134.5-55.5t55.5-133.5zM1798 1098q0 142-100.5 242t-242.5 100h-1046q-169 0-289-119.5t-120-288.5q0-153 100-267t249-136q62-184 221-298t354-114q235 0 408.5 158.5t196.5 389.5q116 25 192.5 118.5t76.5 214.5zM2048 1098q0 175-97 319-23 33-64 33-24 0-43-13-26-17-32-48.5t12-57.5q71-104 71-233t-71-233q-18-26-12-57t32-49 57.5-11.5 49.5 32.5q97 142 97 318zM2304 1098q0 244-134 443-23 34-64 34-23 0-42-13-26-18-32.5-49t11.5-57q108-164 108-358 0-195-108-357-18-26-11.5-57.5t32.5-48.5q26-18 57-12t49 33q134 198 134 442z\"}]}}),h.register({\"mobile-phone\":{width:768,height:1792,paths:[{d:\"M464 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zM672 1248v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zM480 400q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zM768 384v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z\"}]}}),h.register({mobile:{width:768,height:1792,paths:[{d:\"M464 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zM672 1248v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zM480 400q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zM768 384v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z\"}]}}),h.register({modx:{width:1792,height:1792,paths:[{d:\"M1427 709l-614-386 92-151h855zM405 974l-184-116v-858l1183 743zM1424 839l147 95v858l-532-335zM1387 818l-500 802h-855l356-571z\"}]}}),h.register({money:{width:1920,height:1792,paths:[{d:\"M768 1152h384v-96h-128v-448h-114l-148 137 77 80q42-37 55-57h2v288h-128v96zM1280 896q0 70-21 142t-59.5 134-101.5 101-138 39-138-39-101.5-101-59.5-134-21-142 21-142 59.5-134 101.5-101 138-39 138 39 101.5 101 59.5 134 21 142zM1792 1152v-512q-106 0-181-75t-75-181h-1152q0 106-75 181t-181 75v512q106 0 181 75t75 181h1152q0-106 75-181t181-75zM1920 320v1152q0 26-19 45t-45 19h-1792q-26 0-45-19t-19-45v-1152q0-26 19-45t45-19h1792q26 0 45 19t19 45z\"}]}}),h.register({\"moon-o\":{width:1536,height:1792,paths:[{d:\"M1262 1303q-54 9-110 9-182 0-337-90t-245-245-90-337q0-192 104-357-201 60-328.5 229t-127.5 384q0 130 51 248.5t136.5 204 204 136.5 248.5 51q144 0 273.5-61.5t220.5-171.5zM1465 1218q-94 203-283.5 324.5t-413.5 121.5q-156 0-298-61t-245-164-164-245-61-298q0-153 57.5-292.5t156-241.5 235.5-164.5 290-68.5q44-2 61 39 18 41-15 72-86 78-131.5 181.5t-45.5 218.5q0 148 73 273t198 198 273 73q118 0 228-51 41-18 72 13 14 14 17.5 34t-4.5 38z\"}]}}),h.register({\"mortar-board\":{width:2304,height:1792,paths:[{d:\"M1774 836l18 316q4 69-82 128t-235 93.5-323 34.5-323-34.5-235-93.5-82-128l18-316 574 181q22 7 48 7t48-7zM2304 512q0 23-22 31l-1120 352q-4 1-10 1t-10-1l-652-206q-43 34-71 111.5t-34 178.5q63 36 63 109 0 69-58 107l58 433q2 14-8 25-9 11-24 11h-192q-15 0-24-11-10-11-8-25l58-433q-58-38-58-107 0-73 65-111 11-207 98-330l-333-104q-22-8-22-31t22-31l1120-352q4-1 10-1t10 1l1120 352q22 8 22 31z\"}]}}),h.register({motorcycle:{width:2304,height:1792,paths:[{d:\"M2301 1036q12 103-22 198.5t-99 163.5-158.5 106-196.5 31q-161-11-279.5-125t-134.5-274q-12-111 27.5-210.5t118.5-170.5l-71-107q-96 80-151 194t-55 244q0 27-18.5 46.5t-45.5 19.5h-256-69q-23 164-149 274t-294 110q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q76 0 152 27l24-45q-123-110-304-110h-64q-26 0-45-19t-19-45 19-45 45-19h128q78 0 145 13.5t116.5 38.5 71.5 39.5 51 36.5h512 115l-85-128h-222q-30 0-49-22.5t-14-52.5q4-23 23-38t43-15h253q33 0 53 28l70 105 114-114q19-19 46-19h101q26 0 45 19t19 45v128q0 26-19 45t-45 19h-179l115 172q131-63 275-36 143 26 244 134.5t118 253.5zM448 1408q115 0 203-72.5t111-183.5h-314q-35 0-55-31-18-32-1-63l147-277q-47-13-91-13-132 0-226 94t-94 226 94 226 226 94zM1856 1408q132 0 226-94t94-226-94-226-226-94q-60 0-121 24l174 260q15 23 10 49t-27 40q-15 11-36 11-35 0-53-29l-174-260q-93 95-93 225 0 132 94 226t226 94z\"}]}}),h.register({\"mouse-pointer\":{width:1280,height:1792,paths:[{d:\"M1133 1043q31 30 14 69-17 40-59 40h-382l201 476q10 25 0 49t-34 35l-177 75q-25 10-49 0t-35-34l-191-452-312 312q-19 19-45 19-12 0-24-5-40-17-40-59v-1504q0-42 40-59 12-5 24-5 27 0 45 19z\"}]}}),h.register({music:{width:1536,height:1792,paths:[{d:\"M1536 224v1120q0 50-34 89t-86 60.5-103.5 32-96.5 10.5-96.5-10.5-103.5-32-86-60.5-34-89 34-89 86-60.5 103.5-32 96.5-10.5q105 0 192 39v-537l-768 237v709q0 50-34 89t-86 60.5-103.5 32-96.5 10.5-96.5-10.5-103.5-32-86-60.5-34-89 34-89 86-60.5 103.5-32 96.5-10.5q105 0 192 39v-967q0-31 19-56.5t49-35.5l832-256q12-4 28-4 40 0 68 28t28 68z\"}]}}),h.register({navicon:{width:1536,height:1792,paths:[{d:\"M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({neuter:{width:1280,height:1792,paths:[{d:\"M1152 576q0 221-147.5 384.5t-364.5 187.5v612q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-612q-217-24-364.5-187.5t-147.5-384.5q0-117 45.5-223.5t123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5zM576 1024q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"newspaper-o\":{width:2048,height:1792,paths:[{d:\"M1024 512h-384v384h384v-384zM1152 1152v128h-640v-128h640zM1152 384v640h-640v-640h640zM1792 1152v128h-512v-128h512zM1792 896v128h-512v-128h512zM1792 640v128h-512v-128h512zM1792 384v128h-512v-128h512zM256 1344v-960h-128v960q0 26 19 45t45 19 45-19 19-45zM1920 1344v-1088h-1536v1088q0 33-11 64h1483q26 0 45-19t19-45zM2048 128v1216q0 80-56 136t-136 56h-1664q-80 0-136-56t-56-136v-1088h256v-128h1792z\"}]}}),h.register({\"object-group\":{width:2048,height:1792,paths:[{d:\"M2048 384h-128v1024h128v384h-384v-128h-1280v128h-384v-384h128v-1024h-128v-384h384v128h1280v-128h384v384zM1792 128v128h128v-128h-128zM128 128v128h128v-128h-128zM256 1664v-128h-128v128h128zM1664 1536v-128h128v-1024h-128v-128h-1280v128h-128v1024h128v128h1280zM1920 1664v-128h-128v128h128zM1280 640h384v768h-896v-256h-384v-768h896v256zM512 1024h640v-512h-640v512zM1536 1280v-512h-256v384h-384v128h640z\"}]}}),h.register({\"object-ungroup\":{width:2304,height:1792,paths:[{\nd:\"M2304 768h-128v640h128v384h-384v-128h-896v128h-384v-384h128v-128h-384v128h-384v-384h128v-640h-128v-384h384v128h896v-128h384v384h-128v128h384v-128h384v384zM2048 512v128h128v-128h-128zM1408 128v128h128v-128h-128zM128 128v128h128v-128h-128zM256 1280v-128h-128v128h128zM1536 1152h-128v128h128v-128zM384 1152h896v-128h128v-640h-128v-128h-896v128h-128v640h128v128zM896 1664v-128h-128v128h128zM2176 1664v-128h-128v128h128zM2048 1408v-640h-128v-128h-384v384h128v384h-384v-128h-384v128h128v128h896v-128h128z\"}]}}),h.register({\"odnoklassniki-square\":{width:1536,height:1792,paths:[{d:\"M927 580q0 66-46.5 112.5t-112.5 46.5-112.5-46.5-46.5-112.5 46.5-112.5 112.5-46.5 112.5 46.5 46.5 112.5zM1141 943q-10-20-28-32t-47.5-9.5-60.5 27.5q-10 8-29 20t-81 32-127 20-124-18-86-36l-27-18q-31-25-60.5-27.5t-47.5 9.5-28 32q-22 45-2 74.5t87 73.5q83 53 226 67l-51 52q-142 142-191 190-22 22-22 52.5t22 52.5l9 9q22 22 52.5 22t52.5-22l191-191q114 115 191 191 22 22 52.5 22t52.5-22l9-9q22-22 22-52.5t-22-52.5l-191-190-52-52q141-14 225-67 67-44 87-73.5t-2-74.5zM1092 580q0-134-95-229t-229-95-229 95-95 229 95 229 229 95 229-95 95-229zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({odnoklassniki:{width:1280,height:1792,paths:[{d:\"M640 907q-188 0-321-133t-133-320q0-188 133-321t321-133 321 133 133 321q0 187-133 320t-321 133zM640 230q-92 0-157.5 65.5t-65.5 158.5q0 92 65.5 157.5t157.5 65.5 157.5-65.5 65.5-157.5q0-93-65.5-158.5t-157.5-65.5zM1163 962q13 27 15 49.5t-4.5 40.5-26.5 38.5-42.5 37-61.5 41.5q-115 73-315 94l73 72 267 267q30 31 30 74t-30 73l-12 13q-31 30-74 30t-74-30q-67-68-267-268l-267 268q-31 30-74 30t-73-30l-12-13q-31-30-31-73t31-74l267-267 72-72q-203-21-317-94-39-25-61.5-41.5t-42.5-37-26.5-38.5-4.5-40.5 15-49.5q10-20 28-35t42-22 56 2 65 35q5 4 15 11t43 24.5 69 30.5 92 24 113 11q91 0 174-25.5t120-50.5l38-25q33-26 65-35t56-2 42 22 28 35z\"}]}}),h.register({opencart:{width:2304,height:1792,paths:[{d:\"M1524 1561q0 68-48 116t-116 48-116.5-48-48.5-116 48.5-116.5 116.5-48.5 116 48.5 48 116.5zM775 1561q0 68-48.5 116t-116.5 48-116-48-48-116 48-116.5 116-48.5 116.5 48.5 48.5 116.5zM0 67q57 60 110.5 104.5t121 82 136 63 166 45.5 200 31.5 250 18.5 304 9.5 372.5 2.5q139 0 244.5 5t181 16.5 124 27.5 71 39.5 24 51.5-19.5 64-56.5 76.5-89.5 91-116 104.5-139 119q-185 157-286 247 29-51 76.5-109t94-105.5 94.5-98.5 83-91.5 54-80.5 13-70-45.5-55.5-116.5-41-204-23.5-304-5q-168 2-314-6t-256-23-204.5-41-159.5-51.5-122.5-62.5-91.5-66.5-68-71.5-50.5-69.5-40-68-36.5-59.5z\"}]}}),h.register({openid:{width:1792,height:1792,paths:[{d:\"M1086 0v1536l-272 128q-228-20-414-102t-293-208.5-107-272.5q0-140 100.5-263.5t275-205.5 391.5-108v172q-217 38-356.5 150t-139.5 255q0 152 154.5 267t388.5 145v-1360zM1755 582l37 390-525-114 147-83q-119-70-280-99v-172q277 33 481 157z\"}]}}),h.register({opera:{width:1792,height:1792,paths:[{d:\"M1493 228q-165-110-359-110-155 0-293 73t-240 200q-75 93-119.5 218t-48.5 266v42q4 141 48.5 266t119.5 218q102 127 240 200t293 73q194 0 359-110-121 108-274.5 168t-322.5 60q-29 0-43-1-175-8-333-82t-272-193-181-281-67-339q0-182 71-348t191-286 286-191 348-71h3q168 1 320.5 60.5t273.5 167.5zM1792 896q0 192-77 362.5t-213 296.5q-104 63-222 63-137 0-255-84 154-56 253.5-233t99.5-405q0-227-99-404t-253-234q119-83 254-83 119 0 226 65 135 125 210.5 295t75.5 361z\"}]}}),h.register({\"optin-monster\":{width:2296,height:1792,paths:[{d:\"M478 1675q-8 16-27 34.5t-37 25.5q-25 9-51.5-3.5t-28.5-31.5q-1-22 40-55t68-38q23-4 34 21.5t2 46.5zM1819 1675q7 16 26 34.5t38 25.5q25 9 51.5-3.5t27.5-31.5q2-22-39.5-55t-68.5-38q-22-4-33 21.5t-2 46.5zM1867 1566q13 27 56.5 59.5t77.5 41.5q45 13 82-4.5t37-50.5q0-46-67.5-100.5t-115.5-59.5q-40-5-63.5 37.5t-6.5 76.5zM428 1566q-13 27-56 59.5t-77 41.5q-45 13-82-4.5t-37-50.5q0-46 67.5-100.5t115.5-59.5q40-5 63 37.5t6 76.5zM1158 442h1q-41 0-76 15 27 8 44 30.5t17 49.5q0 35-27 60t-65 25q-52 0-80-43-5 23-5 42 0 74 56 126.5t135 52.5q80 0 136-52.5t56-126.5-56-126.5-136-52.5zM1462 224q-99-109-220.5-131.5t-245.5 44.5q27-60 82.5-96.5t118-39.5 121.5 17 99.5 74.5 44.5 131.5zM2212 1463q8 11-11 42 7 23 7 40 1 56-44.5 112.5t-109.5 91.5-118 37q-48 2-92-21.5t-66-65.5q-687 25-1259 0-23 41-66.5 65t-92.5 22q-86-3-179.5-80.5t-92.5-160.5q2-22 7-40-19-31-11-42 6-10 31-1 14-22 41-51-7-29 2-38 11-10 39 4 29-20 59-34 0-29 13-37 23-12 51 16 35-5 61 2 18 4 38 19v-73q-11 0-18-2-53-10-97-44.5t-55-87.5q-9-38 0-81 15-62 93-95 2-17 19-35.5t36-23.5 33 7.5 19 30.5h13q46 5 60 23 3 3 5 7 10-1 30.5-3.5t30.5-3.5q-15-11-30-17-23-40-91-43 0-6 1-10-62-2-118.5-18.5t-84.5-47.5q-32-36-42.5-92t-2.5-112q16-126 90-179 23-16 52-4.5t32 40.5q0 1 1.5 14t2.5 21 3 20 5.5 19 8.5 10q27 14 76 12 48-46 98-74-40-4-162 14l47-46q61-58 163-111 145-73 282-86-20-8-41-15.5t-47-14-42.5-10.5-47.5-11-43-10q595-126 904 139 98 84 158 222 85 10 121-9h1q5-3 8.5-10t5.5-19 3-19.5 3-21.5l1-14q3-28 32-40t52 5q73 52 91 178 7 57-3.5 113t-42.5 91q-28 32-83.5 48.5t-115.5 18.5v10q-71 2-95 43-14 5-31 17 11 1 32 3.5t30 3.5q1-5 5-8 16-18 60-23h13q5-18 19-30t33-8 36 23 19 36q79 32 93 95 9 40 1 81-12 53-56 88t-97 44q-10 2-17 2 0 49-1 73 20-15 38-19 26-7 61-2 28-28 51-16 14 9 14 37 33 16 59 34 27-13 38-4 10 10 2 38 28 30 41 51 23-8 31 1zM1937 511q0 29-9 54 82 32 112 132 4-37-9.5-98.5t-41.5-90.5q-20-19-36-17t-16 20zM1859 611q35 42 47.5 108.5t-0.5 124.5q67-13 97-45 13-14 18-28-3-64-31-114.5t-79-66.5q-15 15-52 21zM1822 615q-30 0-44-1 42 115 53 239 21 0 43-3 16-68 1-135t-53-100zM258 697q30-100 112-132-9-25-9-54 0-18-16.5-20t-35.5 17q-28 29-41.5 90.5t-9.5 98.5zM294 799q29 31 97 45-13-58-0.5-124.5t47.5-108.5v0q-37-6-52-21-51 16-78.5 66t-31.5 115q9 17 18 28zM471 853q14-124 73-235-19 4-55 18l-45 19v-1q-46 89-20 196 25 3 47 3zM1434 892q8 38 16.5 108.5t11.5 89.5q3 18 9.5 21.5t23.5-4.5q40-20 62-85.5t23-125.5q-24-2-146-4zM1152 251q-116 0-199 82.5t-83 198.5q0 117 83 199.5t199 82.5 199-82.5 83-199.5q0-116-83-198.5t-199-82.5zM1380 890q-105-2-211 0v-1q-1 27 2.5 86t13.5 66q29 14 93.5 14.5t95.5-10.5q9-3 11-39t-0.5-69.5-4.5-46.5zM1112 1089q8-4 9.5-48t-0.5-88-4-63v-1q-212 3-214 3-4 20-7 62t0 83 14 46q34 15 101 16t101-10zM718 900q-16 59 4.5 118.5t77.5 84.5q15 8 24 5t12-21q3-16 8-90t10-103q-69 2-136 6zM591 1026q3 23-34 36 132 141 271.5 240t305.5 154q172-49 310.5-146t293.5-250q-33-13-30-34 0-2 0.5-3.5t1.5-3 1-2.5v-1 1q-17-2-50-5.5t-48-4.5q-26 90-82 132-51 38-82-1-5-6-9-14-7-13-17-62-2 5-5 9t-7.5 7-8 5.5-9.5 4l-10 2.5t-12 2l-12 1.5t-13.5 1-13.5 0.5q-106 9-163-11-4 17-10 26.5t-21 15-23 7-36 3.5q-6 1-9 1-179 17-203-40-2 63-56 54-47-8-91-54-12-13-20-26-17-29-26-65-58 6-87 10 1 2 4 10zM507 1654q3-14 3-30-17-71-51-130t-73-70q-41-12-101.5 14.5t-104.5 80-39 107.5q35 53 100 93t119 42q51 2 94-28t53-79zM510 1483q23 63 27 119 195-113 392-174-98-52-180.5-120t-179.5-165q-6 4-29 13 0 1-1 4t-1 5q31 18 22 37-12 23-56 34-10 13-29 24h-1q-2 83 1 150 19 34 35 73zM579 1649q532 21 1145 0-254-147-428-196-76 35-156 57-8 3-16 0-65-21-129-49-208 60-416 188h-1v1q1 0 1-1zM1763 1603q4-54 28-120 14-38 33-71l-1 1q3-77 3-153-15-8-30-25-42-9-56-33-9-20 22-38-2-4-2-9-16-4-28-12-204 190-383 284 198 59 414 176zM2155 1626q5-54-39-107.5t-104-80-102-14.5q-38 11-72.5 70.5t-51.5 129.5q0 16 3 30 10 49 53 79t94 28q54-2 119-42t100-93z\"}]}}),h.register({outdent:{width:1792,height:1792,paths:[{d:\"M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({pagelines:{width:1408,height:1792,paths:[{d:\"M1402 1103q-32 80-76 138t-91 88.5-99 46.5-101.5 14.5-96.5-8.5-86.5-22-69.5-27.5-46-22.5l-17-10q-113 228-289.5 359.5t-384.5 132.5q-19 0-32-13t-13-32 13-31.5 32-12.5q173-1 322.5-107.5t251.5-294.5q-36 14-72 23t-83 13-91-2.5-93-28.5-92-59-84.5-100-74.5-146q114-47 214-57t167.5 7.5 124.5 56.5 88.5 77 56.5 82q53-131 79-291-7 1-18 2.5t-46.5 2.5-69.5-0.5-81.5-10-88.5-23-84-42.5-75-65-54.5-94.5-28.5-127.5q70-28 133.5-36.5t112.5 1 92 30 73.5 50 56 61 42 63 27.5 56 16 39.5l4 16q12-122 12-195-8-6-21.5-16t-49-44.5-63.5-71.5-54-93-33-112.5 12-127 70-138.5q73 25 127.5 61.5t84.5 76.5 48 85 20.5 89-0.5 85.5-13 76.5-19 62-17 42l-7 15q1 4 1 50t-1 72q3-7 10-18.5t30.5-43 50.5-58 71-55.5 91.5-44.5 112-14.5 132.5 24q-2 78-21.5 141.5t-50 104.5-69.5 71.5-81.5 45.5-84.5 24-80 9.5-67.5-1-46.5-4.5l-17-3q-23 147-73 283 6-7 18-18.5t49.5-41 77.5-52.5 99.5-42 117.5-20 129 23.5 137 77.5z\"}]}}),h.register({\"paint-brush\":{width:1792,height:1792,paths:[{d:\"M1615 0q70 0 122.5 46.5t52.5 116.5q0 63-45 151-332 629-465 752-97 91-218 91-126 0-216.5-92.5t-90.5-219.5q0-128 92-212l638-579q59-54 130-54zM706 1034q39 76 106.5 130t150.5 76l1 71q4 213-129.5 347t-348.5 134q-123 0-218-46.5t-152.5-127.5-86.5-183-29-220q7 5 41 30t62 44.5 59 36.5 46 17q41 0 55-37 25-66 57.5-112.5t69.5-76 88-47.5 103-25.5 125-10.5z\"}]}}),h.register({\"paper-plane-o\":{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-527-215-298 327q-18 21-47 21-14 0-23-4-19-7-30-23.5t-11-36.5v-452l-472-193q-37-14-40-55-3-39 32-59l1664-960q35-21 68 2zM1422 1510l221-1323-1434 827 336 137 863-639-478 797z\"}]}}),h.register({\"paper-plane\":{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\"}]}}),h.register({paperclip:{width:1408,height:1792,paths:[{d:\"M1404 1385q0 117-79 196t-196 79q-135 0-235-100l-777-776q-113-115-113-271 0-159 110-270t269-111q158 0 273 113l605 606q10 10 10 22 0 16-30.5 46.5t-46.5 30.5q-13 0-23-10l-606-607q-79-77-181-77-106 0-179 75t-73 181q0 105 76 181l776 777q63 63 145 63 64 0 106-42t42-106q0-82-63-145l-581-581q-26-24-60-24-29 0-48 19t-19 48q0 32 25 59l410 410q10 10 10 22 0 16-31 47t-47 31q-12 0-22-10l-410-410q-63-61-63-149 0-82 57-139t139-57q88 0 149 63l581 581q100 98 100 235z\"}]}}),h.register({paragraph:{width:1280,height:1792,paths:[{d:\"M1278 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z\"}]}}),h.register({paste:{width:1792,height:1792,paths:[{d:\"M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zM1024 224v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zM1280 896h299l-299-299v299zM1792 1024v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z\"}]}}),h.register({\"pause-circle-o\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM768 1440q148 0 273-73t198-198 73-273-73-273-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73zM864 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23v576q0 14-9 23t-23 9h-192zM480 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23v576q0 14-9 23t-23 9h-192z\"}]}}),h.register({\"pause-circle\":{width:1536,height:1792,paths:[{d:\"M704 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1152 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({pause:{width:1536,height:1792,paths:[{d:\"M1536 192v1408q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h512q26 0 45 19t19 45zM640 192v1408q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h512q26 0 45 19t19 45z\"}]}}),h.register({paw:{width:1664,height:1792,paths:[{d:\"M780 472q0 60-19 113.5t-63 92.5-105 39q-76 0-138-57.5t-92-135.5-30-151q0-60 19-113.5t63-92.5 105-39q77 0 138.5 57.5t91.5 135 30 151.5zM438 955q0 80-42 139t-119 59q-76 0-141.5-55.5t-100.5-133.5-35-152q0-80 42-139.5t119-59.5q76 0 141.5 55.5t100.5 134 35 152.5zM832 928q118 0 255 97.5t229 237 92 254.5q0 46-17 76.5t-48.5 45-64.5 20-76 5.5q-68 0-187.5-45t-182.5-45q-66 0-192.5 44.5t-200.5 44.5q-183 0-183-146 0-86 56-191.5t139.5-192.5 187.5-146 193-59zM1071 717q-61 0-105-39t-63-92.5-19-113.5q0-74 30-151.5t91.5-135 138.5-57.5q61 0 105 39t63 92.5 19 113.5q0 73-30 151t-92 135.5-138 57.5zM1503 613q77 0 119 59.5t42 139.5q0 74-35 152t-100.5 133.5-141.5 55.5q-77 0-119-59t-42-139q0-74 35-152.5t100.5-134 141.5-55.5z\"}]}}),h.register({paypal:{width:1536,height:1792,paths:[{d:\"M1519 646q18 84-4 204-87 444-565 444h-44q-25 0-44 16.5t-24 42.5l-4 19-55 346-2 15q-5 26-24.5 42.5t-44.5 16.5h-251q-21 0-33-15t-9-36q9-56 26.5-168t26.5-168 27-167.5 27-167.5q5-37 43-37h131q133 2 236-21 175-39 287-144 102-95 155-246 24-70 35-133 1-6 2.5-7.5t3.5-1 6 3.5q79 59 98 162zM1347 364q0 107-46 236-80 233-302 315-113 40-252 42 0 1-90 1l-90-1q-100 0-118 96-2 8-85 530-1 10-12 10h-295q-22 0-36.5-16.5t-11.5-38.5l232-1471q5-29 27.5-48t51.5-19h598q34 0 97.5 13t111.5 32q107 41 163.5 123t56.5 196z\"}]}}),h.register({\"pencil-square-o\":{width:1792,height:1792,paths:[{d:\"M888 1184l116-116-152-152-116 116v56h96v96h56zM1328 464q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zM1408 1058v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zM1312 320l288 288-672 672h-288v-288zM1756 452l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z\"}]}}),h.register({\"pencil-square\":{width:1536,height:1792,paths:[{d:\"M404 1108l152 152-52 52h-56v-96h-96v-56zM818 718q14 13-3 30l-291 291q-17 17-30 3-14-13 3-30l291-291q17-17 30-3zM544 1408l544-544-288-288-544 544v288h288zM1152 800l92-92q28-28 28-68t-28-68l-152-152q-28-28-68-28t-68 28l-92 92zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({pencil:{width:1536,height:1792,paths:[{d:\"M363 1536l91-91-235-235-91 91v107h128v128h107zM886 608q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zM832 416l416 416-832 832h-416v-416zM1515 512q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z\"}]}}),h.register({percent:{width:1536,height:1792,paths:[{d:\"M1280 1280q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM512 512q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM1536 1280q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1440 192q0 20-13 38l-1056 1408q-19 26-51 26h-160q-26 0-45-19t-19-45q0-20 13-38l1056-1408q19-26 51-26h160q26 0 45 19t19 45zM768 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({\"phone-square\":{width:1536,height:1792,paths:[{d:\"M1280 1193q0-11-2-16t-18-16.5-40.5-25-47.5-26.5-45.5-25-28.5-15q-5-3-19-13t-25-15-21-5q-15 0-36.5 20.5t-39.5 45-38.5 45-33.5 20.5q-7 0-16.5-3.5t-15.5-6.5-17-9.5-14-8.5q-99-55-170-126.5t-127-170.5q-2-3-8.5-14t-9.5-17-6.5-15.5-3.5-16.5q0-13 20.5-33.5t45-38.5 45-39.5 20.5-36.5q0-10-5-21t-15-25-13-19q-3-6-15-28.5t-25-45.5-26.5-47.5-25-40.5-16.5-18-16-2q-48 0-101 22-46 21-80 94.5t-34 130.5q0 16 2.5 34t5 30.5 9 33 10 29.5 12.5 33 11 30q60 164 216.5 320.5t320.5 216.5q6 2 30 11t33 12.5 29.5 10 33 9 30.5 5 34 2.5q57 0 130.5-34t94.5-80q22-53 22-101zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({phone:{width:1408,height:1792,paths:[{d:\"M1408 1240q0 27-10 70.5t-21 68.5q-21 50-122 106-94 51-186 51-27 0-53-3.5t-57.5-12.5-47-14.5-55.5-20.5-49-18q-98-35-175-83-127-79-264-216t-216-264q-48-77-83-175-3-9-18-49t-20.5-55.5-14.5-47-12.5-57.5-3.5-53q0-92 51-186 56-101 106-122 25-11 68.5-21t70.5-10q14 0 21 3 18 6 53 76 11 19 30 54t35 63.5 31 53.5q3 4 17.5 25t21.5 35.5 7 28.5q0 20-28.5 50t-62 55-62 53-28.5 46q0 9 5 22.5t8.5 20.5 14 24 11.5 19q76 137 174 235t235 174q2 1 19 11.5t24 14 20.5 8.5 22.5 5q18 0 46-28.5t53-62 55-62 50-28.5q14 0 28.5 7t35.5 21.5 25 17.5q25 15 53.5 31t63.5 35 54 30q70 35 76 53 3 7 3 21z\"}]}}),h.register({photo:{width:1920,height:1792,paths:[{d:\"M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({\"picture-o\":{width:1920,height:1792,paths:[{d:\"M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({\"pie-chart\":{width:1792,height:1792,paths:[{d:\"M768 890l546 546q-106 108-247.5 168t-298.5 60q-209 0-385.5-103t-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103v762zM955 896h773q0 157-60 298.5t-168 247.5zM1664 768h-768v-768q209 0 385.5 103t279.5 279.5 103 385.5z\"}]}}),h.register({\"pied-piper-alt\":{width:2038,height:1792,paths:[{d:\"M1222 929q75-3 143.5 20.5t118 58.5 101 94.5 84 108 75.5 120.5q33 56 78.5 109t75.5 80.5 99 88.5q-48 30-108.5 57.5t-138.5 59-114 47.5q-44-37-74-115t-43.5-164.5-33-180.5-42.5-168.5-72.5-123-122.5-48.5l-10 2-6 4q4 5 13 14 6 5 28 23.5t25.5 22 19 18 18 20.5 11.5 21 10.5 27.5 4.5 31 4 40.5l1 33q1 26-2.5 57.5t-7.5 52-12.5 58.5-11.5 53q-35-1-101 9.5t-98 10.5q-39 0-72-10-2-16-2-47 0-74 3-96 2-13 31.5-41.5t57-59 26.5-51.5q-24-2-43 24-36 53-111.5 99.5t-136.5 46.5q-25 0-75.5-63t-106.5-139.5-84-96.5q-6-4-27-30-482 112-513 112-16 0-28-11t-12-27q0-15 8.5-26.5t22.5-14.5l486-106q-8-14-8-25t5.5-17.5 16-11.5 20-7 23-4.5 18.5-4.5q4-1 15.5-7.5t17.5-6.5q15 0 28 16t20 33q163-37 172-37 17 0 29.5 11t12.5 28q0 15-8.5 26t-23.5 14l-182 40-1 16q-1 26 81.5 117.5t104.5 91.5q47 0 119-80t72-129q0-36-23.5-53t-51-18.5-51-11.5-23.5-34q0-16 10-34l-68-19q43-44 43-117 0-26-5-58 82-16 144-16 44 0 71.5 1.5t48.5 8.5 31 13.5 20.5 24.5 15.5 33.5 17 47.5 24 60l50-25q-3 40-23 60t-42.5 21-40 6.5-16.5 20.5zM1282 694q-5-5-13.5-15.5t-12-14.5-10.5-11.5-10-10.5l-8-8t-8.5-7.5-8-5-8.5-4.5q-7-3-14.5-5t-20.5-2.5-22-0.5h-32.5-37.5q-126 0-217 43 16-30 36-46.5t54-29.5 65.5-36 46-36.5 50-55 43.5-50.5q12 9 28 31.5t32 36.5 38 13l12-1v76l22 1q247-95 371-190 28-21 50-39t42.5-37.5 33-31 29.5-34 24-31 24.5-37 23-38 27-47.5 29.5-53l7-9q-2 53-43 139-79 165-205 264t-306 142q-14 3-42 7.5t-50 9.5-39 14q3 19 24.5 46t21.5 34q0 11-26 30zM1061 1615q39-26 131.5-47.5t146.5-21.5q9 0 22.5 15.5t28 42.5 26 50 24 51 14.5 33q-121 45-244 45-61 0-125-11zM822 968l48-12 109 177-73 48zM1323 1485q3 15 3 16 0 7-17.5 14.5t-46 13-54 9.5-53.5 7.5-32 4.5l-7-43q21-2 60.5-8.5t72-10 60.5-3.5h14zM866 857l-96 20-6-17q10-1 32.5-7t34.5-6q19 0 35 10zM1061 1491h31l10 83-41 12v-95zM1950 1v-1 1zM1950 1l-1 5-2 2 1-3zM1950 1l1-1z\"}]}}),h.register({\"pied-piper-pp\":{width:1536,height:1792,paths:[{d:\"M1046 1020q0 64-38 109t-91 45q-43 0-70-15v-277q28-17 70-17 53 0 91 45.5t38 109.5zM703 592q0 64-38 109.5t-91 45.5q-43 0-70-15v-277q28-17 70-17 53 0 91 45t38 109zM1265 1023q0-134-88-229t-213-95q-20 0-39 3-23 78-78 136-87 95-211 101v636l211-41v-206q51 19 117 19 125 0 213-95t88-229zM922 596q0-134-88.5-229t-213.5-95q-74 0-141 36h-186v840l211-41v-206q55 19 116 19 125 0 213.5-95t88.5-229zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"pied-piper\":{width:2304,height:1792,paths:[{d:\"M2304 0q-69 46-125 92t-89 81-59.5 71.5-37.5 57.5-22 44.5-14 29.5q-10 18-35.5 136.5t-48.5 164.5q-15 29-50 60.5t-67.5 50.5-72.5 41-48 28q-47 31-151 231-341-14-630 158-92 53-303 179 47-16 86-31t55-22l15-7q71-27 163-64.5t133.5-53.5 108-34.5 142.5-31.5q186-31 465 7 1 0 10 3 11 6 14 17t-3 22l-194 345q-15 29-47 22-128-24-354-24-146 0-402 44.5t-392 46.5q-82 1-149-13t-107-37-61-40-33-34l-1-1v-2q0-6 6-6 138 0 371-55 192-366 374.5-524t383.5-158q5 0 14.5 0.5t38 5 55 12 61.5 24.5 63 39.5 54 59 40 82.5l102-177q2-4 21-42.5t44.5-86.5 61-109.5 84-133.5 100.5-137q66-82 128-141.5t121.5-96.5 92.5-53.5 88-39.5z\"}]}}),h.register({\"pinterest-p\":{width:1280,height:1792,paths:[{d:\"M0 597q0-108 37.5-203.5t103.5-166.5 152-123 185-78 202-26q158 0 294 66.5t221 193.5 85 287q0 96-19 188t-60 177-100 149.5-145 103-189 38.5q-68 0-135-32t-96-88q-10 39-28 112.5t-23.5 95-20.5 71-26 71-32 62.5-46 77.5-62 86.5l-14 5-9-10q-15-157-15-188 0-92 21.5-206.5t66.5-287.5 52-203q-32-65-32-169 0-83 52-156t132-73q61 0 95 40.5t34 102.5q0 66-44 191t-44 187q0 63 45 104.5t109 41.5q55 0 102-25t78.5-68 56-95 38-110.5 20-111 6.5-99.5q0-173-109.5-269.5t-285.5-96.5q-200 0-334 129.5t-134 328.5q0 44 12.5 85t27 65 27 45.5 12.5 30.5q0 28-15 73t-37 45q-2 0-17-3-51-15-90.5-56t-61-94.5-32.5-108-11-106.5z\"}]}}),h.register({\"pinterest-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-725q85-122 108-210 9-34 53-209 21 39 73.5 67t112.5 28q181 0 295.5-147.5t114.5-373.5q0-84-35-162.5t-96.5-139-152.5-97-197-36.5q-104 0-194.5 28.5t-153 76.5-107.5 109.5-66.5 128-21.5 132.5q0 102 39.5 180t116.5 110q13 5 23.5 0t14.5-19q10-44 15-61 6-23-11-42-50-62-50-150 0-150 103.5-256.5t270.5-106.5q149 0 232.5 81t83.5 210q0 168-67.5 286t-173.5 118q-60 0-97-43.5t-23-103.5q8-34 26.5-92.5t29.5-102 11-74.5q0-49-26.5-81.5t-75.5-32.5q-61 0-103.5 56.5t-42.5 139.5q0 72 24 121l-98 414q-24 100-7 254h-183q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z\"}]}}),h.register({pinterest:{width:1536,height:1792,paths:[{d:\"M1536 896q0 209-103 385.5t-279.5 279.5-385.5 103q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214t-172.5-163-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5-21.5 134q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5t273.5-108.5q151 0 235.5 82t84.5 213q0 170-68.5 289t-175.5 119q-61 0-98-43.5t-23-104.5q8-35 26.5-93.5t30-103 11.5-75.5q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281t-127-423q0-209 103-385.5t279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({plane:{width:1408,height:1792,paths:[{d:\"M1376 160q44 52 12 148t-108 172l-161 161 160 696q5 19-12 33l-128 96q-7 6-19 6-4 0-7-1-15-3-21-16l-279-508-259 259 53 194q5 17-8 31l-96 96q-9 9-23 9h-2q-15-2-24-13l-189-252-252-189q-11-7-13-23-1-13 9-25l96-97q9-9 23-9 6 0 8 1l194 53 259-259-508-279q-14-8-17-24-2-16 9-27l128-128q14-13 30-8l665 159 160-160q76-76 172-108t148 12z\"}]}}),h.register({\"play-circle-o\":{width:1536,height:1792,paths:[{d:\"M1184 896q0 37-32 55l-544 320q-15 9-32 9-16 0-32-8-32-19-32-56v-640q0-37 32-56 33-18 64 1l544 320q32 18 32 55zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"play-circle\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1152 951q32-18 32-55t-32-55l-544-320q-31-19-64-1-32 19-32 56v640q0 37 32 56 16 8 32 8 17 0 32-9z\"}]}}),h.register({play:{width:1408,height:1792,paths:[{d:\"M1384 927l-1328 738q-23 13-39.5 3t-16.5-36v-1472q0-26 16.5-36t39.5 3l1328 738q23 13 23 31t-23 31z\"}]}}),h.register({plug:{width:1792,height:1792,paths:[{d:\"M1755 453q37 38 37 90.5t-37 90.5l-401 400 150 150-160 160q-163 163-389.5 186.5t-411.5-100.5l-362 362h-181v-181l362-362q-124-185-100.5-411.5t186.5-389.5l160-160 150 150 400-401q38-37 91-37t90 37 37 90.5-37 90.5l-400 401 234 234 401-400q38-37 91-37t90 37z\"}]}}),h.register({\"plus-circle\":{width:1536,height:1792,paths:[{d:\"M1216 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"plus-square-o\":{width:1408,height:1792,paths:[{d:\"M1152 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zM1280 1248v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"plus-square\":{width:1536,height:1792,paths:[{d:\"M1280 960v-128q0-26-19-45t-45-19h-320v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-320q-26 0-45 19t-19 45v128q0 26 19 45t45 19h320v320q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h320q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({plus:{width:1408,height:1792,paths:[{d:\"M1408 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z\"}]}}),h.register({podcast:{width:1536,height:1792,paths:[{d:\"M994 1192q0 86-17 197-31 215-55 313-22 90-152 90t-152-90q-24-98-55-313-17-110-17-197 0-168 224-168t224 168zM1536 768q0 240-134 434t-350 280q-8 3-15-3t-6-15q7-48 10-66 4-32 6-47 1-9 9-12 159-81 255.5-234t96.5-337q0-180-91-330.5t-247-234.5-337-74q-124 7-237 61t-193.5 140.5-128 202-46.5 240.5q1 184 99 336.5t257 231.5q7 3 9 12 3 21 6 45 1 9 5 32.5t6 35.5q1 9-6.5 15t-15.5 2q-148-58-261-169.5t-173.5-264-52.5-319.5q7-143 66-273.5t154.5-227 225-157.5 272.5-70q164-10 315.5 46.5t261 160.5 175 250.5 65.5 308.5zM994 736q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5zM1282 768q0 122-53.5 228.5t-146.5 177.5q-8 6-16 2t-10-14q-6-52-29-92-7-10 3-20 58-54 91-127t33-155q0-111-58.5-204t-157.5-141.5-212-36.5q-133 15-229 113t-109 231q-10 92 23.5 176t98.5 144q10 10 3 20-24 41-29 93-2 9-10 13t-16-2q-95-74-148.5-183t-51.5-234q3-131 69-244t177-181.5 241-74.5q144-7 268 60t196.5 187.5 72.5 263.5z\"}]}}),h.register({\"power-off\":{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61-298-61-245-164-164-245-61-298q0-182 80.5-343t226.5-270q43-32 95.5-25t83.5 50q32 42 24.5 94.5t-49.5 84.5q-98 74-151.5 181t-53.5 228q0 104 40.5 198.5t109.5 163.5 163.5 109.5 198.5 40.5 198.5-40.5 163.5-109.5 109.5-163.5 40.5-198.5q0-121-53.5-228t-151.5-181q-42-32-49.5-84.5t24.5-94.5q31-43 84-50t95 25q146 109 226.5 270t80.5 343zM896 128v640q0 52-38 90t-90 38-90-38-38-90v-640q0-52 38-90t90-38 90 38 38 90z\"}]}}),h.register({print:{width:1664,height:1792,paths:[{d:\"M384 1536h896v-256h-896v256zM384 896h896v-384h-160q-40 0-68-28t-28-68v-160h-640v640zM1536 960q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 960v416q0 13-9.5 22.5t-22.5 9.5h-224v160q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-224q-13 0-22.5-9.5t-9.5-22.5v-416q0-79 56.5-135.5t135.5-56.5h64v-544q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v256h64q79 0 135.5 56.5t56.5 135.5z\"}]}}),h.register({\"product-hunt\":{width:1792,height:1792,paths:[{d:\"M1150 762q0 56-39.5 95t-95.5 39h-253v-269h253q56 0 95.5 39.5t39.5 95.5zM1329 762q0-130-91.5-222t-222.5-92h-433v896h180v-269h253q130 0 222-91.5t92-221.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({\"puzzle-piece\":{width:1664,height:1792,paths:[{d:\"M1664 1098q0 81-44.5 135t-123.5 54q-41 0-77.5-17.5t-59-38-56.5-38-71-17.5q-110 0-110 124 0 39 16 115t15 115v5q-22 0-33 1-34 3-97.5 11.5t-115.5 13.5-98 5q-61 0-103-26.5t-42-83.5q0-37 17.5-71t38-56.5 38-59 17.5-77.5q0-79-54-123.5t-135-44.5q-84 0-143 45.5t-59 127.5q0 43 15 83t33.5 64.5 33.5 53 15 50.5q0 45-46 89-37 35-117 35-95 0-245-24-9-2-27.5-4t-27.5-4l-13-2q-1 0-3-1-2 0-2-1v-1024q2 1 17.5 3.5t34 5 21.5 3.5q150 24 245 24 80 0 117-35 46-44 46-89 0-22-15-50.5t-33.5-53-33.5-64.5-15-83q0-82 59-127.5t144-45.5q80 0 134 44.5t54 123.5q0 41-17.5 77.5t-38 59-38 56.5-17.5 71q0 57 42 83.5t103 26.5q64 0 180-15t163-17v2q-1 2-3.5 17.5t-5 34-3.5 21.5q-24 150-24 245 0 80 35 117 44 46 89 46 22 0 50.5-15t53-33.5 64.5-33.5 83-15q82 0 127.5 59t45.5 143z\"}]}}),h.register({qq:{width:1792,height:1792,paths:[{d:\"M270 806q-8-19-8-52 0-20 11-49t24-45q-1-22 7.5-53t22.5-43q0-139 92.5-288.5t217.5-209.5q139-66 324-66 133 0 266 55 49 21 90 48t71 56 55 68 42 74 32.5 84.5 25.5 89.5 22 98l1 5q55 83 55 150 0 14-9 40t-9 38q0 1 1.5 3.5t3.5 5 2 3.5q77 114 120.5 214.5t43.5 208.5q0 43-19.5 100t-55.5 57q-9 0-19.5-7.5t-19-17.5-19-26-16-26.5-13.5-26-9-17.5q-1-1-3-1l-5 4q-59 154-132 223 20 20 61.5 38.5t69 41.5 35.5 65q-2 4-4 16t-7 18q-64 97-302 97-53 0-110.5-9t-98-20-104.5-30q-15-5-23-7-14-4-46-4.5t-40-1.5q-41 45-127.5 65t-168.5 20q-35 0-69-1.5t-93-9-101-20.5-74.5-40-32.5-64q0-40 10-59.5t41-48.5q11-2 40.5-13t49.5-12q4 0 14-2 2-2 2-4l-2-3q-48-11-108-105.5t-73-156.5l-5-3q-4 0-12 20-18 41-54.5 74.5t-77.5 37.5h-1q-4 0-6-4.5t-5-5.5q-23-54-23-100 0-275 252-466z\"}]}}),h.register({qrcode:{width:1408,height:1792,paths:[{d:\"M384 1152v128h-128v-128h128zM384 384v128h-128v-128h128zM1152 384v128h-128v-128h128zM128 1407h384v-383h-384v383zM128 640h384v-384h-384v384zM896 640h384v-384h-384v384zM640 896v640h-640v-640h640zM1152 1408v128h-128v-128h128zM1408 1408v128h-128v-128h128zM1408 896v384h-384v-128h-128v384h-128v-640h384v128h128v-128h128zM640 128v640h-640v-640h640zM1408 128v640h-640v-640h640z\"}]}}),h.register({\"question-circle-o\":{width:1536,height:1792,paths:[{d:\"M880 1200v160q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-160q0-14 9-23t23-9h160q14 0 23 9t9 23zM1136 704q0 50-15 90t-45.5 69-52 44-59.5 36q-32 18-46.5 28t-26 24-11.5 29v32q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-68q0-35 10.5-64.5t24-47.5 39-35.5 41-25.5 44.5-21q53-25 75-43t22-49q0-42-43.5-71.5t-95.5-29.5q-56 0-95 27-29 20-80 83-9 12-25 12-11 0-19-6l-108-82q-10-7-12-20t5-23q122-192 349-192 129 0 238.5 89.5t109.5 214.5zM768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"question-circle\":{width:1536,height:1792,paths:[{\nd:\"M896 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zM1152 704q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({question:{width:1024,height:1792,paths:[{d:\"M704 1256v240q0 16-12 28t-28 12h-240q-16 0-28-12t-12-28v-240q0-16 12-28t28-12h240q16 0 28 12t12 28zM1020 656q0 54-15.5 101t-35 76.5-55 59.5-57.5 43.5-61 35.5q-41 23-68.5 65t-27.5 67q0 17-12 32.5t-28 15.5h-240q-15 0-25.5-18.5t-10.5-37.5v-45q0-83 65-156.5t143-108.5q59-27 84-56t25-76q0-42-46.5-74t-107.5-32q-65 0-108 29-35 25-107 115-13 16-31 16-12 0-25-8l-164-125q-13-10-15.5-25t5.5-28q160-266 464-266 80 0 161 31t146 83 106 127.5 41 158.5z\"}]}}),h.register({quora:{width:1792,height:1792,paths:[{d:\"M1255 787q0-318-105-474.5t-330-156.5q-222 0-326 157t-104 474q0 316 104 471.5t326 155.5q74 0 131-17-22-43-39-73t-44-65-53.5-56.5-63-36-77.5-14.5q-46 0-79 16l-49-97q105-91 276-91 132 0 215.5 54t150.5 155q67-149 67-402zM1645 1419h117q3 27-2 67t-26.5 95-58 100.5-107 78-162.5 32.5q-71 0-130.5-19t-105.5-56-79-78-66-96q-97 27-205 27-150 0-292.5-58t-253-158.5-178-249-67.5-317.5q0-170 67.5-319.5t178.5-250.5 253.5-159 291.5-58q121 0 238.5 36t217 106 176 164.5 119.5 219 43 261.5q0 190-80.5 347.5t-218.5 264.5q47 70 93.5 106.5t104.5 36.5q61 0 94-37.5t38-85.5z\"}]}}),h.register({\"quote-left\":{width:1664,height:1792,paths:[{d:\"M768 960v384q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-704q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5h64q26 0 45 19t19 45v128q0 26-19 45t-45 19h-64q-106 0-181 75t-75 181v32q0 40 28 68t68 28h224q80 0 136 56t56 136zM1664 960v384q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-704q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5h64q26 0 45 19t19 45v128q0 26-19 45t-45 19h-64q-106 0-181 75t-75 181v32q0 40 28 68t68 28h224q80 0 136 56t56 136z\"}]}}),h.register({\"quote-right\":{width:1664,height:1792,paths:[{d:\"M768 320v704q0 104-40.5 198.5t-109.5 163.5-163.5 109.5-198.5 40.5h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64q106 0 181-75t75-181v-32q0-40-28-68t-68-28h-224q-80 0-136-56t-56-136v-384q0-80 56-136t136-56h384q80 0 136 56t56 136zM1664 320v704q0 104-40.5 198.5t-109.5 163.5-163.5 109.5-198.5 40.5h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64q106 0 181-75t75-181v-32q0-40-28-68t-68-28h-224q-80 0-136-56t-56-136v-384q0-80 56-136t136-56h384q80 0 136 56t56 136z\"}]}}),h.register({ra:{width:1792,height:1792,paths:[{d:\"M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z\"}]}}),h.register({random:{width:1792,height:1792,paths:[{d:\"M666 481q-60 92-137 273-22-45-37-72.5t-40.5-63.5-51-56.5-63-35-81.5-14.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q250 0 410 225zM1792 1280q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192q-32 0-85 0.5t-81 1-73-1-71-5-64-10.5-63-18.5-58-28.5-59-40-55-53.5-56-69.5q59-93 136-273 22 45 37 72.5t40.5 63.5 51 56.5 63 35 81.5 14.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zM1792 384q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-256q-48 0-87 15t-69 45-51 61.5-45 77.5q-32 62-78 171-29 66-49.5 111t-54 105-64 100-74 83-90 68.5-106.5 42-128 16.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q48 0 87-15t69-45 51-61.5 45-77.5q32-62 78-171 29-66 49.5-111t54-105 64-100 74-83 90-68.5 106.5-42 128-16.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z\"}]}}),h.register({ravelry:{width:2176,height:1792,paths:[{d:\"M1143 1733q-6-1-11-4-13-8-36-23t-86-65-116.5-104.5-112-140-89.5-172.5q-17-3-175-37 66 213 235 362t391 184zM502 1127l168 28q-25-76-41-167.5t-19-145.5l-4-53q-84 82-121 224 5 65 17 114zM612 518q-43 64-77 148 44-46 74-68zM2049 952q0-161-62-307t-167.5-252-250.5-168.5-304-62.5q-147 0-281 52.5t-240 148.5q-30 58-45 160 60-51 143-83.5t158.5-43 143-13.5 108.5 1l40 3q33 1 53 15.5t24.5 33 6.5 37-1 28.5q-126-11-227.5-0.5t-183 43.5-142.5 71.5-131 98.5q4 36 11.5 92.5t35.5 178 62 179.5q123 6 247.5-14.5t214.5-53.5 162.5-67 109.5-59l37-24q22-16 39.5-20.5t30.5 5 17 34.5q14 97-39 121-208 97-467 134-135 20-317 16 41 96 110 176.5t137 127 130.5 79 101.5 43.5l39 12q143 23 263-15 195-99 314-289t119-418zM2123 915q-14 135-40 212-70 208-181.5 346.5t-318.5 253.5q-48 33-82 44-72 26-163 16-36 3-73 3-283 0-504.5-173t-295.5-442q-1 0-4-0.5t-5-0.5q-6 50 2.5 112.5t26 115 36 98 31.5 71.5l14 26q8 12 54 82-71-38-124.5-106.5t-78.5-140-39.5-137-17.5-107.5l-2-42q-5-2-33.5-12.5t-48.5-18-53-20.5-57.5-25-50-25.5-42.5-27-25-25.5q19 10 50.5 25.5t113 45.5 145.5 38l2-32q11-149 94-290 41-202 176-365 28-115 81-214 15-28 32-45t49-32q158-74 303.5-104t302-11 306.5 97q220 115 333 336t87 474z\"}]}}),h.register({rebel:{width:1792,height:1792,paths:[{d:\"M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z\"}]}}),h.register({recycle:{width:1792,height:1792,paths:[{d:\"M836 1169l-15 368-2 22-420-29q-36-3-67-31.5t-47-65.5q-11-27-14.5-55t4-65 12-55 21.5-64 19-53q78 12 509 28zM449 583l180 379-147-92q-63 72-111.5 144.5t-72.5 125-39.5 94.5-18.5 63l-4 21-190-357q-17-26-18-56t6-47l8-18q35-63 114-188l-140-86zM1680 1100l-188 359q-12 29-36.5 46.5t-43.5 20.5l-18 4q-71 7-219 12l8 164-230-367 211-362 7 173q170 16 283 5t170-33zM895 176q-47 63-265 435l-317-187-19-12 225-356q20-31 60-45t80-10q24 2 48.5 12t42 21 41.5 33 36 34.5 36 39.5 32 35zM1550 483l212 363q18 37 12.5 76t-27.5 74q-13 20-33 37t-38 28-48.5 22-47 16-51.5 14-46 12q-34-72-265-436l313-195zM1407 257l142-83-220 373-419-20 151-86q-34-89-75-166t-75.5-123.5-64.5-80-47-46.5l-17-13 405 1q31-3 58 10.5t39 28.5l11 15q39 61 112 190z\"}]}}),h.register({\"reddit-alien\":{width:1792,height:1792,paths:[{d:\"M1792 846q0 58-29.5 105.5t-79.5 72.5q12 46 12 96 0 155-106.5 287t-290.5 208.5-400 76.5-399.5-76.5-290-208.5-106.5-287q0-47 11-94-51-25-82-73.5t-31-106.5q0-82 58-140.5t141-58.5q85 0 145 63 218-152 515-162l116-521q3-13 15-21t26-5l369 81q18-37 54-59.5t79-22.5q62 0 106 43.5t44 105.5-44 106-106 44-105.5-43.5-43.5-105.5l-334-74-104 472q300 9 519 160 58-61 143-61 83 0 141 58.5t58 140.5zM418 1045q0 62 43.5 106t105.5 44 106-44 44-106-44-105.5-106-43.5q-61 0-105 44t-44 105zM1228 1400q11-11 11-26t-11-26q-10-10-25-10t-26 10q-41 42-121 62t-160 20-160-20-121-62q-11-10-26-10t-25 10q-11 10-11 25.5t11 26.5q43 43 118.5 68t122.5 29.5 91 4.5 91-4.5 122.5-29.5 118.5-68zM1225 1195q62 0 105.5-44t43.5-106q0-61-44-105t-105-44q-62 0-106 43.5t-44 105.5 44 106 106 44z\"}]}}),h.register({\"reddit-square\":{width:1536,height:1792,paths:[{d:\"M939 1129q13 13 0 26-53 53-171 53t-171-53q-13-13 0-26 5-6 13-6t13 6q42 42 145 42t145-42q5-6 13-6t13 6zM676 973q0 31-23 54t-54 23-54-23-23-54q0-32 22.5-54.5t54.5-22.5 54.5 22.5 22.5 54.5zM1014 973q0 31-23 54t-54 23-54-23-23-54q0-32 22.5-54.5t54.5-22.5 54.5 22.5 22.5 54.5zM1229 870q0-42-30-72t-73-30q-42 0-73 31-113-78-267-82l54-243 171 39q1 32 23.5 54t53.5 22q32 0 54.5-22.5t22.5-54.5-22.5-54.5-54.5-22.5q-48 0-69 43l-189-42q-17-5-21 13l-60 268q-154 6-265 83-30-32-74-32-43 0-73 30t-30 72q0 30 16 55t42 38q-5 25-5 48 0 122 120 208.5t289 86.5q170 0 290-86.5t120-208.5q0-25-6-49 25-13 40.5-37.5t15.5-54.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({reddit:{width:1792,height:1792,paths:[{d:\"M1095 1167q16 16 0 31-62 62-199 62t-199-62q-16-15 0-31 6-6 15-6t15 6q48 49 169 49 120 0 169-49 6-6 15-6t15 6zM788 986q0 37-26 63t-63 26-63.5-26-26.5-63q0-38 26.5-64t63.5-26 63 26.5 26 63.5zM1183 986q0 37-26.5 63t-63.5 26-63-26-26-63 26-63.5 63-26.5 63.5 26 26.5 64zM1434 866q0-49-35-84t-85-35-86 36q-130-90-311-96l63-283 200 45q0 37 26 63t63 26 63.5-26.5 26.5-63.5-26.5-63.5-63.5-26.5q-54 0-80 50l-221-49q-19-5-25 16l-69 312q-180 7-309 97-35-37-87-37-50 0-85 35t-35 84q0 35 18.5 64t49.5 44q-6 27-6 56 0 142 140 243t337 101q198 0 338-101t140-243q0-32-7-57 30-15 48-43.5t18-63.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({refresh:{width:1536,height:1792,paths:[{d:\"M1511 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zM1536 256v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z\"}]}}),h.register({registered:{width:1792,height:1792,paths:[{d:\"M1042 703q0-88-60-121-33-18-117-18h-123v281h162q66 0 102-37t36-105zM1094 988l205 373q8 17-1 31-8 16-27 16h-152q-20 0-28-17l-194-365h-155v350q0 14-9 23t-23 9h-134q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h294q128 0 190 24 85 31 134 109t49 180q0 92-42.5 165.5t-115.5 109.5q6 10 9 16zM896 160q-150 0-286 58.5t-234.5 157-157 234.5-58.5 286 58.5 286 157 234.5 234.5 157 286 58.5 286-58.5 234.5-157 157-234.5 58.5-286-58.5-286-157-234.5-234.5-157-286-58.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({remove:{width:1408,height:1792,paths:[{d:\"M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"}]}}),h.register({renren:{width:1536,height:1792,paths:[{d:\"M1133 1570q-171 94-368 94-196 0-367-94 138-87 235.5-211t131.5-268q35 144 132.5 268t235.5 211zM638 142v485q0 252-126.5 459.5t-330.5 306.5q-181-215-181-495 0-187 83.5-349.5t229.5-269.5 325-137zM1536 898q0 280-181 495-204-99-330.5-306.5t-126.5-459.5v-485q179 30 325 137t229.5 269.5 83.5 349.5z\"}]}}),h.register({reorder:{width:1536,height:1792,paths:[{d:\"M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({repeat:{width:1536,height:1792,paths:[{d:\"M1536 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z\"}]}}),h.register({\"reply-all\":{width:1792,height:1792,paths:[{d:\"M640 1082v70q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v69l-397 398q-19 19-19 45t19 45zM1792 1120q0 58-17 133.5t-38.5 138-48 125-40.5 90.5l-20 40q-8 17-28 17-6 0-9-1-25-8-23-34 43-400-106-565-64-71-170.5-110.5t-267.5-52.5v251q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v262q411 28 599 221 169 173 169 509z\"}]}}),h.register({reply:{width:1792,height:1792,paths:[{d:\"M1792 1120q0 166-127 451-3 7-10.5 24t-13.5 30-13 22q-12 17-28 17-15 0-23.5-10t-8.5-25q0-9 2.5-26.5t2.5-23.5q5-68 5-123 0-101-17.5-181t-48.5-138.5-80-101-105.5-69.5-133-42.5-154-21.5-175.5-6h-224v256q0 26-19 45t-45 19-45-19l-512-512q-19-19-19-45t19-45l512-512q19-19 45-19t45 19 19 45v256h224q713 0 875 403 53 134 53 333z\"}]}}),h.register({resistance:{width:1792,height:1792,paths:[{d:\"M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z\"}]}}),h.register({retweet:{width:1920,height:1792,paths:[{d:\"M1280 1504q0 13-9.5 22.5t-22.5 9.5h-960q-8 0-13.5-2t-9-7-5.5-8-3-11.5-1-11.5v-13-11-160-416h-192q-26 0-45-19t-19-45q0-24 15-41l320-384q19-22 49-22t49 22l320 384q15 17 15 41 0 26-19 45t-45 19h-192v384h576q16 0 25 11l160 192q7 10 7 21zM1920 1088q0 24-15 41l-320 384q-20 23-49 23t-49-23l-320-384q-15-17-15-41 0-26 19-45t45-19h192v-384h-576q-16 0-25-12l-160-192q-7-9-7-20 0-13 9.5-22.5t22.5-9.5h960q8 0 13.5 2t9 7 5.5 8 3 11.5 1 11.5v13 11 160 416h192q26 0 45 19t19 45z\"}]}}),h.register({rmb:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({road:{width:1920,height:1792,paths:[{d:\"M1111 996v-4l-24-320q-1-13-11-22.5t-23-9.5h-186q-13 0-23 9.5t-11 22.5l-24 320v4q-1 12 8 20t21 8h244q12 0 21-8t8-20zM1870 1463q0 73-46 73h-704q13 0 22-9.5t8-22.5l-20-256q-1-13-11-22.5t-23-9.5h-272q-13 0-23 9.5t-11 22.5l-20 256q-1 13 8 22.5t22 9.5h-704q-46 0-46-73 0-54 26-116l417-1044q8-19 26-33t38-14h339q-13 0-23 9.5t-11 22.5l-15 192q-1 14 8 23t22 9h166q13 0 22-9t8-23l-15-192q-1-13-11-22.5t-23-9.5h339q20 0 38 14t26 33l417 1044q26 62 26 116z\"}]}}),h.register({rocket:{width:1664,height:1792,paths:[{d:\"M1440 448q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1664 160q0 249-75.5 430.5t-253.5 360.5q-81 80-195 176l-20 379q-2 16-16 26l-384 224q-7 4-16 4-12 0-23-9l-64-64q-13-14-8-32l85-276-281-281-276 85q-3 1-9 1-14 0-23-9l-64-64q-17-19-5-39l224-384q10-14 26-16l379-20q96-114 176-195 188-187 358-258t431-71q14 0 24 9.5t10 22.5z\"}]}}),h.register({\"rotate-left\":{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"}]}}),h.register({\"rotate-right\":{width:1536,height:1792,paths:[{d:\"M1536 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z\"}]}}),h.register({rouble:{width:1280,height:1792,paths:[{d:\"M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z\"}]}}),h.register({\"rss-square\":{width:1536,height:1792,paths:[{d:\"M512 1280q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM863 1374q-13-233-176.5-396.5t-396.5-176.5q-14-1-24 9t-10 23v128q0 13 8.5 22t21.5 10q154 11 264 121t121 264q1 13 10 21.5t22 8.5h128q13 0 23-10t9-24zM1247 1375q-5-154-56-297.5t-139.5-260-205-205-260-139.5-297.5-56q-14-1-23 9-10 10-10 23v128q0 13 9 22t22 10q204 7 378 111.5t278.5 278.5 111.5 378q1 13 10 22t22 9h128q13 0 23-10 11-9 9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({rss:{width:1408,height:1792,paths:[{d:\"M384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1467q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zM1408 1469q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z\"}]}}),h.register({rub:{width:1280,height:1792,paths:[{d:\"M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z\"}]}}),h.register({ruble:{width:1280,height:1792,paths:[{d:\"M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z\"}]}}),h.register({rupee:{width:898,height:1792,paths:[{d:\"M898 470v102q0 14-9 23t-23 9h-168q-23 144-129 234t-276 110q167 178 459 536 14 16 4 34-8 18-29 18h-195q-16 0-25-12-306-367-498-571-9-9-9-22v-127q0-13 9.5-22.5t22.5-9.5h112q132 0 212.5-43t102.5-125h-427q-14 0-23-9t-9-23v-102q0-14 9-23t23-9h413q-57-113-268-113h-145q-13 0-22.5-9.5t-9.5-22.5v-133q0-14 9-23t23-9h832q14 0 23 9t9 23v102q0 14-9 23t-23 9h-233q47 61 64 144h171q14 0 23 9t9 23z\"}]}}),h.register({s15:{width:1792,height:1792,paths:[{d:\"M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z\"}]}}),h.register({safari:{width:1792,height:1792,paths:[{d:\"M949 893q0 26-16.5 45t-41.5 19q-26 0-45-16.5t-19-41.5q0-26 17-45t42-19 44 16.5 19 41.5zM964 951l350-581q-9 8-67.5 62.5t-125.5 116.5-136.5 127-117 110.5-50.5 51.5l-349 580q7-7 67-62t126-116.5 136-127 117-111 50-50.5zM1611 896q0 201-104 371-3-2-17-11t-26.5-16.5-16.5-7.5q-13 0-13 13 0 10 59 44-74 112-184.5 190.5t-241.5 110.5l-16-67q-1-10-15-10-5 0-8 5.5t-2 9.5l16 68q-72 15-146 15-199 0-372-105 1-2 13-20.5t21.5-33.5 9.5-19q0-13-13-13-6 0-17 14.5t-22.5 34.5-13.5 23q-113-75-192-187.5t-110-244.5l69-15q10-3 10-15 0-5-5.5-8t-10.5-2l-68 15q-14-72-14-139 0-206 109-379 2 1 18.5 12t30 19 17.5 8q13 0 13-12 0-6-12.5-15.5t-32.5-21.5l-20-12q77-112 189-189t244-107l15 67q2 10 15 10 5 0 8-5.5t2-10.5l-15-66q71-13 134-13 204 0 379 109-39 56-39 65 0 13 12 13 11 0 48-64 111 75 187.5 186t107.5 241l-56 12q-10 2-10 16 0 5 5.5 8t9.5 2l57-13q14 72 14 140zM1696 896q0-163-63.5-311t-170.5-255-255-170.5-311-63.5-311 63.5-255 170.5-170.5 255-63.5 311 63.5 311 170.5 255 255 170.5 311 63.5 311-63.5 255-170.5 170.5-255 63.5-311zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({save:{width:1536,height:1792,paths:[{d:\"M384 1536h768v-384h-768v384zM1280 1536h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zM896 608v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zM1536 640v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"}]}}),h.register({scissors:{width:1792,height:1792,paths:[{d:\"M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1260 960l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zM579 700q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zM494 1445q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zM672 832l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zM896 1056l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zM1600 1472l128-64-520-408-177 138q-2 3-13 7z\"}]}}),h.register({scribd:{width:1536,height:1792,paths:[{d:\"M1500 1549q0 89-63 152.5t-153 63.5-153.5-63.5-63.5-152.5q0-90 63.5-153.5t153.5-63.5 153 63.5 63 153.5zM1267 1268q-115 15-192.5 102.5t-77.5 205.5q0 74 33 138-146 78-379 78-109 0-201-21t-153.5-54.5-110.5-76.5-76-85-44.5-83-23.5-66.5-6-39.5q0-19 4.5-42.5t18.5-56 36.5-58 64-43.5 94.5-18 94 17.5 63 41 35.5 53 17.5 49 4 33.5q0 34-23 81 28 27 82 42t93 17l40 1q115 0 190-51t75-133q0-26-9-48.5t-31.5-44.5-49.5-41-74-44-93.5-47.5-119.5-56.5q-28-13-43-20-116-55-187-100t-122.5-102-72-125.5-20.5-162.5q0-78 20.5-150t66-137.5 112.5-114 166.5-77 221.5-28.5q120 0 220 26t164.5 67 109.5 94 64 105.5 19 103.5q0 46-15 82.5t-36.5 58-48.5 36-49 19.5-39 5h-8-32t-39-5-44-14-41-28-37-46-24-70.5-10-97.5q-15-16-59-25.5t-81-10.5l-37-1q-68 0-117.5 31t-70.5 70-21 76q0 24 5 43t24 46 53 51 97 53.5 150 58.5q76 25 138.5 53.5t109 55.5 83 59 60.5 59.5 41 62.5 26.5 62 14.5 63.5 6 62 1 62.5z\"}]}}),h.register({\"search-minus\":{width:1664,height:1792,paths:[{d:\"M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-576q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h576q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z\"}]}}),h.register({\"search-plus\":{width:1664,height:1792,paths:[{d:\"M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-224v224q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-224h-224q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h224v-224q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5v224h224q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z\"}]}}),h.register({search:{width:1664,height:1792,paths:[{d:\"M1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 52-38 90t-90 38q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z\"}]}}),h.register({sellsy:{width:2048,height:1792,paths:[{d:\"M1500 1371v-733q0-21-15-36t-35-15h-93q-20 0-35 15t-15 36v733q0 20 15 35t35 15h93q20 0 35-15t15-35zM1216 1371v-531q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v531q0 20 15 35t35 15h101q20 0 35-15t15-35zM924 1371v-429q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v429q0 20 15 35t35 15h101q20 0 35-15t15-35zM632 1371v-362q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v362q0 20 15 35t35 15h101q20 0 35-15t15-35zM2048 1225q0 166-118 284t-284 118h-1244q-166 0-284-118t-118-284q0-116 63-214.5t168-148.5q-10-34-10-73 0-113 80.5-193.5t193.5-80.5q102 0 180 67 45-183 194-300t338-117q149 0 275 73.5t199.5 199.5 73.5 275q0 66-14 122 135 33 221 142.5t86 247.5z\"}]}}),h.register({\"send-o\":{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-527-215-298 327q-18 21-47 21-14 0-23-4-19-7-30-23.5t-11-36.5v-452l-472-193q-37-14-40-55-3-39 32-59l1664-960q35-21 68 2zM1422 1510l221-1323-1434 827 336 137 863-639-478 797z\"}]}}),h.register({send:{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\"}]}}),h.register({server:{width:1792,height:1792,paths:[{d:\"M128 1408h1024v-128h-1024v128zM128 896h1024v-128h-1024v128zM1696 1344q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM128 384h1024v-128h-1024v128zM1696 832q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1696 320q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1792 1152v384h-1792v-384h1792zM1792 640v384h-1792v-384h1792zM1792 128v384h-1792v-384h1792z\"}]}}),h.register({\"share-alt-square\":{width:1536,height:1792,paths:[{d:\"M1280 1195q0-88-62.5-151t-150.5-63q-84 0-145 58l-241-120q2-16 2-23t-2-23l241-120q61 58 145 58 88 0 150.5-63t62.5-151-62.5-150.5-150.5-62.5-151 62.5-63 150.5q0 7 2 23l-241 120q-62-57-145-57-88 0-150.5 62.5t-62.5 150.5 62.5 150.5 150.5 62.5q83 0 145-57l241 120q-2 16-2 23 0 88 63 150.5t151 62.5 150.5-62.5 62.5-150.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"share-alt\":{width:1536,height:1792,paths:[{d:\"M1216 1024q133 0 226.5 93.5t93.5 226.5-93.5 226.5-226.5 93.5-226.5-93.5-93.5-226.5q0-12 2-34l-360-180q-92 86-218 86-133 0-226.5-93.5t-93.5-226.5 93.5-226.5 226.5-93.5q126 0 218 86l360-180q-2-22-2-34 0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5-93.5 226.5-226.5 93.5q-126 0-218-86l-360 180q2 22 2 34t-2 34l360 180q92-86 218-86z\"}]}}),h.register({\"share-square-o\":{width:1664,height:1792,paths:[{d:\"M1408 989v259q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h255v0q13 0 22.5 9.5t9.5 22.5q0 27-26 32-77 26-133 60-10 4-16 4h-112q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-214q0-19 18-29 28-13 54-37 16-16 35-8 21 9 21 29zM1645 493l-384 384q-18 19-45 19-12 0-25-5-39-17-39-59v-192h-160q-323 0-438 131-119 137-74 473 3 23-20 34-8 2-12 2-16 0-26-13-10-14-21-31t-39.5-68.5-49.5-99.5-38.5-114-17.5-122q0-49 3.5-91t14-90 28-88 47-81.5 68.5-74 94.5-61.5 124.5-48.5 159.5-30.5 196.5-11h160v-192q0-42 39-59 13-5 25-5 26 0 45 19l384 384q19 19 19 45t-19 45z\"}]}}),h.register({\"share-square\":{width:1536,height:1792,paths:[{d:\"M1005 1101l352-352q19-19 19-45t-19-45l-352-352q-30-31-69-14-40 17-40 59v160q-119 0-216 19.5t-162.5 51-114 79-76.5 95.5-44.5 109-21.5 111.5-5 110.5q0 181 167 404 11 12 25 12 7 0 13-3 22-9 19-33-44-354 62-473 46-52 130-75.5t224-23.5v160q0 42 40 59 12 5 24 5 26 0 45-19zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({share:{width:1792,height:1792,paths:[{d:\"M1792 640q0 26-19 45l-512 512q-19 19-45 19t-45-19-19-45v-256h-224q-98 0-175.5 6t-154 21.5-133 42.5-105.5 69.5-80 101-48.5 138.5-17.5 181q0 55 5 123 0 6 2.5 23.5t2.5 26.5q0 15-8.5 25t-23.5 10q-16 0-28-17-7-9-13-22t-13.5-30-10.5-24q-127-285-127-451 0-199 53-333 162-403 875-403h224v-256q0-26 19-45t45-19 45 19l512 512q19 19 19 45z\"}]}}),h.register({shekel:{width:1536,height:1792,paths:[{d:\"M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({sheqel:{width:1536,height:1792,paths:[{d:\"M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({shield:{width:1280,height:1792,paths:[{d:\"M1088 960v-640h-448v1137q119-63 213-137 235-184 235-360zM1280 192v768q0 86-33.5 170.5t-83 150-118 127.5-126.5 103-121 77.5-89.5 49.5-42.5 20q-12 6-26 6t-26-6q-16-7-42.5-20t-89.5-49.5-121-77.5-126.5-103-118-127.5-83-150-33.5-170.5v-768q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({ship:{width:2048,height:1792,paths:[{\nd:\"M1811 1555q19-19 45-19t45 19l128 128-90 90-83-83-83 83q-18 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-128-128 90-90 83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83zM237 1517q-19 19-45 19t-45-19l-128-128 90-90 83 82 83-82q19-19 45-19t45 19l83 82 64-64v-293l-210-314q-17-26-7-56.5t40-40.5l177-58v-299h128v-128h256v-128h256v128h256v128h128v299l177 58q30 10 40 40.5t-7 56.5l-210 314v293l19-18q19-19 45-19t45 19l83 82 83-82q19-19 45-19t45 19l128 128-90 90-83-83-83 83q-18 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83zM640 384v128l384-128 384 128v-128h-128v-128h-512v128h-128z\"}]}}),h.register({shirtsinbulk:{width:1536,height:1792,paths:[{d:\"M0 0h1536v1392l-776 338-760-338v-1392zM1436 1327v-926h-1336v926l661 294zM1436 301v-201h-1336v201h1336zM181 599v115h-37v-115h37zM181 747v115h-37v-115h37zM181 895v115h-37v-115h37zM181 1043v115h-37v-115h37zM181 1191v115h-37v-115h37zM207 1334l15-34 105 47-15 33zM343 1394l15-34 105 46-15 34zM478 1454l15-34 105 46-15 34zM614 1513l15-33 104 46-15 34zM797 1526l105-46 15 33-105 47zM932 1466l105-46 15 34-105 46zM1068 1406l105-46 15 34-105 46zM1203 1347l105-47 15 34-105 46zM259 147v36h-114v-36h114zM421 147v36h-115v-36h115zM583 147v36h-115v-36h115zM744 147v36h-114v-36h114zM906 147v36h-114v-36h114zM1068 147v36h-115v-36h115zM1230 147v36h-115v-36h115zM1391 147v36h-114v-36h114zM181 487v79h-37v-115h115v36h-78zM421 451v36h-115v-36h115zM583 451v36h-115v-36h115zM744 451v36h-114v-36h114zM906 451v36h-114v-36h114zM1068 451v36h-115v-36h115zM1230 451v36h-115v-36h115zM1355 566v-79h-78v-36h115v115h-37zM1355 714v-115h37v115h-37zM1355 862v-115h37v115h-37zM1355 1010v-115h37v115h-37zM1355 1158v-115h37v115h-37zM1355 1306v-115h37v115h-37zM760 1271q-129 0-221-91.5t-92-221.5q0-129 92-221t221-92q130 0 221.5 92t91.5 221q0 130-91.5 221.5t-221.5 91.5zM595 890q0 36 19.5 56.5t49.5 25 64 7 64 2 49.5 9 19.5 30.5q0 49-112 49-97 0-123-51h-3l-31 63q67 42 162 42 29 0 56.5-5t55.5-16 45.5-33 17.5-53q0-46-27.5-69.5t-67.5-27-79.5-3-67-5-27.5-25.5q0-21 20.5-33t40.5-15 41-3q34 0 70.5 11t51.5 34h3l30-58q-3-1-21-8.5t-22.5-9-19.5-7-22-7-20-4.5-24-4-23-1q-29 0-56.5 5t-54 16.5-43 34-16.5 53.5z\"}]}}),h.register({\"shopping-bag\":{width:1792,height:1792,paths:[{d:\"M1757 1408l35 313q3 28-16 50-19 21-48 21h-1664q-29 0-48-21-19-22-16-50l35-313h1722zM1664 569l86 775h-1708l86-775q3-24 21-40.5t43-16.5h256v128q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5v-128h384v128q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5v-128h256q25 0 43 16.5t21 40.5zM1280 384v256q0 26-19 45t-45 19-45-19-19-45v-256q0-106-75-181t-181-75-181 75-75 181v256q0 26-19 45t-45 19-45-19-19-45v-256q0-159 112.5-271.5t271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({\"shopping-basket\":{width:2048,height:1792,paths:[{d:\"M1920 768q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5h-15l-115 662q-8 46-44 76t-82 30h-1280q-46 0-82-30t-44-76l-115-662h-15q-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5h1792zM485 1568q26-2 43.5-22.5t15.5-46.5l-32-416q-2-26-22.5-43.5t-46.5-15.5-43.5 22.5-15.5 46.5l32 416q2 25 20.5 42t43.5 17h5zM896 1504v-416q0-26-19-45t-45-19-45 19-19 45v416q0 26 19 45t45 19 45-19 19-45zM1280 1504v-416q0-26-19-45t-45-19-45 19-19 45v416q0 26 19 45t45 19 45-19 19-45zM1632 1509l32-416q2-26-15.5-46.5t-43.5-22.5-46.5 15.5-22.5 43.5l-32 416q-2 26 15.5 46.5t43.5 22.5h5q25 0 43.5-17t20.5-42zM476 292l-93 412h-132l101-441q19-88 89-143.5t160-55.5h167q0-26 19-45t45-19h384q26 0 45 19t19 45h167q90 0 160 55.5t89 143.5l101 441h-132l-93-412q-11-44-45.5-72t-79.5-28h-167q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45h-167q-45 0-79.5 28t-45.5 72z\"}]}}),h.register({\"shopping-cart\":{width:1664,height:1792,paths:[{d:\"M640 1536q0 52-38 90t-90 38-90-38-38-90 38-90 90-38 90 38 38 90zM1536 1536q0 52-38 90t-90 38-90-38-38-90 38-90 90-38 90 38 38 90zM1664 448v512q0 24-16.5 42.5t-40.5 21.5l-1044 122q13 60 13 70 0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-11 8-31.5t16-36 21.5-40 15.5-29.5l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t19.5 15.5 13 24.5 8 26 5.5 29.5 4.5 26h1201q26 0 45 19t19 45z\"}]}}),h.register({shower:{width:1920,height:1792,paths:[{d:\"M1433 249q10 10 10 23t-10 23l-626 626q-10 10-23 10t-23-10l-82-82q-10-10-10-23t10-23l44-44q-72-91-81.5-207t46.5-215q-74-71-176-71-106 0-181 75t-75 181v1280h-256v-1280q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5q106 0 201 41t166 115q94-39 197-24.5t185 79.5l44-44q10-10 23-10t23 10zM1344 512q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1600 640q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1856 512q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 640q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1408 704q0-26 19-45t45-19 45 19 19 45-19 45-45 19-45-19-19-45zM1728 640q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 768q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1344 896q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1600 768q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 1024q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1472 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 1024q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1344 1024q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 1152q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 1280q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19z\"}]}}),h.register({\"sign-in\":{width:1536,height:1792,paths:[{d:\"M1184 896q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45zM1536 544v704q0 119-84.5 203.5t-203.5 84.5h-320q-13 0-22.5-9.5t-9.5-22.5q0-4-1-20t-0.5-26.5 3-23.5 10-19.5 20.5-6.5h320q66 0 113-47t47-113v-704q0-66-47-113t-113-47h-288-11-13t-11.5-1-11.5-3-8-5.5-7-9-2-13.5q0-4-1-20t-0.5-26.5 3-23.5 10-19.5 20.5-6.5h320q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"sign-language\":{width:1664,height:1792,paths:[{d:\"M831 673q32 0 59 18l222 148q61 40 110 97l146 170q40 46 29 106l-72 413q-6 32-29.5 53.5t-55.5 25.5l-527 56-352 32h-9q-39 0-67.5-28t-28.5-68q0-37 27-64t65-32l260-32h-448q-41 0-69.5-30t-26.5-71q2-39 32-65t69-26l442-1-521-64q-41-5-66-37t-19-73q6-35 34.5-57.5t65.5-22.5h10l481 60-351-94q-38-10-62-41.5t-18-68.5q6-36 33-58.5t62-22.5q6 0 20 2l448 96 217 37q1 0 3 0.5t3 0.5q23 0 30.5-23t-12.5-36l-186-125q-35-23-42-63.5t18-73.5q27-38 76-38zM761 875l186 125-218-37-5-2-36-38-238-262q-1-1-2.5-3.5t-2.5-3.5q-24-31-18.5-70t37.5-64q31-23 68-17.5t64 33.5l142 147q-2 1-5 3.5t-4 4.5q-32 45-23 99t55 85zM1648 421l15 266q4 73-11 147l-48 219q-12 59-67 87l-106 54q2-62-39-109l-146-170q-53-61-117-103l-222-148q-34-23-76-23-51 0-88 37l-235-312q-25-33-18-73.5t41-63.5q33-22 71.5-14t62.5 40l266 352-262-455q-21-35-10.5-75t47.5-59q35-18 72.5-6t57.5 46l241 420-136-337q-15-35-4.5-74t44.5-56q37-19 76-6t56 51l193 415 101 196q8 15 23 17.5t27-7.5 11-26l-12-224q-2-41 26-71t69-31q39 0 67 28.5t30 67.5z\"}]}}),h.register({\"sign-out\":{width:1664,height:1792,paths:[{d:\"M640 1440q0 4 1 20t0.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h320q13 0 22.5 9.5t9.5 22.5q0 4 1 20t0.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-66 0-113 47t-47 113v704q0 66 47 113t113 47h288 11 13t11.5 1 11.5 3 8 5.5 7 9 2 13.5zM1568 896q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45z\"}]}}),h.register({signal:{width:1792,height:1792,paths:[{d:\"M256 1440v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM640 1312v320q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-320q0-14 9-23t23-9h192q14 0 23 9t9 23zM1024 1056v576q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23zM1408 672v960q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 160v1472q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-1472q0-14 9-23t23-9h192q14 0 23 9t9 23z\"}]}}),h.register({signing:{width:1664,height:1792,paths:[{d:\"M831 673q32 0 59 18l222 148q61 40 110 97l146 170q40 46 29 106l-72 413q-6 32-29.5 53.5t-55.5 25.5l-527 56-352 32h-9q-39 0-67.5-28t-28.5-68q0-37 27-64t65-32l260-32h-448q-41 0-69.5-30t-26.5-71q2-39 32-65t69-26l442-1-521-64q-41-5-66-37t-19-73q6-35 34.5-57.5t65.5-22.5h10l481 60-351-94q-38-10-62-41.5t-18-68.5q6-36 33-58.5t62-22.5q6 0 20 2l448 96 217 37q1 0 3 0.5t3 0.5q23 0 30.5-23t-12.5-36l-186-125q-35-23-42-63.5t18-73.5q27-38 76-38zM761 875l186 125-218-37-5-2-36-38-238-262q-1-1-2.5-3.5t-2.5-3.5q-24-31-18.5-70t37.5-64q31-23 68-17.5t64 33.5l142 147q-2 1-5 3.5t-4 4.5q-32 45-23 99t55 85zM1648 421l15 266q4 73-11 147l-48 219q-12 59-67 87l-106 54q2-62-39-109l-146-170q-53-61-117-103l-222-148q-34-23-76-23-51 0-88 37l-235-312q-25-33-18-73.5t41-63.5q33-22 71.5-14t62.5 40l266 352-262-455q-21-35-10.5-75t47.5-59q35-18 72.5-6t57.5 46l241 420-136-337q-15-35-4.5-74t44.5-56q37-19 76-6t56 51l193 415 101 196q8 15 23 17.5t27-7.5 11-26l-12-224q-2-41 26-71t69-31q39 0 67 28.5t30 67.5z\"}]}}),h.register({simplybuilt:{width:2048,height:1792,paths:[{d:\"M863 1032q0-112-79.5-191.5t-191.5-79.5-191 79.5-79 191.5 79 191 191 79 191.5-79 79.5-191zM1726 1031q0-112-79-191t-191-79-191.5 79-79.5 191q0 113 79.5 192t191.5 79 191-79.5 79-191.5zM2048 222v1348q0 44-31.5 75.5t-76.5 31.5h-1832q-45 0-76.5-31.5t-31.5-75.5v-1348q0-44 31.5-75.5t76.5-31.5h431q44 0 76 31.5t32 75.5v161h754v-161q0-44 32-75.5t76-31.5h431q45 0 76.5 31.5t31.5 75.5z\"}]}}),h.register({sitemap:{width:1792,height:1792,paths:[{d:\"M1792 1248v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192h-512v192h96q40 0 68 28t28 68v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192h-512v192h96q40 0 68 28t28 68v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192q0-52 38-90t90-38h512v-192h-96q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h320q40 0 68 28t28 68v320q0 40-28 68t-68 28h-96v192h512q52 0 90 38t38 90v192h96q40 0 68 28t28 68z\"}]}}),h.register({skyatlas:{width:2048,height:1792,paths:[{d:\"M1430 583zM1690 787q148 0 253 98.5t105 244.5q0 157-109 261.5t-267 104.5q-85 0-162-27.5t-138-73.5-118-106-109-126-103.5-132.5-108.5-126.5-117-106-136-73.5-159-27.5q-154 0-251.5 91.5t-97.5 244.5q0 157 104 250t263 93q100 0 208-37.5t193-98.5q5-4 21-18.5t30-24 22-9.5q14 0 24.5 10.5t10.5 24.5q0 24-60 77-101 88-234.5 142t-260.5 54q-133 0-245.5-58t-180-165-67.5-241q0-205 141.5-341t347.5-136q120 0 226.5 43.5t185.5 113 151.5 153 139 167.5 133.5 153.5 149.5 113 172.5 43.5q102 0 168.5-61.5t66.5-162.5q0-95-64.5-159t-159.5-64q-30 0-81.5 18.5t-68.5 18.5q-20 0-35.5-15t-15.5-35q0-18 8.5-57t8.5-59q0-159-107.5-263t-266.5-104q-58 0-111.5 18.5t-84 40.5-55.5 40.5-33 18.5q-15 0-25.5-10.5t-10.5-25.5q0-19 25-46 59-67 147-103.5t182-36.5q191 0 318 125.5t127 315.5q0 37-4 66 57-15 115-15z\"}]}}),h.register({skype:{width:1536,height:1792,paths:[{d:\"M1173 1063q0-50-19.5-91.5t-48.5-68.5-73-49-82.5-34-87.5-23l-104-24q-30-7-44-10.5t-35-11.5-30-16-16.5-21-7.5-30q0-77 144-77 43 0 77 12t54 28.5 38 33.5 40 29 48 12q47 0 75.5-32t28.5-77q0-55-56-99.5t-142-67.5-182-23q-68 0-132 15.5t-119.5 47-89 87-33.5 128.5q0 61 19 106.5t56 75.5 80 48.5 103 32.5l146 36q90 22 112 36 32 20 32 60 0 39-40 64.5t-105 25.5q-51 0-91.5-16t-65-38.5-45.5-45-46-38.5-54-16q-50 0-75.5 30t-25.5 75q0 92 122 157.5t291 65.5q73 0 140-18.5t122.5-53.5 88.5-93.5 33-131.5zM1536 1280q0 159-112.5 271.5t-271.5 112.5q-130 0-234-80-77 16-150 16-143 0-273.5-55.5t-225-150-150-225-55.5-273.5q0-73 16-150-80-104-80-234 0-159 112.5-271.5t271.5-112.5q130 0 234 80 77-16 150-16 143 0 273.5 55.5t225 150 150 225 55.5 273.5q0 73-16 150 80 104 80 234z\"}]}}),h.register({slack:{width:1664,height:1792,paths:[{d:\"M1519 776q62 0 103.5 40.5t41.5 101.5q0 97-93 130l-172 59 56 167q7 21 7 47 0 59-42 102t-101 43q-47 0-85.5-27t-53.5-72l-55-165-310 106 55 164q8 24 8 47 0 59-42 102t-102 43q-47 0-85-27t-53-72l-55-163-153 53q-29 9-50 9-61 0-101.5-40t-40.5-101q0-47 27.5-85t71.5-53l156-53-105-313-156 54q-26 8-48 8-60 0-101-40.5t-41-100.5q0-47 27.5-85t71.5-53l157-53-53-159q-8-24-8-47 0-60 42-102.5t102-42.5q47 0 85 27t53 72l54 160 310-105-54-160q-8-24-8-47 0-59 42.5-102t101.5-43q47 0 85.5 27.5t53.5 71.5l53 161 162-55q21-6 43-6 60 0 102.5 39.5t42.5 98.5q0 45-30 81.5t-74 51.5l-157 54 105 316 164-56q24-8 46-8zM725 1038l310-105-105-315-310 107z\"}]}}),h.register({sliders:{width:1536,height:1792,paths:[{d:\"M352 1408v128h-352v-128h352zM704 1280q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM864 896v128h-864v-128h864zM224 384v128h-224v-128h224zM1536 1408v128h-736v-128h736zM576 256q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM1216 768q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM1536 896v128h-224v-128h224zM1536 384v128h-864v-128h864z\"}]}}),h.register({slideshare:{width:1792,height:1792,paths:[{d:\"M873 740q0 83-63.5 142.5t-152.5 59.5-152.5-59.5-63.5-142.5q0-84 63.5-143t152.5-59 152.5 59 63.5 143zM1375 740q0 83-63 142.5t-153 59.5q-89 0-152.5-59.5t-63.5-142.5q0-84 63.5-143t152.5-59q90 0 153 59t63 143zM1600 920v-667q0-87-32-123.5t-111-36.5h-1112q-83 0-112.5 34t-29.5 126v673q43 23 88.5 40t81 28 81 18.5 71 11 70 4 58.5 0.5 56.5-2 44.5-2q68-1 95 27 6 6 10 9 26 25 61 51 7-91 118-87 5 0 36.5 1.5t43 2 45.5 1 53-1 54.5-4.5 61-8.5 62-13.5 67-19.5 67.5-27 72-34.5zM1763 915q-121 149-372 252 84 285-23 465-66 113-183 148-104 32-182-15-86-51-82-164l-1-326v-1q-8-2-24.5-6t-23.5-5l-1 338q4 114-83 164-79 47-183 15-117-36-182-150-105-180-22-463-251-103-372-252-25-37-4-63t60 1q4 2 11.5 7t10.5 8v-694q0-72 47-123t114-51h1257q67 0 114 51t47 123v694l21-15q39-27 60-1t-4 63z\"}]}}),h.register({\"smile-o\":{width:1536,height:1792,paths:[{d:\"M1134 1075q-37 121-138 195t-228 74-228-74-138-195q-8-25 4-48.5t38-31.5q25-8 48.5 4t31.5 38q25 80 92.5 129.5t151.5 49.5 151.5-49.5 92.5-129.5q8-26 32-38t49-4 37 31.5 4 48.5zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"snapchat-ghost\":{width:1664,height:1792,paths:[{d:\"M848 128q134-1 240.5 68.5t163.5 192.5q27 58 27 179 0 47-9 191 14 7 28 7 18 0 51-13.5t51-13.5q29 0 56 18t27 46q0 32-31.5 54t-69 31.5-69 29-31.5 47.5q0 15 12 43 37 82 102.5 150t144.5 101q28 12 80 23 28 6 28 35 0 70-219 103-7 11-11 39t-14 46.5-33 18.5q-20 0-62-6.5t-64-6.5q-37 0-62 5-32 5-63 22.5t-58 38-58 40.5-76 33.5-99 13.5q-52 0-96.5-13.5t-75-33.5-57.5-40.5-58-38-62-22.5q-26-5-63-5-24 0-65.5 7.5t-58.5 7.5q-25 0-35-18.5t-14-47.5-11-40q-219-33-219-103 0-29 28-35 52-11 80-23 78-32 144.5-101t102.5-150q12-28 12-43 0-28-31.5-47.5t-69.5-29.5-69.5-31.5-31.5-52.5q0-27 26-45.5t55-18.5q15 0 48 13t53 13q18 0 32-7-9-142-9-190 0-122 27-180 64-137 172-198t264-63z\"}]}}),h.register({\"snapchat-square\":{width:1536,height:1792,paths:[{d:\"M1280 1148q0-22-22-27-67-14-118-58t-80-109q-7-14-7-25 0-15 19.5-26t42.5-17 42.5-20.5 19.5-36.5q0-19-18.5-31.5t-38.5-12.5q-11 0-31 8t-32 8q-4 0-12-2 5-63 5-115 0-78-17-114-36-78-102.5-121.5t-152.5-43.5q-198 0-275 165-18 38-18 115 0 38 6 114-10 2-15 2-11 0-31.5-8t-30.5-8q-20 0-37.5 12.5t-17.5 32.5q0 21 19.5 35.5t42.5 20.5 42.5 17 19.5 26q0 11-7 25-64 138-198 167-22 5-22 27 0 47 138 69 2 5 6 26t11 30.5 23 9.5q13 0 38.5-5t38.5-5q35 0 67.5 15t54.5 32.5 57.5 32.5 76.5 15q43 0 79-15t57.5-32.5 54-32.5 67.5-15q13 0 39 4.5t39 4.5q15 0 22.5-9.5t11.5-31 5-24.5q138-22 138-69zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({snapchat:{width:1536,height:1792,paths:[{d:\"M1279 1148q0-22-22-27-67-15-118-59t-80-108q-7-19-7-25 0-15 19.5-26t43-17 43-20.5 19.5-36.5q0-19-18.5-31.5t-38.5-12.5q-12 0-32 8t-31 8q-4 0-12-2 5-95 5-114 0-79-17-114-36-78-103-121.5t-152-43.5q-199 0-275 165-17 35-17 114 0 19 5 114-4 2-14 2-12 0-32-7.5t-30-7.5q-21 0-38.5 12t-17.5 32q0 21 19.5 35.5t43 20.5 43 17 19.5 26q0 6-7 25-64 138-198 167-22 5-22 27 0 46 137 68 2 5 6 26t11.5 30.5 23.5 9.5q12 0 37.5-4.5t39.5-4.5q35 0 67 15t54 32.5 57.5 32.5 76.5 15q43 0 79-15t57.5-32.5 53.5-32.5 67-15q14 0 39.5 4t38.5 4q16 0 23-10t11-30 6-25q137-22 137-68zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"snowflake-o\":{width:1664,height:1792,paths:[{d:\"M1566 1117l-167 33 186 107q23 13 29.5 38.5t-6.5 48.5q-14 23-39 29.5t-48-6.5l-186-106 55 160q13 38-12 63.5t-60.5 20.5-48.5-42l-102-300-271-156v313l208 238q16 18 17 39t-11 36.5-28.5 25-37 5.5-36.5-22l-112-128v214q0 26-19 45t-45 19-45-19-19-45v-214l-112 128q-16 18-36.5 22t-37-5.5-28.5-25-11-36.5 17-39l208-238v-313l-271 156-102 300q-13 37-48.5 42t-60.5-20.5-12-63.5l55-160-186 106q-23 13-48 6.5t-39-29.5q-13-23-6.5-48.5t29.5-38.5l186-107-167-33q-29-6-42-29t-8.5-46.5 25.5-40 50-10.5l310 62 271-157-271-157-310 62q-4 1-13 1-27 0-44-18t-19-40 11-43 40-26l167-33-186-107q-23-13-29.5-38.5t6.5-48.5 39-30 48 7l186 106-55-160q-13-38 12-63.5t60.5-20.5 48.5 42l102 300 271 156v-313l-208-238q-16-18-17-39t11-36.5 28.5-25 37-5.5 36.5 22l112 128v-214q0-26 19-45t45-19 45 19 19 45v214l112-128q16-18 36.5-22t37 5.5 28.5 25 11 36.5-17 39l-208 238v313l271-156 102-300q13-37 48.5-42t60.5 20.5 12 63.5l-55 160 186-106q23-13 48-6.5t39 29.5q13 23 6.5 48.5t-29.5 38.5l-186 107 167 33q27 5 40 26t11 43-19 40-44 18q-9 0-13-1l-310-62-271 157 271 157 310-62q29-6 50 10.5t25.5 40-8.5 46.5-42 29z\"}]}}),h.register({\"soccer-ball-o\":{width:1792,height:1792,paths:[{d:\"M609 816l287-208 287 208-109 336h-355zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM1515 1350q149-203 149-454v-3l-102 89-240-224 63-323 134 12q-150-206-389-282l53 124-287 159-287-159 53-124q-239 76-389 282l135-12 62 323-240 224-102-89v3q0 251 149 454l30-132 326 40 139 298-116 69q117 39 240 39t240-39l-116-69 139-298 326-40z\"}]}}),h.register({\"sort-alpha-asc\":{width:1664,height:1792,paths:[{d:\"M1191 408h177l-72-218-12-47q-2-16-2-20h-4l-3 20q0 1-3.5 18t-7.5 29zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1572 1559v233h-584v-90l369-529q12-18 21-27l11-9v-3q-2 0-6.5 0.5t-7.5 0.5q-12 3-30 3h-232v115h-120v-229h567v89l-369 530q-6 8-21 26l-11 11v2l14-2q9-2 30-2h248v-119h121zM1661 662v106h-288v-106h75l-47-144h-243l-47 144h75v106h-287v-106h70l230-662h162l230 662h70z\"}]}}),h.register({\"sort-alpha-desc\":{width:1664,height:1792,paths:[{d:\"M1191 1432h177l-72-218-12-47q-2-16-2-20h-4l-3 20q0 1-3.5 18t-7.5 29zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1661 1686v106h-288v-106h75l-47-144h-243l-47 144h75v106h-287v-106h70l230-662h162l230 662h70zM1572 535v233h-584v-90l369-529q12-18 21-27l11-9v-3q-2 0-6.5 0.5t-7.5 0.5q-12 3-30 3h-232v115h-120v-229h567v89l-369 530q-6 8-21 26l-11 10v3l14-3q9-1 30-1h248v-119h121z\"}]}}),h.register({\"sort-amount-asc\":{width:1792,height:1792,paths:[{d:\"M736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1792 1568v192q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h832q14 0 23 9t9 23zM1600 1056v192q0 14-9 23t-23 9h-640q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h640q14 0 23 9t9 23zM1408 544v192q0 14-9 23t-23 9h-448q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h448q14 0 23 9t9 23zM1216 32v192q0 14-9 23t-23 9h-256q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h256q14 0 23 9t9 23z\"}]}}),h.register({\"sort-amount-desc\":{width:1792,height:1792,paths:[{d:\"M1216 1568v192q0 14-9 23t-23 9h-256q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h256q14 0 23 9t9 23zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1408 1056v192q0 14-9 23t-23 9h-448q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h448q14 0 23 9t9 23zM1600 544v192q0 14-9 23t-23 9h-640q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h640q14 0 23 9t9 23zM1792 32v192q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h832q14 0 23 9t9 23z\"}]}}),h.register({\"sort-asc\":{width:1024,height:1792,paths:[{d:\"M1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({\"sort-desc\":{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"}]}}),h.register({\"sort-down\":{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"}]}}),h.register({\"sort-numeric-asc\":{width:1536,height:1792,paths:[{d:\"M1346 1313q0-63-44-116t-103-53q-52 0-83 37t-31 94 36.5 95 104.5 38q50 0 85-27t35-68zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1486 1371q0 62-13 121.5t-41 114-68 95.5-98.5 65.5-127.5 24.5q-62 0-108-16-24-8-42-15l39-113q15 7 31 11 37 13 75 13 84 0 134.5-58.5t66.5-145.5h-2q-21 23-61.5 37t-84.5 14q-106 0-173-71.5t-67-172.5q0-105 72-178t181-73q123 0 205 94.5t82 252.5zM1456 654v114h-469v-114h167v-432q0-7 0.5-19t0.5-17v-16h-2l-7 12q-8 13-26 31l-62 58-82-86 192-185h123v654h165z\"}]}}),h.register({\"sort-numeric-desc\":{width:1536,height:1792,paths:[{d:\"M1346 289q0-63-44-116t-103-53q-52 0-83 37t-31 94 36.5 95 104.5 38q50 0 85-27t35-68zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1456 1678v114h-469v-114h167v-432q0-7 0.5-19t0.5-17v-16h-2l-7 12q-8 13-26 31l-62 58-82-86 192-185h123v654h165zM1486 347q0 62-13 121.5t-41 114-68 95.5-98.5 65.5-127.5 24.5q-62 0-108-16-24-8-42-15l39-113q15 7 31 11 37 13 75 13 84 0 134.5-58.5t66.5-145.5h-2q-21 23-61.5 37t-84.5 14q-106 0-173-71.5t-67-172.5q0-105 72-178t181-73q123 0 205 94.5t82 252.5z\"}]}}),h.register({\"sort-up\":{width:1024,height:1792,paths:[{d:\"M1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({sort:{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45zM1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({soundcloud:{width:2304,height:1792,paths:[{d:\"M784 1372l16-241-16-523q-1-10-7.5-17t-16.5-7q-9 0-16 7t-7 17l-14 523 14 241q1 10 7.5 16.5t15.5 6.5q22 0 24-23zM1080 1343l11-211-12-586q0-16-13-24-8-5-16-5t-16 5q-13 8-13 24l-1 6-10 579q0 1 11 236v1q0 10 6 17 9 11 23 11 11 0 20-9 9-7 9-20zM35 1003l20 128-20 126q-2 9-9 9t-9-9l-17-126 17-128q2-9 9-9t9 9zM121 924l26 207-26 203q-2 9-10 9-9 0-9-10l-23-202 23-207q0-9 9-9 8 0 10 9zM401 1377zM213 886l25 245-25 237q0 11-11 11-10 0-12-11l-21-237 21-245q2-12 12-12 11 0 11 12zM307 879l23 252-23 244q-2 13-14 13-13 0-13-13l-21-244 21-252q0-13 13-13 12 0 14 13zM401 897l21 234-21 246q-2 16-16 16-6 0-10.5-4.5t-4.5-11.5l-20-246 20-234q0-6 4.5-10.5t10.5-4.5q14 0 16 15zM784 1372zM495 751l21 380-21 246q0 7-5 12.5t-12 5.5q-16 0-18-18l-18-246 18-380q2-18 18-18 7 0 12 5.5t5 12.5zM589 665l19 468-19 244q0 8-5.5 13.5t-13.5 5.5q-18 0-20-19l-16-244 16-468q2-19 20-19 8 0 13.5 5.5t5.5 13.5zM687 625l18 506-18 242q-2 21-22 21-19 0-21-21l-16-242 16-506q0-9 6.5-15.5t14.5-6.5q9 0 15 6.5t7 15.5zM1079 1367v0 0 0zM881 621l15 510-15 239q0 10-7.5 17.5t-17.5 7.5-17-7-8-18l-14-239 14-510q0-11 7.5-18t17.5-7 17.5 7 7.5 18zM980 640l14 492-14 236q0 11-8 19t-19 8-19-8-9-19l-12-236 12-492q1-12 9-20t19-8 18.5 8 8.5 20zM1192 1132l-14 231v0q0 13-9 22t-22 9-22-9-10-22l-6-114-6-117 12-636v-3q2-15 12-24 9-7 20-7 8 0 15 5 14 8 16 26zM2304 1113q0 117-83 199.5t-200 82.5h-786q-13-2-22-11t-9-22v-899q0-23 28-33 85-34 181-34 195 0 338 131.5t160 323.5q53-22 110-22 117 0 200 83t83 201z\"}]}}),h.register({\"space-shuttle\":{width:2176,height:1792,paths:[{d:\"M620 1120q-110 64-268 64h-128v-64h-64q-13 0-22.5-23.5t-9.5-56.5q0-24 7-49-58-2-96.5-10.5t-38.5-20.5 38.5-20.5 96.5-10.5q-7-25-7-49 0-33 9.5-56.5t22.5-23.5h64v-64h128q158 0 268 64h1113q42 7 106.5 18t80.5 14q89 15 150 40.5t83.5 47.5 22.5 40-22.5 40-83.5 47.5-150 40.5q-16 3-80.5 14t-106.5 18h-1113zM1739 868q53 36 53 92t-53 92l81 30q68-48 68-122t-68-122zM625 1136h1015q-217 38-456 80-57 0-113 24t-83 48l-28 24-288 288q-26 26-70.5 45t-89.5 19h-96l-93-464h29q157 0 273-64zM352 720h-29l93-464h96q46 0 90 19t70 45l288 288q4 4 11 10.5t30.5 23 48.5 29 61.5 23 72.5 10.5l456 80h-1015q-116-64-273-64z\"}]}}),h.register({spinner:{width:1792,height:1792,paths:[{d:\"M526 1394q0 53-37.5 90.5t-90.5 37.5q-52 0-90-38t-38-90q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1024 1600q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM320 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1522 1394q0 52-38 90t-90 38q-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM558 398q0 66-47 113t-113 47-113-47-47-113 47-113 113-47 113 47 47 113zM1728 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1088 192q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1618 398q0 93-66 158.5t-158 65.5q-93 0-158.5-65.5t-65.5-158.5q0-92 65.5-158t158.5-66q92 0 158 66t66 158z\"}]}}),h.register({spoon:{width:768,height:1792,paths:[{d:\"M704 528q0 145-57 243.5t-152 135.5l45 821q2 26-16 45t-44 19h-192q-26 0-44-19t-16-45l45-821q-95-37-152-135.5t-57-243.5q0-128 42.5-249.5t117.5-200 160-78.5 160 78.5 117.5 200 42.5 249.5z\"}]}}),h.register({spotify:{width:1536,height:1792,paths:[{d:\"M1127 1210q0-32-30-51-193-115-447-115-133 0-287 34-42 9-42 52 0 20 13.5 34.5t35.5 14.5q5 0 37-8 132-27 243-27 226 0 397 103 19 11 33 11 19 0 33-13.5t14-34.5zM1223 995q0-40-35-61-237-141-548-141-153 0-303 42-48 13-48 64 0 25 17.5 42.5t42.5 17.5q7 0 37-8 122-33 251-33 279 0 488 124 24 13 38 13 25 0 42.5-17.5t17.5-42.5zM1331 747q0-47-40-70-126-73-293-110.5t-343-37.5q-204 0-364 47-23 7-38.5 25.5t-15.5 48.5q0 31 20.5 52t51.5 21q11 0 40-8 133-37 307-37 159 0 309.5 34t253.5 95q21 12 40 12 29 0 50.5-20.5t21.5-51.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"square-o\":{width:1408,height:1792,paths:[{d:\"M1120 256h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({square:{width:1536,height:1792,paths:[{d:\"M1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"stack-exchange\":{width:1280,height:1792,paths:[{d:\"M1259 1253v66q0 85-57.5 144.5t-138.5 59.5h-57l-260 269v-269h-529q-81 0-138.5-59.5t-57.5-144.5v-66h1238zM1259 927v255h-1238v-255h1238zM1259 599v255h-1238v-255h1238zM1259 459v67h-1238v-67q0-84 57.5-143.5t138.5-59.5h846q81 0 138.5 59.5t57.5 143.5z\"}]}}),h.register({\"stack-overflow\":{width:1536,height:1792,paths:[{d:\"M1289 1632h-1118v-480h-160v640h1438v-640h-160v480zM347 1108l33-157 783 165-33 156zM450 734l67-146 725 339-67 145zM651 378l102-123 614 513-102 123zM1048 0l477 641-128 96-477-641zM330 1471v-159h800v159h-800z\"}]}}),h.register({\"star-half-empty\":{width:1664,height:1792,paths:[{d:\"M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z\"}]}}),h.register({\"star-half-full\":{width:1664,height:1792,paths:[{d:\"M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z\"}]}}),h.register({\"star-half-o\":{width:1664,height:1792,paths:[{d:\"M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z\"}]}}),h.register({\"star-half\":{width:896,height:1792,paths:[{d:\"M832 32v1339l-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41z\"}]}}),h.register({\"star-o\":{width:1664,height:1792,paths:[{d:\"M1137 1004l306-297-422-62-189-382-189 382-422 62 306 297-73 421 378-199 377 199zM1664 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 50-41 50-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"}]}}),h.register({star:{width:1664,height:1792,paths:[{d:\"M1664 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"}]}}),h.register({\"steam-square\":{width:1536,height:1792,paths:[{d:\"M1242 647q0-80-57-136.5t-137-56.5-136.5 57-56.5 136q0 80 56.5 136.5t136.5 56.5 137-56.5 57-136.5zM632 1235q0 83-58 140.5t-140 57.5q-56 0-103-29t-72-77q52 20 98 40 60 24 120-1.5t85-86.5q24-60-1.5-120t-86.5-84l-82-33q22-5 42-5 82 0 140 57.5t58 140.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-153l172 69q20 92 93.5 152t168.5 60q104 0 181-70t87-173l345-252q150 0 255.5-105.5t105.5-254.5q0-150-105.5-255.5t-255.5-105.5q-148 0-253 104.5t-107 252.5l-225 322q-9-1-28-1-75 0-137 37l-297-119v-468q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5zM1289 649q0 100-71 170.5t-171 70.5-170.5-70.5-70.5-170.5 70.5-171 170.5-71q101 0 171.5 70.5t70.5 171.5z\"}]}}),h.register({steam:{width:1792,height:1792,paths:[{d:\"M1582 582q0 101-71.5 172.5t-172.5 71.5-172.5-71.5-71.5-172.5 71.5-172.5 172.5-71.5 172.5 71.5 71.5 172.5zM812 1324q0-104-73-177t-177-73q-27 0-54 6l104 42q77 31 109.5 106.5t1.5 151.5q-31 77-107 109t-152 1q-21-8-62-24.5t-61-24.5q32 60 91 96.5t130 36.5q104 0 177-73t73-177zM1642 583q0-126-89.5-215.5t-215.5-89.5q-127 0-216.5 89.5t-89.5 215.5q0 127 89.5 216t216.5 89q126 0 215.5-89t89.5-216zM1792 583q0 189-133.5 322t-321.5 133l-437 319q-12 129-109 218t-229 89q-121 0-214-76t-118-192l-230-92v-429l389 157q79-48 173-48 13 0 35 2l284-407q2-187 135.5-319t320.5-132q188 0 321.5 133.5t133.5 321.5z\"}]}}),h.register({\"step-backward\":{width:1024,height:1792,paths:[{d:\"M979 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v678q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h128q26 0 45 19t19 45v678q4-10 13-19z\"}]}}),h.register({\"step-forward\":{width:1024,height:1792,paths:[{\nd:\"M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-678q0-26 19-45t45-19h128q26 0 45 19t19 45v1408q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-678q-4 10-13 19z\"}]}}),h.register({stethoscope:{width:1408,height:1792,paths:[{d:\"M1280 704q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 704q0 62-35.5 111t-92.5 70v395q0 159-131.5 271.5t-316.5 112.5-316.5-112.5-131.5-271.5v-132q-164-20-274-128t-110-252v-512q0-26 19-45t45-19q6 0 16 2 17-30 47-48t65-18q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5q-33 0-64-18v402q0 106 94 181t226 75 226-75 94-181v-402q-31 18-64 18-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5q35 0 65 18t47 48q10-2 16-2 26 0 45 19t19 45v512q0 144-110 252t-274 128v132q0 106 94 181t226 75 226-75 94-181v-395q-57-21-92.5-70t-35.5-111q0-80 56-136t136-56 136 56 56 136z\"}]}}),h.register({\"sticky-note-o\":{width:1536,height:1792,paths:[{d:\"M1400 1280h-248v248q29-10 41-22l185-185q12-12 22-41zM1120 1152h288v-896h-1280v1280h896v-288q0-40 28-68t68-28zM1536 224v1024q0 40-20 88t-48 76l-184 184q-28 28-76 48t-88 20h-1024q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1344q40 0 68 28t28 68z\"}]}}),h.register({\"sticky-note\":{width:1536,height:1792,paths:[{d:\"M1024 1248v416h-928q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1344q40 0 68 28t28 68v928h-416q-40 0-68 28t-28 68zM1152 1280h381q-15 82-65 132l-184 184q-50 50-132 65v-381z\"}]}}),h.register({\"stop-circle-o\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM768 1440q148 0 273-73t198-198 73-273-73-273-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73zM480 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h576q14 0 23 9t9 23v576q0 14-9 23t-23 9h-576z\"}]}}),h.register({\"stop-circle\":{width:1536,height:1792,paths:[{d:\"M1088 1184v-576q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v576q0 14 9 23t23 9h576q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({stop:{width:1536,height:1792,paths:[{d:\"M1536 192v1408q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({\"street-view\":{width:1536,height:1792,paths:[{d:\"M1408 1536q0 63-61.5 113.5t-164 81-225 46-253.5 15.5-253.5-15.5-225-46-164-81-61.5-113.5q0-49 33-88.5t91-66.5 118-44.5 131-29.5q26-5 48 10.5t26 41.5q5 26-10.5 48t-41.5 26q-58 10-106 23.5t-76.5 25.5-48.5 23.5-27.5 19.5-8.5 12q3 11 27 26.5t73 33 114 32.5 160.5 25 201.5 10 201.5-10 160.5-25 114-33 73-33.5 27-27.5q-1-4-8.5-11t-27.5-19-48.5-23.5-76.5-25-106-23.5q-26-4-41.5-26t-10.5-48q4-26 26-41.5t48-10.5q71 12 131 29.5t118 44.5 91 66.5 33 88.5zM1024 640v384q0 26-19 45t-45 19h-64v384q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-384h-64q-26 0-45-19t-19-45v-384q0-53 37.5-90.5t90.5-37.5h384q53 0 90.5 37.5t37.5 90.5zM928 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({strikethrough:{width:1792,height:1792,paths:[{d:\"M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zM483 832q-28-35-51-80-48-98-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zM990 1088h411q7 39 7 92 0 111-41 212-23 56-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z\"}]}}),h.register({\"stumbleupon-circle\":{width:1536,height:1792,paths:[{d:\"M866 839l90-27v-62q0-79-58-135t-138-56-138 55.5-58 134.5v283q0 20-14 33.5t-33 13.5-32.5-13.5-13.5-33.5v-120h-151v122q0 82 57.5 139t139.5 57q81 0 138.5-56.5t57.5-136.5v-280q0-19 13.5-33t33.5-14q19 0 32.5 14t13.5 33v54zM1199 1034v-122h-150v126q0 20-13.5 33.5t-33.5 13.5q-19 0-32.5-14t-13.5-33v-123l-90 26-60-28v123q0 80 58 137t139 57 138.5-57 57.5-139zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({stumbleupon:{width:1920,height:1792,paths:[{d:\"M1062 712v-118q0-42-30-72t-72-30-72 30-30 72v612q0 175-126 299t-303 124q-178 0-303.5-125.5t-125.5-303.5v-266h328v262q0 43 30 72.5t72 29.5 72-29.5 30-72.5v-620q0-171 126.5-292t301.5-121q176 0 302 122t126 294v136l-195 58zM1592 934h328v266q0 178-125.5 303.5t-303.5 125.5q-177 0-303-124.5t-126-300.5v-268l131 61 195-58v270q0 42 30 71.5t72 29.5 72-29.5 30-71.5v-275z\"}]}}),h.register({subscript:{width:1536,height:1792,paths:[{d:\"M897 1369v167h-248l-159-252-24-42q-8-9-11-21h-3q-1 3-2.5 6.5t-3.5 8-3 6.5q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zM1536 1586v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z\"}]}}),h.register({subway:{width:1536,height:1792,paths:[{d:\"M1088 0q185 0 316.5 93.5t131.5 226.5v896q0 130-125.5 222t-305.5 97l213 202q16 15 8 35t-30 20h-1056q-22 0-30-20t8-35l213-202q-180-5-305.5-97t-125.5-222v-896q0-133 131.5-226.5t316.5-93.5h640zM288 1312q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM704 768v-512h-544v512h544zM1248 1312q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM1408 768v-512h-576v512h576z\"}]}}),h.register({suitcase:{width:1792,height:1792,paths:[{d:\"M640 384h512v-128h-512v128zM288 384v1280h-64q-92 0-158-66t-66-158v-832q0-92 66-158t158-66h64zM1408 384v1280h-1024v-1280h128v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h128zM1792 608v832q0 92-66 158t-158 66h-64v-1280h64q92 0 158 66t66 158z\"}]}}),h.register({\"sun-o\":{width:1792,height:1792,paths:[{d:\"M1472 896q0-117-45.5-223.5t-123-184-184-123-223.5-45.5-223.5 45.5-184 123-123 184-45.5 223.5 45.5 223.5 123 184 184 123 223.5 45.5 223.5-45.5 184-123 123-184 45.5-223.5zM1748 1173q-4 15-20 20l-292 96v306q0 16-13 26-15 10-29 4l-292-94-180 248q-10 13-26 13t-26-13l-180-248-292 94q-14 6-29-4-13-10-13-26v-306l-292-96q-16-5-20-20-5-17 4-29l180-248-180-248q-9-13-4-29 4-15 20-20l292-96v-306q0-16 13-26 15-10 29-4l292 94 180-248q9-12 26-12t26 12l180 248 292-94q14-6 29 4 13 10 13 26v306l292 96q16 5 20 20 5 16-4 29l-180 248 180 248q9 12 4 29z\"}]}}),h.register({superpowers:{width:1792,height:1792,paths:[{d:\"M1473 929q7-118-33-226.5t-113-189-177-131-221-57.5q-116-7-225.5 32t-192 110.5-135 175-59.5 220.5q-7 118 33 226.5t113 189 177.5 131 221.5 57.5q155 9 293-59t224-195.5 94-283.5zM1792 0l-349 348q120 117 180.5 272t50.5 321q-11 183-102 339t-241 255.5-332 124.5l-999 132 347-347q-120-116-180.5-271.5t-50.5-321.5q11-184 102-340t241.5-255.5 332.5-124.5q167-22 500-66t500-66z\"}]}}),h.register({superscript:{width:1536,height:1792,paths:[{d:\"M897 1369v167h-248l-159-252-24-42q-8-9-11-21h-3q-1 3-2.5 6.5t-3.5 8-3 6.5q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zM1534 690v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z\"}]}}),h.register({support:{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({table:{width:1664,height:1792,paths:[{d:\"M512 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM512 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM512 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1664 288v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z\"}]}}),h.register({tablet:{width:1152,height:1792,paths:[{d:\"M640 1408q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1024 1248v-960q0-13-9.5-22.5t-22.5-9.5h-832q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h832q13 0 22.5-9.5t9.5-22.5zM1152 288v1088q0 66-47 113t-113 47h-832q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h832q66 0 113 47t47 113z\"}]}}),h.register({tachometer:{width:1792,height:1792,paths:[{d:\"M384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM576 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1004 1185l101-382q6-26-7.5-48.5t-38.5-29.5-48 6.5-30 39.5l-101 382q-60 5-107 43.5t-63 98.5q-20 77 20 146t117 89 146-20 89-117q16-60-6-117t-72-91zM1664 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1472 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 1152q0 261-141 483-19 29-54 29h-1402q-35 0-54-29-141-221-141-483 0-182 71-348t191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({tag:{width:1536,height:1792,paths:[{d:\"M448 448q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1515 1024q0 53-37 90l-491 492q-39 37-91 37-53 0-90-37l-715-716q-38-37-64.5-101t-26.5-117v-416q0-52 38-90t90-38h416q53 0 117 26.5t102 64.5l715 714q37 39 37 91z\"}]}}),h.register({tags:{width:1920,height:1792,paths:[{d:\"M448 448q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1515 1024q0 53-37 90l-491 492q-39 37-91 37-53 0-90-37l-715-716q-38-37-64.5-101t-26.5-117v-416q0-52 38-90t90-38h416q53 0 117 26.5t102 64.5l715 714q37 39 37 91zM1899 1024q0 53-37 90l-491 492q-39 37-91 37-36 0-59-14t-53-45l470-470q37-37 37-90 0-52-37-91l-715-714q-38-38-102-64.5t-117-26.5h224q53 0 117 26.5t102 64.5l715 714q37 39 37 91z\"}]}}),h.register({tasks:{width:1792,height:1792,paths:[{d:\"M1024 1408h640v-128h-640v128zM640 896h1024v-128h-1024v128zM1280 384h384v-128h-384v128zM1792 1216v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 704v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 192v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45z\"}]}}),h.register({taxi:{width:2048,height:1792,paths:[{d:\"M1824 896q93 0 158.5 65.5t65.5 158.5v384q0 14-9 23t-23 9h-96v64q0 80-56 136t-136 56-136-56-56-136v-64h-1024v64q0 80-56 136t-136 56-136-56-56-136v-64h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h128v-224q0-14 9-23t23-9h448q14 0 23 9t9 23v224h128q98 0 179 63.5t104 157.5l105 419h28zM320 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM516 896h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1728 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47z\"}]}}),h.register({telegram:{width:1792,height:1792,paths:[{d:\"M1189 1307l147-693q9-44-10.5-63t-51.5-7l-864 333q-29 11-39.5 25t-2.5 26.5 32 19.5l221 69 513-323q21-14 32-6 7 5-4 15l-415 375v0 0l-16 228q23 0 45-22l108-104 224 165q64 36 81-38zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({television:{width:2048,height:1792,paths:[{d:\"M1792 1248v-960q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 288v960q0 66-47 113t-113 47h-736v128h352q14 0 23 9t9 23v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-128h-736q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({\"tencent-weibo\":{width:1280,height:1792,paths:[{d:\"M842 572q0 80-57 136.5t-136 56.5q-60 0-111-35-62 67-115 146-247 371-202 859 1 22-12.5 38.5t-34.5 18.5h-5q-20 0-35-13.5t-17-33.5q-14-126-3.5-247.5t29.5-217 54-186 69-155.5 74-125q61-90 132-165-16-35-16-77 0-80 56.5-136.5t136.5-56.5 136.5 56.5 56.5 136.5zM1223 583q0 158-78 292t-212.5 212-292.5 78q-64 0-131-14-21-5-32.5-23.5t-6.5-39.5q5-20 23-31.5t39-7.5q51 13 108 13 97 0 186-38t153-102 102-153 38-186-38-186-102-153-153-102-186-38-186 38-153 102-102 153-38 186q0 114 52 218 10 20 3.5 40t-25.5 30-39.5 3-30.5-26q-64-123-64-265 0-119 46.5-227t124.5-186 186-124 226-46q158 0 292.5 78t212.5 212.5 78 292.5z\"}]}}),h.register({terminal:{width:1664,height:1792,paths:[{d:\"M585 983l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23zM1664 1440v64q0 14-9 23t-23 9h-960q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h960q14 0 23 9t9 23z\"}]}}),h.register({\"text-height\":{width:1792,height:1792,paths:[{d:\"M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zM81 129l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5 0.5t107.5 0.5h293q6 0 21 0.5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 0.5t14 0.5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-0.5-16.5 0.5q-17 0-66.5-0.5t-74.5-0.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 0.5-15.5t0.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z\"}]}}),h.register({\"text-width\":{width:1536,height:1792,paths:[{d:\"M81 129l54 27q12 5 211 5 44 0 132-2t132-2q70 0 246.5-1t304.5-0.5 247 4.5q33 1 56-31l42-1q4 0 14 0.5t14 0.5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-47.5t-15-73.5-7-36q-10-13-27-19-5-2-66-2-30 0-93-1t-103-1-94 2-96 7q-9 81-8 136l1 152v-52q0 55 1 154t1.5 180 0.5 153q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q7-16 11.5-74t6-145.5 1.5-155-0.5-153.5-0.5-89q0-7-2.5-21.5t-2.5-22.5q0-7 0.5-44t1-73 0-76.5-3-67.5-6.5-32q-11-12-162-12-41 0-163 13.5t-138 24.5q-19 12-34 71.5t-31.5 111.5-42.5 54q-42-26-56-44v-383zM1310 1411q12 0 42 19.5t57.5 41.5 59.5 49 36 30q26 21 26 49t-26 49q-4 3-36 30t-59.5 49-57.5 41.5-42 19.5q-13 0-20.5-10.5t-10-28.5-2.5-33.5 1.5-33 1.5-19.5h-1024q0 2 1.5 19.5t1.5 33-2.5 33.5-10 28.5-20.5 10.5q-12 0-42-19.5t-57.5-41.5-59.5-49-36-30q-26-21-26-49t26-49q4-3 36-30t59.5-49 57.5-41.5 42-19.5q13 0 20.5 10.5t10 28.5 2.5 33.5-1.5 33-1.5 19.5h1024q0-2-1.5-19.5t-1.5-33 2.5-33.5 10-28.5 20.5-10.5z\"}]}}),h.register({\"th-large\":{width:1664,height:1792,paths:[{d:\"M768 1024v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM768 256v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM1664 1024v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM1664 256v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90z\"}]}}),h.register({\"th-list\":{width:1792,height:1792,paths:[{d:\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 1248v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zM512 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 736v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zM1792 224v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z\"}]}}),h.register({th:{width:1792,height:1792,paths:[{d:\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z\"}]}}),h.register({themeisle:{width:1792,height:1792,paths:[{d:\"M852 309q0 29-17 52.5t-45 23.5-45-23.5-17-52.5 17-52.5 45-23.5 45 23.5 17 52.5zM688 1685v-114q0-30-20.5-51.5t-50.5-21.5-50 21.5-20 51.5v114q0 30 20.5 52t49.5 22q30 0 50.5-22t20.5-52zM860 1685v-114q0-30-20-51.5t-50-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22q29 0 49.5-22t20.5-52zM1034 1685v-114q0-30-20.5-51.5t-50.5-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22 50.5-22 20.5-52zM1208 1685v-114q0-30-20.5-51.5t-50.5-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22 50.5-22 20.5-52zM1476 1001q-84 160-232 259.5t-323 99.5q-123 0-229.5-51.5t-178.5-137-113-197.5-41-232q0-88 21-174-104 175-104 390 0 162 65 312t185 251q30-57 91-57 56 0 86 50 32-50 87-50 56 0 86 50 32-50 87-50t87 50q30-50 86-50 28 0 52.5 15.5t37.5 40.5q112-94 177-231.5t73-287.5zM1326 972q0-75-72-75-17 0-47 6-95 19-149 19-226 0-226-243 0-86 30-204-83 127-83 275 0 150 89 260.5t235 110.5q111 0 210-70 13-48 13-79zM884 313q0-50-32-89.5t-81-39.5-81 39.5-32 89.5q0 51 31.5 90.5t81.5 39.5 81.5-39.5 31.5-90.5zM1513 652q0-96-37.5-179t-113-137-173.5-54q-77 0-149 35t-127 94q-48 159-48 268 0 104 45.5 157t147.5 53q53 0 142-19 36-6 53-6 51 0 77.5 28t26.5 80q0 26-4 46 75-68 117.5-165.5t42.5-200.5zM1792 869q0 111-33.5 249.5t-93.5 204.5q-58 64-195 142.5t-228 104.5l-4 1v114q0 43-29.5 75t-72.5 32q-56 0-86-50-32 50-87 50t-87-50q-30 50-86 50-55 0-87-50-30 50-86 50-47 0-75-33.5t-28-81.5q-90 68-198 68-118 0-211-80 54-1 106-20-113-31-182-127 32 7 71 7 89 0 164-46-192-192-240-306-24-56-24-160 0-57 9-125.5t31.5-146.5 55-141 86.5-105 120-42q59 0 81 52 19-29 42-54 2-3 12-13t13-16q10-15 23-38t25-42 28-39q87-111 211.5-177t260.5-66q35 0 62 4 59-64 146-64 83 0 140 57 5 5 5 12 0 5-6 13.5t-12.5 16-16 17l-10.5 10.5q17 6 36 18t19 24q0 6-16 25 157 138 197 378 25-30 60-30 45 0 100 49 90 80 90 279z\"}]}}),h.register({\"thermometer-0\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-79 56-135.5t136-56.5 136 56.5 56 135.5zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-1\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-139h128v139q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-2\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-395h128v395q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-3\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-651h128v651q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-4\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-empty\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-79 56-135.5t136-56.5 136 56.5 56 135.5zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-full\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-half\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-395h128v395q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-quarter\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-139h128v139q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-three-quarters\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-651h128v651q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({thermometer:{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thumb-tack\":{width:1152,height:1792,paths:[{d:\"M480 864v-448q0-14-9-23t-23-9-23 9-9 23v448q0 14 9 23t23 9 23-9 9-23zM1152 1216q0 26-19 45t-45 19h-429l-51 483q-2 12-10.5 20.5t-20.5 8.5h-1q-27 0-32-27l-76-485h-404q-26 0-45-19t-19-45q0-123 78.5-221.5t177.5-98.5v-512q-52 0-90-38t-38-90 38-90 90-38h640q52 0 90 38t38 90-38 90-90 38v512q99 0 177.5 98.5t78.5 221.5z\"}]}}),h.register({\"thumbs-down\":{width:1664,height:1792,paths:[{d:\"M256 576q0 26-19 45t-45 19q-27 0-45.5-19t-18.5-45q0-27 18.5-45.5t45.5-18.5q26 0 45 18.5t19 45.5zM416 1088v-640q0-26-19-45t-45-19h-288q-26 0-45 19t-19 45v640q0 26 19 45t45 19h288q26 0 45-19t19-45zM1545 939q55 61 55 149-1 78-57.5 135t-134.5 57h-277q4 14 8 24t11 22 10 18q18 37 27 57t19 58.5 10 76.5q0 24-0.5 39t-5 45-12 50-24 45-40 40.5-60 26-82.5 10.5q-26 0-45-19-20-20-34-50t-19.5-52-12.5-61q-9-42-13.5-60.5t-17.5-48.5-31-48q-33-33-101-120-49-64-101-121t-76-59q-25-2-43-20.5t-18-43.5v-641q0-26 19-44.5t45-19.5q35-1 158-44 77-26 120.5-39.5t121.5-29 144-15.5h17 76 36q133 2 197 78 58 69 49 181 39 37 54 94 17 61 0 117 46 61 43 137 0 32-15 76z\"}]}}),h.register({\"thumbs-o-down\":{width:1536,height:1792,paths:[{d:\"M256 448q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 1024q0-35-21.5-81t-53.5-47q15-17 25-47.5t10-55.5q0-69-53-119 18-31 18-69 0-37-17.5-73.5t-47.5-52.5q5-30 5-56 0-85-49-126t-136-41h-128q-131 0-342 73-5 2-29 10.5t-35.5 12.5-35 11.5-38 11-33 6.5-31.5 3h-32v640h32q16 0 35.5 9t40 27 38.5 35.5 40 44 34.5 42.5 31.5 41 23 30q55 68 77 91 41 43 59.5 109.5t30.5 125.5 38 85q96 0 128-47t32-145q0-59-48-160.5t-48-159.5h352q50 0 89-38.5t39-89.5zM1536 1025q0 103-76 179t-180 76h-176q48 99 48 192 0 118-35 186-35 69-102 101.5t-151 32.5q-51 0-90-37-34-33-54-82t-25.5-90.5-17.5-84.5-31-64q-48-50-107-127-101-131-137-155h-274q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h288q22 0 138-40 128-44 223-66t200-22h112q140 0 226.5 79t85.5 216v5q60 77 60 178 0 22-3 43 38 67 38 144 0 36-9 69 49 73 49 163z\"}]}}),h.register({\"thumbs-o-up\":{width:1536,height:1792,paths:[{d:\"M256 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 768q0-51-39-89.5t-89-38.5h-352q0-58 48-159.5t48-160.5q0-98-32-145t-128-47q-26 26-38 85t-30.5 125.5-59.5 109.5q-22 23-77 91-4 5-23 30t-31.5 41-34.5 42.5-40 44-38.5 35.5-40 27-35.5 9h-32v640h32q13 0 31.5 3t33 6.5 38 11 35 11.5 35.5 12.5 29 10.5q211 73 342 73h121q192 0 192-167 0-26-5-56 30-16 47.5-52.5t17.5-73.5-18-69q53-50 53-119 0-25-10-55.5t-25-47.5q32-1 53.5-47t21.5-81zM1536 767q0 89-49 163 9 33 9 69 0 77-38 144 3 21 3 43 0 101-60 178 1 139-85 219.5t-227 80.5h-36-93q-96 0-189.5-22.5t-216.5-65.5q-116-40-138-40h-288q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h274q36-24 137-155 58-75 107-128 24-25 35.5-85.5t30.5-126.5 62-108q39-37 90-37 84 0 151 32.5t102 101.5 35 186q0 93-48 192h176q104 0 180 76t76 179z\"}]}}),h.register({\"thumbs-up\":{width:1664,height:1792,paths:[{d:\"M256 1344q0-26-19-45t-45-19q-27 0-45.5 19t-18.5 45q0 27 18.5 45.5t45.5 18.5q26 0 45-18.5t19-45.5zM416 832v640q0 26-19 45t-45 19h-288q-26 0-45-19t-19-45v-640q0-26 19-45t45-19h288q26 0 45 19t19 45zM1600 832q0 86-55 149 15 44 15 76 3 76-43 137 17 56 0 117-15 57-54 94 9 112-49 181-64 76-197 78h-36-76-17q-66 0-144-15.5t-121.5-29-120.5-39.5q-123-43-158-44-26-1-45-19.5t-19-44.5v-641q0-25 18-43.5t43-20.5q24-2 76-59t101-121q68-87 101-120 18-18 31-48t17.5-48.5 13.5-60.5q7-39 12.5-61t19.5-52 34-50q19-19 45-19 46 0 82.5 10.5t60 26 40 40.5 24 45 12 50 5 45 0.5 39q0 38-9.5 76t-19 60-27.5 56q-3 6-10 18t-11 22-8 24h277q78 0 135 57t57 135z\"}]}}),h.register({ticket:{width:1792,height:1792,paths:[{d:\"M1024 452l316 316-572 572-316-316zM813 1431l618-618q19-19 19-45t-19-45l-362-362q-18-18-45-18t-45 18l-618 618q-19 19-19 45t19 45l362 362q18 18 45 18t45-18zM1702 794l-907 908q-37 37-90.5 37t-90.5-37l-126-126q56-56 56-136t-56-136-136-56-136 56l-125-126q-37-37-37-90.5t37-90.5l907-906q37-37 90.5-37t90.5 37l125 125q-56 56-56 136t56 136 136 56 136-56l126 125q37 37 37 90.5t-37 90.5z\"}]}}),h.register({\"times-circle-o\":{width:1536,height:1792,paths:[{d:\"M1097 1079l-146 146q-10 10-23 10t-23-10l-137-137-137 137q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l137-137-137-137q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l137 137 137-137q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-137 137 137 137q10 10 10 23t-10 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"times-circle\":{width:1536,height:1792,paths:[{d:\"M1149 1122q0-26-19-45l-181-181 181-181q19-19 19-45 0-27-19-46l-90-90q-19-19-46-19-26 0-45 19l-181 181-181-181q-19-19-45-19-27 0-46 19l-90 90q-19 19-19 46 0 26 19 45l181 181-181 181q-19 19-19 45 0 27 19 46l90 90q19 19 46 19 26 0 45-19l181-181 181 181q19 19 45 19 27 0 46-19l90-90q19-19 19-46zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"times-rectangle-o\":{width:1792,height:1792,paths:[{d:\"M1257 1111l-146 146q-10 10-23 10t-23-10l-169-169-169 169q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l169-169-169-169q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l169 169 169-169q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-169 169 169 169q10 10 10 23t-10 23zM256 1408h1280v-1024h-1280v1024zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"times-rectangle\":{width:1792,height:1792,paths:[{d:\"M1175 1321l146-146q10-10 10-23t-10-23l-233-233 233-233q10-10 10-23t-10-23l-146-146q-10-10-23-10t-23 10l-233 233-233-233q-10-10-23-10t-23 10l-146 146q-10 10-10 23t10 23l233 233-233 233q-10 10-10 23t10 23l146 146q10 10 23 10t23-10l233-233 233 233q10 10 23 10t23-10zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({times:{width:1408,height:1792,paths:[{\nd:\"M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"}]}}),h.register({tint:{width:1024,height:1792,paths:[{d:\"M512 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1024 1024q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z\"}]}}),h.register({\"toggle-down\":{width:1536,height:1792,paths:[{d:\"M1145 675q18 35-5 66l-320 448q-19 27-52 27t-52-27l-320-448q-23-31-5-66 17-35 57-35h640q40 0 57 35zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"toggle-left\":{width:1536,height:1792,paths:[{d:\"M1024 576v640q0 26-19 45t-45 19q-20 0-37-12l-448-320q-27-19-27-52t27-52l448-320q17-12 37-12 26 0 45 19t19 45zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"toggle-off\":{width:2048,height:1792,paths:[{d:\"M1152 896q0-104-40.5-198.5t-109.5-163.5-163.5-109.5-198.5-40.5-198.5 40.5-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5 198.5-40.5 163.5-109.5 109.5-163.5 40.5-198.5zM1920 896q0-104-40.5-198.5t-109.5-163.5-163.5-109.5-198.5-40.5h-386q119 90 188.5 224t69.5 288-69.5 288-188.5 224h386q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5zM2048 896q0 130-51 248.5t-136.5 204-204 136.5-248.5 51h-768q-130 0-248.5-51t-204-136.5-136.5-204-51-248.5 51-248.5 136.5-204 204-136.5 248.5-51h768q130 0 248.5 51t204 136.5 136.5 204 51 248.5z\"}]}}),h.register({\"toggle-on\":{width:2048,height:1792,paths:[{d:\"M0 896q0-130 51-248.5t136.5-204 204-136.5 248.5-51h768q130 0 248.5 51t204 136.5 136.5 204 51 248.5-51 248.5-136.5 204-204 136.5-248.5 51h-768q-130 0-248.5-51t-204-136.5-136.5-204-51-248.5zM1408 1408q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5-198.5 40.5-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5z\"}]}}),h.register({\"toggle-right\":{width:1536,height:1792,paths:[{d:\"M1088 896q0 33-27 52l-448 320q-31 23-66 5-35-17-35-57v-640q0-40 35-57 35-18 66 5l448 320q27 19 27 52zM1280 1376v-960q0-14-9-23t-23-9h-960q-14 0-23 9t-9 23v960q0 14 9 23t23 9h960q14 0 23-9t9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"toggle-up\":{width:1536,height:1792,paths:[{d:\"M1145 1117q-17 35-57 35h-640q-40 0-57-35-18-35 5-66l320-448q19-27 52-27t52 27l320 448q23 31 5 66zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({trademark:{width:1973,height:1792,paths:[{d:\"M857 544v117q0 13-9.5 22t-22.5 9h-298v812q0 13-9 22.5t-22 9.5h-135q-13 0-22.5-9t-9.5-23v-812h-297q-13 0-22.5-9t-9.5-22v-117q0-14 9-23t23-9h793q13 0 22.5 9.5t9.5 22.5zM1895 541l77 961q1 13-8 24-10 10-23 10h-134q-12 0-21-8.5t-10-20.5l-46-588-189 425q-8 19-29 19h-120q-20 0-29-19l-188-427-45 590q-1 12-10 20.5t-21 8.5h-135q-13 0-23-10-9-10-9-24l78-961q1-12 10-20.5t21-8.5h142q20 0 29 19l220 520q10 24 20 51 3-7 9.5-24.5t10.5-26.5l221-520q9-19 29-19h141q13 0 22 8.5t10 20.5z\"}]}}),h.register({train:{width:1536,height:1792,paths:[{d:\"M1088 0q185 0 316.5 93.5t131.5 226.5v896q0 130-125.5 222t-305.5 97l213 202q16 15 8 35t-30 20h-1056q-22 0-30-20t8-35l213-202q-180-5-305.5-97t-125.5-222v-896q0-133 131.5-226.5t316.5-93.5h640zM768 1344q80 0 136-56t56-136-56-136-136-56-136 56-56 136 56 136 136 56zM1344 768v-512h-1152v512h1152z\"}]}}),h.register({\"transgender-alt\":{width:1792,height:1792,paths:[{d:\"M1280 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-217-24-364.5-187.5t-147.5-384.5q0-201 126-359l-52-53-101 111q-9 10-22 10.5t-23-7.5l-48-44q-10-8-10.5-21.5t8.5-23.5l105-115-111-112v134q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-288q0-26 19-45t45-19h288q14 0 23 9t9 23v64q0 14-9 23t-23 9h-133l106 107 86-94q9-10 22-10.5t23 7.5l48 44q10 8 10.5 21.5t-8.5 23.5l-90 99 57 56q158-126 359-126t359 126l255-254h-134q-14 0-23-9t-9-23v-64zM832 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({transgender:{width:1536,height:1792,paths:[{d:\"M1024 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-149-16-270.5-103t-186.5-223.5-53-291.5q16-204 160-353.5t347-172.5q118-14 228 19t198 103l255-254h-134q-14 0-23-9t-9-23v-64zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"trash-o\":{width:1408,height:1792,paths:[{d:\"M512 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM768 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM1024 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM1152 1460v-948h-896v948q0 22 7 40.5t14.5 27 10.5 8.5h832q3 0 10.5-8.5t14.5-27 7-40.5zM480 384h448l-48-117q-7-9-17-11h-317q-10 2-17 11zM1408 416v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z\"}]}}),h.register({trash:{width:1408,height:1792,paths:[{d:\"M512 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM768 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM1024 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM480 384h448l-48-117q-7-9-17-11h-317q-10 2-17 11zM1408 416v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z\"}]}}),h.register({tree:{width:1536,height:1792,paths:[{d:\"M1504 1472q0 26-19 45t-45 19h-462q1 17 6 87.5t5 108.5q0 25-18 42.5t-43 17.5h-320q-25 0-43-17.5t-18-42.5q0-38 5-108.5t6-87.5h-462q-26 0-45-19t-19-45 19-45l402-403h-229q-26 0-45-19t-19-45 19-45l402-403h-197q-26 0-45-19t-19-45 19-45l384-384q19-19 45-19t45 19l384 384q19 19 19 45t-19 45-45 19h-197l402 403q19 19 19 45t-19 45-45 19h-229l402 403q19 19 19 45z\"}]}}),h.register({trello:{width:1536,height:1792,paths:[{d:\"M704 1344v-1024q0-14-9-23t-23-9h-480q-14 0-23 9t-9 23v1024q0 14 9 23t23 9h480q14 0 23-9t9-23zM1376 960v-640q0-14-9-23t-23-9h-480q-14 0-23 9t-9 23v640q0 14 9 23t23 9h480q14 0 23-9t9-23zM1536 192v1408q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({tripadvisor:{width:2304,height:1792,paths:[{d:\"M651 997q0 39-27.5 66.5t-65.5 27.5q-39 0-66.5-27.5t-27.5-66.5q0-38 27.5-65.5t66.5-27.5q38 0 65.5 27.5t27.5 65.5zM1805 996q0 39-27.5 66.5t-66.5 27.5-66.5-27.5-27.5-66.5 27.5-66 66.5-27 66.5 27 27.5 66zM765 997q0-79-56.5-136t-136.5-57-136.5 56.5-56.5 136.5 56.5 136.5 136.5 56.5 136.5-56.5 56.5-136.5zM1918 996q0-80-56.5-136.5t-136.5-56.5q-79 0-136 56.5t-57 136.5 56.5 136.5 136.5 56.5 136.5-56.5 56.5-136.5zM850 997q0 116-81.5 197.5t-196.5 81.5q-116 0-197.5-82t-81.5-197 82-196.5 197-81.5 196.5 81.5 81.5 196.5zM2004 996q0 115-81.5 196.5t-197.5 81.5q-115 0-196.5-81.5t-81.5-196.5 81.5-196.5 196.5-81.5q116 0 197.5 81.5t81.5 196.5zM1040 999q0-191-135.5-326.5t-326.5-135.5q-125 0-231 62t-168 168.5-62 231.5 62 231.5 168 168.5 231 62q191 0 326.5-135.5t135.5-326.5zM1708 426q-254-111-556-111-319 0-573 110 117 0 223 45.5t182.5 122.5 122 183 45.5 223q0-115 43.5-219.5t118-180.5 177.5-123 217-50zM2187 999q0-191-135-326.5t-326-135.5-326.5 135.5-135.5 326.5 135.5 326.5 326.5 135.5 326-135.5 135-326.5zM1921 433h383q-44 51-75 114.5t-40 114.5q110 151 110 337 0 156-77 288t-209 208.5-287 76.5q-133 0-249-56t-196-155q-47 56-129 179-11-22-53.5-82.5t-74.5-97.5q-80 99-196.5 155.5t-249.5 56.5q-155 0-287-76.5t-209-208.5-77-288q0-186 110-337-9-51-40-114.5t-75-114.5h365q149-100 355-156.5t432-56.5q224 0 421 56t348 157z\"}]}}),h.register({trophy:{width:1664,height:1792,paths:[{d:\"M458 883q-74-162-74-371h-256v96q0 78 94.5 162t235.5 113zM1536 608v-96h-256q0 209-74 371 141-29 235.5-113t94.5-162zM1664 480v128q0 71-41.5 143t-112 130-173 97.5-215.5 44.5q-42 54-95 95-38 34-52.5 72.5t-14.5 89.5q0 54 30.5 91t97.5 37q75 0 133.5 45.5t58.5 114.5v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-69 58.5-114.5t133.5-45.5q67 0 97.5-37t30.5-91q0-51-14.5-89.5t-52.5-72.5q-53-41-95-95-113-5-215.5-44.5t-173-97.5-112-130-41.5-143v-128q0-40 28-68t68-28h288v-96q0-66 47-113t113-47h576q66 0 113 47t47 113v96h288q40 0 68 28t28 68z\"}]}}),h.register({truck:{width:1792,height:1792,paths:[{d:\"M640 1408q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM256 896h384v-256h-158q-13 0-22 9l-195 195q-9 9-9 22v30zM1536 1408q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM1792 320v1024q0 15-4 26.5t-13.5 18.5-16.5 11.5-23.5 6-22.5 2-25.5 0-22.5-0.5q0 106-75 181t-181 75-181-75-75-181h-384q0 106-75 181t-181 75-181-75-75-181h-64q-3 0-22.5 0.5t-25.5 0-22.5-2-23.5-6-16.5-11.5-13.5-18.5-4-26.5q0-26 19-45t45-19v-320q0-8-0.5-35t0-38 2.5-34.5 6.5-37 14-30.5 22.5-30l198-198q19-19 50.5-32t58.5-13h160v-192q0-26 19-45t45-19h1024q26 0 45 19t19 45z\"}]}}),h.register({try:{width:1152,height:1792,paths:[{d:\"M1152 832q0 191-94.5 353t-256.5 256.5-353 94.5h-160q-14 0-23-9t-9-23v-611l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-93l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-250q0-14 9-23t23-9h160q14 0 23 9t9 23v181l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v93l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v487q188-13 318-151t130-328q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({tty:{width:1792,height:1792,paths:[{d:\"M448 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM256 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM832 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM640 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM66 768q-28 0-47-19t-19-46v-129h514v129q0 27-19 46t-46 19h-383zM1216 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1024 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1600 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1408 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 520v13h-514v-10q0-104-382-102-382 1-382 102v10h-514v-13q0-17 8.5-43t34-64 65.5-75.5 110.5-76 160-67.5 224-47.5 293.5-18.5 293 18.5 224 47.5 160.5 67.5 110.5 76 65.5 75.5 34 64 8.5 43zM1792 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 574v129q0 27-19 46t-46 19h-384q-27 0-46-19t-19-46v-129h514z\"}]}}),h.register({\"tumblr-square\":{width:1536,height:1792,paths:[{d:\"M1136 1461l-62-183q-44 22-103 22-36 1-62-10.5t-38.5-31.5-17.5-40.5-5-43.5v-398h257v-194h-256v-326h-188q-8 0-9 10-5 44-17.5 87t-39 95-77 95-118.5 68v165h130v418q0 57 21.5 115t65 111 121 85.5 176.5 30.5q69-1 136.5-25t85.5-50zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({tumblr:{width:1024,height:1792,paths:[{d:\"M944 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26t-142.5-74-95-106-55.5-120-16.5-118v-544h-168v-215q72-26 129-69.5t91-90 58-102 34-99 15-88.5q1-5 4.5-8.5t7.5-3.5h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\"}]}}),h.register({\"turkish-lira\":{width:1152,height:1792,paths:[{d:\"M1152 832q0 191-94.5 353t-256.5 256.5-353 94.5h-160q-14 0-23-9t-9-23v-611l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-93l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-250q0-14 9-23t23-9h160q14 0 23 9t9 23v181l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v93l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v487q188-13 318-151t130-328q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({tv:{width:2048,height:1792,paths:[{d:\"M1792 1248v-960q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 288v960q0 66-47 113t-113 47h-736v128h352q14 0 23 9t9 23v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-128h-736q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({twitch:{width:1792,height:1792,paths:[{d:\"M896 434v434h-145v-434h145zM1294 434v434h-145v-434h145zM1294 1194l253-254v-795h-1194v1049h326v217l217-217h398zM1692 0v1013l-434 434h-326l-217 217h-217v-217h-398v-1158l109-289h1483z\"}]}}),h.register({\"twitter-square\":{width:1536,height:1792,paths:[{d:\"M1280 610q-56 25-121 34 68-40 93-117-65 38-134 51-61-66-153-66-87 0-148.5 61.5t-61.5 148.5q0 29 5 48-129-7-242-65t-192-155q-29 50-29 106 0 114 91 175-47-1-100-26v2q0 75 50 133.5t123 72.5q-29 8-51 8-13 0-39-4 21 63 74.5 104t121.5 42q-116 90-261 90-26 0-50-3 148 94 322 94 112 0 210-35.5t168-95 120.5-137 75-162 24.5-168.5q0-18-1-27 63-45 105-109zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({twitter:{width:1664,height:1792,paths:[{d:\"M1620 408q-67 98-162 167 1 14 1 42 0 130-38 259.5t-115.5 248.5-184.5 210.5-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5t-114-159.5q33 5 61 5 43 0 85-11-112-23-185.5-111.5t-73.5-205.5v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5t371.5 99.5q-8-38-8-74 0-134 94.5-228.5t228.5-94.5q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z\"}]}}),h.register({umbrella:{width:1664,height:1792,paths:[{d:\"M896 828v580q0 104-76 180t-180 76-180-76-76-180q0-26 19-45t45-19 45 19 19 45q0 50 39 89t89 39 89-39 39-89v-580q33-11 64-11t64 11zM1664 855q0 13-9.5 22.5t-22.5 9.5q-11 0-23-10-49-46-93-69t-102-23q-68 0-128 37t-103 97q-7 10-17.5 28t-14.5 24q-11 17-28 17-18 0-29-17-4-6-14.5-24t-17.5-28q-43-60-102.5-97t-127.5-37-127.5 37-102.5 97q-7 10-17.5 28t-14.5 24q-11 17-29 17-17 0-28-17-4-6-14.5-24t-17.5-28q-43-60-103-97t-128-37q-58 0-102 23t-93 69q-12 10-23 10-13 0-22.5-9.5t-9.5-22.5q0-5 1-7 45-183 172.5-319.5t298-204.5 360.5-68q140 0 274.5 40t246.5 113.5 194.5 187 115.5 251.5q1 2 1 7zM896 128v98q-42-2-64-2t-64 2v-98q0-26 19-45t45-19 45 19 19 45z\"}]}}),h.register({underline:{width:1536,height:1792,paths:[{d:\"M48 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 0.5 32.5t0.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zM1536 1632v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z\"}]}}),h.register({undo:{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"}]}}),h.register({\"universal-access\":{width:1792,height:1792,paths:[{d:\"M1374 657q-6-26-28.5-39.5t-48.5-7.5q-261 62-401 62t-401-62q-26-6-48.5 7.5t-28.5 39.5 7.5 48.5 39.5 28.5q194 46 303 58-2 158-15.5 269t-26.5 155.5-41 115.5l-9 21q-10 25 1 49t36 34q9 4 23 4 44 0 60-41l8-20q54-139 71-259h42q17 120 71 259l8 20q16 41 60 41 14 0 23-4 25-10 36-34t1-49l-9-21q-28-71-41-115.5t-26.5-155.5-15.5-269q109-12 303-58 26-6 39.5-28.5t7.5-48.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1600 896q0 143-55.5 273.5t-150 225-225 150-273.5 55.5-273.5-55.5-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5zM896 128q-156 0-298 61t-245 164-164 245-61 298 61 298 164 245 245 164 298 61 298-61 245-164 164-245 61-298-61-298-164-245-245-164-298-61zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({university:{width:2048,height:1792,paths:[{d:\"M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z\"}]}}),h.register({unlink:{width:1664,height:1792,paths:[{d:\"M439 1271l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zM608 1312v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM384 1088q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zM1031 492l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zM1664 576q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1120 32v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM1527 183l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z\"}]}}),h.register({\"unlock-alt\":{width:1152,height:1792,paths:[{d:\"M1056 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\"}]}}),h.register({unlock:{width:1664,height:1792,paths:[{d:\"M1664 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\"}]}}),h.register({unsorted:{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45zM1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({upload:{width:1664,height:1792,paths:[{d:\"M1280 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 1248v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zM1339 600q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z\"}]}}),h.register({usb:{width:2304,height:1792,paths:[{d:\"M2288 805q16 8 16 27t-16 27l-320 192q-8 5-16 5-9 0-16-4-16-10-16-28v-128h-858q37 58 83 165 16 37 24.5 55t24 49 27 47 27 34 31.5 26 33 8h96v-96q0-14 9-23t23-9h320q14 0 23 9t9 23v320q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-96h-96q-32 0-61-10t-51-23.5-45-40.5-37-46-33.5-57-28.5-57.5-28-60.5q-23-53-37-81.5t-36-65-44.5-53.5-46.5-17h-360q-22 84-91 138t-157 54q-106 0-181-75t-75-181 75-181 181-75q88 0 157 54t91 138h104q24 0 46.5-17t44.5-53.5 36-65 37-81.5q19-41 28-60.5t28.5-57.5 33.5-57 37-46 45-40.5 51-23.5 61-10h107q21-57 70-92.5t111-35.5q80 0 136 56t56 136-56 136-136 56q-62 0-111-35.5t-70-92.5h-107q-17 0-33 8t-31.5 26-27 34-27 47-24 49-24.5 55q-46 107-83 165h1114v-128q0-18 16-28t32 1z\"}]}}),h.register({usd:{width:1024,height:1792,paths:[{d:\"M978 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z\"}]}}),h.register({\"user-circle-o\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348q0 181-70.5 347t-190.5 286-286 191.5-349 71.5-349-71-285.5-191.5-190.5-286-71-347.5 71-348 191-286 286-191 348-71zM1515 1351q149-205 149-455 0-156-61-298t-164-245-245-164-298-61-298 61-245 164-164 245-61 298q0 250 149 455 66-327 306-327 131 128 313 128t313-128q240 0 306 327zM1280 704q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5z\"}]}}),h.register({\"user-circle\":{width:1792,height:1792,paths:[{d:\"M1523 1339q-22-155-87.5-257.5t-184.5-118.5q-67 74-159.5 115.5t-195.5 41.5-195.5-41.5-159.5-115.5q-119 16-184.5 118.5t-87.5 257.5q106 150 271 237.5t356 87.5 356-87.5 271-237.5zM1280 640q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM1792 896q0 182-71 347.5t-190.5 286-285.5 191.5-349 71q-182 0-348-71t-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({\"user-md\":{width:1408,height:1792,paths:[{d:\"M384 1344q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1408 1405q0 121-73 190t-194 69h-874q-121 0-194-69t-73-190q0-68 5.5-131t24-138 47.5-132.5 81-103 120-60.5q-22 52-22 120v203q-58 20-93 70t-35 111q0 80 56 136t136 56 136-56 56-136q0-61-35.5-111t-92.5-70v-203q0-62 25-93 132 104 295 104t295-104q25 31 25 93v64q-106 0-181 75t-75 181v89q-32 29-32 71 0 40 28 68t68 28 68-28 28-68q0-42-32-71v-89q0-52 38-90t90-38 90 38 38 90v89q-32 29-32 71 0 40 28 68t68 28 68-28 28-68q0-42-32-71v-89q0-68-34.5-127.5t-93.5-93.5q0-10 0.5-42.5t0-48-2.5-41.5-7-47-13-40q68 15 120 60.5t81 103 47.5 132.5 24 138 5.5 131zM1088 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({\"user-o\":{width:1536,height:1792,paths:[{d:\"M1201 784q47 14 89.5 38t89 73 79.5 115.5 55 172 22 236.5q0 154-100 263.5t-241 109.5h-854q-141 0-241-109.5t-100-263.5q0-131 22-236.5t55-172 79.5-115.5 89-73 89.5-38q-79-125-79-272 0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5 198.5 40.5 163.5 109.5 109.5 163.5 40.5 198.5q0 147-79 272zM768 128q-159 0-271.5 112.5t-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5-112.5-271.5-271.5-112.5zM1195 1664q88 0 150.5-71.5t62.5-173.5q0-239-78.5-377t-225.5-145q-145 127-336 127t-336-127q-147 7-225.5 145t-78.5 377q0 102 62.5 173.5t150.5 71.5h854z\"}]}}),h.register({\"user-plus\":{width:2048,height:1792,paths:[{d:\"M704 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zM1664 1024h352q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-352v352q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-352h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-352q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5v352zM928 1248q0 52 38 90t90 38h256v238q-68 50-171 50h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 79 61 154.5 91.5t164.5 30.5 164.5-30.5 154.5-91.5q20-17 39-17 132 0 217 96h-223q-52 0-90 38t-38 90v192z\"}]}}),h.register({\"user-secret\":{width:1536,height:1792,paths:[{d:\"M576 1536l96-448-96-128-128-64zM832 1536l128-640-128 64-96 128zM992 526q-2-4-4-6-10-8-96-8-70 0-167 19-7 2-21 2t-21-2q-97-19-167-19-86 0-96 8-2 2-4 6 2 18 4 27 2 3 7.5 6.5t7.5 10.5q2 4 7.5 20.5t7 20.5 7.5 17 8.5 17 9 14 12 13.5 14 9.5 17.5 8 20.5 4 24.5 2q36 0 59-12.5t32.5-30 14.5-34.5 11.5-29.5 17.5-12.5h12q11 0 17.5 12.5t11.5 29.5 14.5 34.5 32.5 30 59 12.5q13 0 24.5-2t20.5-4 17.5-8 14-9.5 12-13.5 9-14 8.5-17 7.5-17 7-20.5 7.5-20.5q2-7 7.5-10.5t7.5-6.5q2-9 4-27zM1408 1405q0 121-73 190t-194 69h-874q-121 0-194-69t-73-190q0-61 4.5-118t19-125.5 37.5-123.5 63.5-103.5 93.5-74.5l-90-220h214q-22-64-22-128 0-12 2-32-194-40-194-96 0-57 210-99 17-62 51.5-134t70.5-114q32-37 76-37 30 0 84 31t84 31 84-31 84-31q44 0 76 37 36 42 70.5 114t51.5 134q210 42 210 99 0 56-194 96 7 81-20 160h214l-82 225q63 33 107.5 96.5t65.5 143.5 29 151.5 8 148.5z\"}]}}),h.register({\"user-times\":{width:2048,height:1792,paths:[{d:\"M704 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zM1781 1216l249 249q9 9 9 23 0 13-9 22l-136 136q-9 9-22 9-14 0-23-9l-249-249-249 249q-9 9-23 9-13 0-22-9l-136-136q-9-9-9-22 0-14 9-23l249-249-249-249q-9-9-9-23 0-13 9-22l136-136q9-9 22-9 14 0 23 9l249 249 249-249q9-9 23-9 13 0 22 9l136 136q9 9 9 22 0 14-9 23zM1283 1216l-181 181q-37 37-37 91 0 53 37 90l83 83q-21 3-44 3h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 154 122 319 122t319-122q20-17 39-17 28 0 57 6-28 27-41 50t-13 56q0 54 37 91z\"}]}}),h.register({user:{width:1280,height:1792,paths:[{d:\"M1280 1399q0 109-62.5 187t-150.5 78h-854q-88 0-150.5-78t-62.5-187q0-85 8.5-160.5t31.5-152 58.5-131 94-89 134.5-34.5q131 128 313 128t313-128q76 0 134.5 34.5t94 89 58.5 131 31.5 152 8.5 160.5zM1024 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({users:{width:1920,height:1792,paths:[{d:\"M593 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zM1664 1533q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zM640 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1344 640q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1920 865q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zM1792 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z\"}]}}),h.register({\"vcard-o\":{width:2048,height:1792,paths:[{d:\"M1024 1131q0 64-37 106.5t-91 42.5h-512q-54 0-91-42.5t-37-106.5 9-117.5 29.5-103 60.5-78 97-28.5q6 4 30 18t37.5 21.5 35.5 17.5 43 14.5 42 4.5 42-4.5 43-14.5 35.5-17.5 37.5-21.5 30-18q57 0 97 28.5t60.5 78 29.5 103 9 117.5zM867 611q0 94-66.5 160.5t-160.5 66.5-160.5-66.5-66.5-160.5 66.5-160.5 160.5-66.5 160.5 66.5 66.5 160.5zM1792 1056v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1792 804v56q0 15-10.5 25.5t-25.5 10.5h-568q-15 0-25.5-10.5t-10.5-25.5v-56q0-15 10.5-25.5t25.5-10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 544v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1920 1504v-1216q0-13-9.5-22.5t-22.5-9.5h-1728q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h352v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h768v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h352q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({vcard:{width:2048,height:1792,paths:[{d:\"M1024 1131q0-64-9-117.5t-29.5-103-60.5-78-97-28.5q-6 4-30 18t-37.5 21.5-35.5 17.5-43 14.5-42 4.5-42-4.5-43-14.5-35.5-17.5-37.5-21.5-30-18q-57 0-97 28.5t-60.5 78-29.5 103-9 117.5 37 106.5 91 42.5h512q54 0 91-42.5t37-106.5zM867 611q0-94-66.5-160.5t-160.5-66.5-160.5 66.5-66.5 160.5 66.5 160.5 160.5 66.5 160.5-66.5 66.5-160.5zM1792 1120v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM1792 860v-56q0-15-10.5-25.5t-25.5-10.5h-568q-15 0-25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5-10.5t10.5-25.5zM1792 608v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM2048 288v1216q0 66-47 113t-113 47h-352v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-768v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-352q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"venus-double\":{width:1792,height:1792,paths:[{d:\"M1790 529q12 155-52.5 292t-186 224-271.5 103v260h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-512v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-260q-150-16-271.5-103t-186-224-52.5-292q17-206 164.5-356.5t352.5-169.5q206-21 377 94 171-115 377-94 205 19 352.5 169.5t164.5 356.5zM896 889q128-131 128-313t-128-313q-128 131-128 313t128 313zM576 1024q115 0 218-57-154-165-154-391 0-224 154-391-103-57-218-57-185 0-316.5 131.5t-131.5 316.5 131.5 316.5 316.5 131.5zM1152 1408v-260q-137-15-256-94-119 79-256 94v260h512zM1216 1024q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5q-115 0-218 57 154 167 154 391 0 226-154 391 103 57 218 57z\"}]}}),h.register({\"venus-mars\":{width:2048,height:1792,paths:[{d:\"M1664 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q76 95 107.5 214t9.5 247q-32 180-164.5 310t-313.5 157q-223 34-409-90-117 78-256 93v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-155-17-279.5-109.5t-187-237.5-39.5-307q25-187 159.5-322.5t320.5-164.5q224-34 410 90 146-97 320-97 201 0 359 126l255-254h-134q-14 0-23-9t-9-23v-64zM896 1145q128-131 128-313t-128-313q-128 131-128 313t128 313zM128 832q0 185 131.5 316.5t316.5 131.5q117 0 218-57-154-167-154-391t154-391q-101-57-218-57-185 0-316.5 131.5t-131.5 316.5zM1216 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5q-117 0-218 57 154 167 154 391t-154 391q101 57 218 57z\"}]}}),h.register({venus:{width:1280,height:1792,paths:[{d:\"M1152 576q0 221-147.5 384.5t-364.5 187.5v260h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-260q-150-16-271.5-103t-186-224-52.5-292q11-134 80.5-249t182-188 245.5-88q170-19 319 54t236 212 87 306zM128 576q0 185 131.5 316.5t316.5 131.5 316.5-131.5 131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5z\"}]}}),h.register({viacoin:{width:1536,height:1792,paths:[{\nd:\"M1536 0l-192 448h192v192h-274l-55 128h329v192h-411l-357 832-357-832h-411v-192h329l-55-128h-274v-192h192l-192-448h256l323 768h378l323-768h256zM768 1216l108-256h-216z\"}]}}),h.register({\"viadeo-square\":{width:1536,height:1792,paths:[{d:\"M1050 1041q0-78-28-147-41 25-85 34 22 50 22 114 0 117-77 198.5t-193 81.5-193.5-81.5-77.5-198.5q0-115 78-199.5t193-84.5q53 0 98 19 4-43 27-87-60-21-125-21-154 0-257.5 108.5t-103.5 263.5 103.5 261 257.5 106 257.5-106.5 103.5-260.5zM872 686q2 24 2 71 0 63-5 123t-20.5 132.5-40.5 130-68.5 106-100.5 70.5q21 3 42 3h10q219-139 219-411 0-116-38-225zM872 686q-4-80-44-171.5t-98-130.5q92 156 142 302zM1207 581q0-102-51-174-41 86-124 109-69 19-109 53.5t-40 99.5q0 40 24 77 74-17 140.5-67t95.5-115q-4 52-74.5 111.5t-138.5 97.5q52 52 110 52 51 0 90-37t60-90q17-42 17-117zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({viadeo:{width:1280,height:1792,paths:[{d:\"M1050 1106q0 215-147 374-148 161-378 161-232 0-378-161-147-159-147-374 0-147 68-270.5t189-196.5 268-73q96 0 182 31-32 62-39 126-66-28-143-28-167 0-280.5 123t-113.5 291q0 170 112.5 288.5t281.5 118.5 281-118.5 112-288.5q0-89-32-166 66-13 123-49 41 98 41 212zM846 917q0 192-79.5 345t-238.5 253l-14 1q-29 0-62-5 83-32 146.5-102.5t99.5-154.5 58.5-189 30-192.5 7.5-178.5q0-69-3-103 55 160 55 326zM791 589v2q-73-214-206-440 88 59 142.5 186.5t63.5 251.5zM1035 792q-83 0-160-75 218-120 290-247 19-37 21-56-42 94-139.5 166.5t-204.5 97.5q-35-54-35-113 0-37 17-79t43-68q46-44 157-74 59-16 106-58.5t74-100.5q74 105 74 253 0 109-24 170-32 77-88.5 130.5t-130.5 53.5z\"}]}}),h.register({\"video-camera\":{width:1792,height:1792,paths:[{d:\"M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z\"}]}}),h.register({\"vimeo-square\":{width:1536,height:1792,paths:[{d:\"M1292 638q10-216-161-222-231-8-312 261 44-19 82-19 85 0 74 96-4 57-74 167t-105 110q-43 0-82-169-13-54-45-255-30-189-160-177-59 7-164 100l-81 72-81 72 52 67q76-52 87-52 57 0 107 179 15 55 45 164.5t45 164.5q68 179 164 179 157 0 383-294 220-283 226-444zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({vimeo:{width:1792,height:1792,paths:[{d:\"M1709 518q-10 236-332 651-333 431-562 431-142 0-240-263-44-160-132-482-72-262-157-262-18 0-127 76l-77-98q24-21 108-96.5t130-115.5q156-138 241-146 95-9 153 55.5t81 203.5q44 287 66 373 55 249 120 249 51 0 154-161 101-161 109-246 13-139-109-139-57 0-121 26 120-393 459-382 251 8 236 326z\"}]}}),h.register({vine:{width:1536,height:1792,paths:[{d:\"M1497 827v198q-101 23-198 23-65 136-165.5 271t-181.5 215.5-128 106.5q-80 45-162-3-28-17-60.5-43.5t-85-83.5-102.5-128.5-107.5-184-105.5-244-91.5-314.5-70.5-390h283q26 218 70 398.5t104.5 317 121.5 235.5 140 195q169-169 287-406-142-72-223-220t-81-333q0-192 104-314.5t284-122.5q178 0 273 105.5t95 297.5q0 159-58 286-7 1-19.5 3t-46 2-63-6-62-25.5-50.5-51.5q31-103 31-184 0-87-29-132t-79-45q-53 0-85 49.5t-32 140.5q0 186 105 293.5t267 107.5q62 0 121-14z\"}]}}),h.register({vk:{width:1920,height:1792,paths:[{d:\"M1917 520q23 64-150 294-24 32-65 85-40 51-55 72t-30.5 49.5-12 42 13 34.5 32.5 43 57 53q4 2 5 4 141 131 191 221 3 5 6.5 12.5t7 26.5-0.5 34-25 27.5-59 12.5l-256 4q-24 5-56-5t-52-22l-20-12q-30-21-70-64t-68.5-77.5-61-58-56.5-15.5q-3 1-8 3.5t-17 14.5-21.5 29.5-17 52-6.5 77.5q0 15-3.5 27.5t-7.5 18.5l-4 5q-18 19-53 22h-115q-71 4-146-16.5t-131.5-53-103-66-70.5-57.5l-25-24q-10-10-27.5-30t-71.5-91-106-151-122.5-211-130.5-272q-6-16-6-27t3-16l4-6q15-19 57-19l274-2q12 2 23 6.5t16 8.5l5 3q16 11 24 32 20 50 46 103.5t41 81.5l16 29q29 60 56 104t48.5 68.5 41.5 38.5 34 14 27-5q2-1 5-5t12-22 13.5-47 9.5-81 0-125q-2-40-9-73t-14-46l-6-12q-25-34-85-43-13-2 5-24 16-19 38-30 53-26 239-24 82 1 135 13 20 5 33.5 13.5t20.5 24 10.5 32 3.5 45.5-1 55-2.5 70.5-1.5 82.5q0 11-1 42t-0.5 48 3.5 40.5 11.5 39 22.5 24.5q8 2 17 4t26-11 38-34.5 52-67 68-107.5q60-104 107-225 4-10 10-17.5t11-10.5l4-3 5-2.5t13-3 20-0.5l288-2q39-5 64 2.5t31 16.5z\"}]}}),h.register({\"volume-control-phone\":{width:1408,height:1792,paths:[{d:\"M617 1689q0-11-13-58t-31-107-20-69q-1-4-5-26.5t-8.5-36-13.5-21.5q-15-14-51-14-23 0-70 5.5t-71 5.5q-34 0-47-11-6-5-11-15.5t-7.5-20-6.5-24-5-18.5q-37-128-37-255t37-255q1-4 5-18.5t6.5-24 7.5-20 11-15.5q13-11 47-11 24 0 71 5.5t70 5.5q36 0 51-14 9-8 13.5-21.5t8.5-36 5-26.5q2-9 20-69t31-107 13-58q0-22-43.5-52.5t-75.5-42.5q-20-8-45-8-34 0-98 18-57 17-96.5 40.5t-71 66-46 70-45.5 94.5q-6 12-9 19-49 107-68 216t-19 244 19 244 68 216q56 122 83 161 63 91 179 127l6 2q64 18 98 18 25 0 45-8 32-12 75.5-42.5t43.5-52.5zM776 776q-26 0-45-19t-19-45.5 19-45.5q37-37 37-90 0-52-37-91-19-19-19-45t19-45 45-19 45 19q75 75 75 181t-75 181q-21 19-45 19zM957 957q-27 0-45-19-19-19-19-45t19-45q112-114 112-272t-112-272q-19-19-19-45t19-45 45-19 45 19q150 150 150 362t-150 362q-18 19-45 19zM1138 1138q-27 0-45-19-19-19-19-45t19-45q90-91 138.5-208t48.5-245-48.5-245-138.5-208q-19-19-19-45t19-45 45-19 45 19q109 109 167 249t58 294-58 294-167 249q-18 19-45 19z\"}]}}),h.register({\"volume-down\":{width:1152,height:1792,paths:[{d:\"M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45zM1152 896q0 76-42.5 141.5t-112.5 93.5q-10 5-25 5-26 0-45-18.5t-19-45.5q0-21 12-35.5t29-25 34-23 29-36 12-56.5-12-56.5-29-36-34-23-29-25-12-35.5q0-27 19-45.5t45-18.5q15 0 25 5 70 27 112.5 93t42.5 142z\"}]}}),h.register({\"volume-off\":{width:768,height:1792,paths:[{d:\"M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45z\"}]}}),h.register({\"volume-up\":{width:1664,height:1792,paths:[{d:\"M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45zM1152 896q0 76-42.5 141.5t-112.5 93.5q-10 5-25 5-26 0-45-18.5t-19-45.5q0-21 12-35.5t29-25 34-23 29-36 12-56.5-12-56.5-29-36-34-23-29-25-12-35.5q0-27 19-45.5t45-18.5q15 0 25 5 70 27 112.5 93t42.5 142zM1408 896q0 153-85 282.5t-225 188.5q-13 5-25 5-27 0-46-19t-19-45q0-39 39-59 56-29 76-44 74-54 115.5-135.5t41.5-173.5-41.5-173.5-115.5-135.5q-20-15-76-44-39-20-39-59 0-26 19-45t45-19q13 0 26 5 140 59 225 188.5t85 282.5zM1664 896q0 230-127 422.5t-338 283.5q-13 5-26 5-26 0-45-19t-19-45q0-36 39-59 7-4 22.5-10.5t22.5-10.5q46-25 82-51 123-91 192-227t69-289-69-289-192-227q-36-26-82-51-7-4-22.5-10.5t-22.5-10.5q-39-23-39-59 0-26 19-45t45-19q13 0 26 5 211 91 338 283.5t127 422.5z\"}]}}),h.register({warning:{width:1792,height:1792,paths:[{d:\"M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zM1022 1001l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zM1008 67l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z\"}]}}),h.register({wechat:{width:2048,height:1792,paths:[{d:\"M580 461q0-41-25-66t-66-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 66-24.5t25-65.5zM1323 968q0-28-25.5-50t-65.5-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q40 0 65.5-22t25.5-51zM1087 461q0-41-24.5-66t-65.5-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 65.5-24.5t24.5-65.5zM1722 968q0-28-26-50t-65-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q39 0 65-22t26-51zM1456 571q-31-4-70-4-169 0-311 77t-223.5 208.5-81.5 287.5q0 78 23 152-35 3-68 3-26 0-50-1.5t-55-6.5-44.5-7-54.5-10.5-50-10.5l-253 127 72-218q-290-203-290-490 0-169 97.5-311t264-223.5 363.5-81.5q176 0 332.5 66t262 182.5 136.5 260.5zM2048 1132q0 117-68.5 223.5t-185.5 193.5l55 181-199-109q-150 37-218 37-169 0-311-70.5t-223.5-191.5-81.5-264 81.5-264 223.5-191.5 311-70.5q161 0 303 70.5t227.5 192 85.5 263.5z\"}]}}),h.register({weibo:{width:1792,height:1792,paths:[{d:\"M675 1284q21-34 11-69t-45-50q-34-14-73-1t-60 46q-22 34-13 68.5t43 50.5 74.5 2.5 62.5-47.5zM769 1163q8-13 3.5-26.5t-17.5-18.5q-14-5-28.5 0.5t-21.5 18.5q-17 31 13 45 14 5 29-0.5t22-18.5zM943 1270q-45 102-158 150t-224 12q-107-34-147.5-126.5t6.5-187.5q47-93 151.5-139t210.5-19q111 29 158.5 119.5t2.5 190.5zM1255 1110q-9-96-89-170t-208.5-109-274.5-21q-223 23-369.5 141.5t-132.5 264.5q9 96 89 170t208.5 109 274.5 21q223-23 369.5-141.5t132.5-264.5zM1563 1114q0 68-37 139.5t-109 137-168.5 117.5-226 83-270.5 31-275-33.5-240.5-93-171.5-151-65-199.5q0-115 69.5-245t197.5-258q169-169 341.5-236t246.5 7q65 64 20 209-4 14-1 20t10 7 14.5-0.5 13.5-3.5l6-2q139-59 246-59t153 61q45 63 0 178-2 13-4.5 20t4.5 12.5 12 7.5 17 6q57 18 103 47t80 81.5 34 116.5zM1489 490q42 47 54.5 108.5t-6.5 117.5q-8 23-29.5 34t-44.5 4q-23-8-34-29.5t-4-44.5q20-63-24-111t-107-35q-24 5-45-8t-25-37q-5-24 8-44.5t37-25.5q60-13 119 5.5t101 65.5zM1670 327q87 96 112.5 222.5t-13.5 241.5q-9 27-34 40t-52 4-40-34-5-52q28-82 10-172t-80-158q-62-69-148-95.5t-173-8.5q-28 6-52-9.5t-30-43.5 9.5-51.5 43.5-29.5q123-26 244 11.5t208 134.5z\"}]}}),h.register({weixin:{width:2048,height:1792,paths:[{d:\"M580 461q0-41-25-66t-66-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 66-24.5t25-65.5zM1323 968q0-28-25.5-50t-65.5-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q40 0 65.5-22t25.5-51zM1087 461q0-41-24.5-66t-65.5-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 65.5-24.5t24.5-65.5zM1722 968q0-28-26-50t-65-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q39 0 65-22t26-51zM1456 571q-31-4-70-4-169 0-311 77t-223.5 208.5-81.5 287.5q0 78 23 152-35 3-68 3-26 0-50-1.5t-55-6.5-44.5-7-54.5-10.5-50-10.5l-253 127 72-218q-290-203-290-490 0-169 97.5-311t264-223.5 363.5-81.5q176 0 332.5 66t262 182.5 136.5 260.5zM2048 1132q0 117-68.5 223.5t-185.5 193.5l55 181-199-109q-150 37-218 37-169 0-311-70.5t-223.5-191.5-81.5-264 81.5-264 223.5-191.5 311-70.5q161 0 303 70.5t227.5 192 85.5 263.5z\"}]}}),h.register({whatsapp:{width:1536,height:1792,paths:[{d:\"M985 974q13 0 97.5 44t89.5 53q2 5 2 15 0 33-17 76-16 39-71 65.5t-102 26.5q-57 0-190-62-98-45-170-118t-148-185q-72-107-71-194v-8q3-91 74-158 24-22 52-22 6 0 18 1.5t19 1.5q19 0 26.5 6.5t15.5 27.5q8 20 33 88t25 75q0 21-34.5 57.5t-34.5 46.5q0 7 5 15 34 73 102 137 56 53 151 101 12 7 22 7 15 0 54-48.5t52-48.5zM782 1504q127 0 243.5-50t200.5-134 134-200.5 50-243.5-50-243.5-134-200.5-200.5-134-243.5-50-243.5 50-200.5 134-134 200.5-50 243.5q0 203 120 368l-79 233 242-77q158 104 345 104zM782 122q153 0 292.5 60t240.5 161 161 240.5 60 292.5-60 292.5-161 240.5-240.5 161-292.5 60q-195 0-365-94l-417 134 136-405q-108-178-108-389 0-153 60-292.5t161-240.5 240.5-161 292.5-60z\"}]}}),h.register({\"wheelchair-alt\":{width:1536,height:1792,paths:[{d:\"M1438 813q34 35 29 82l-44 551q-4 42-34.5 70t-71.5 28q-6 0-9-1-44-3-72.5-36.5t-25.5-77.5l35-429-143 8q55 113 55 240 0 216-148 372l-137-137q91-101 91-235 0-145-102.5-248t-247.5-103q-134 0-236 92l-137-138q120-114 284-141l264-300-149-87-181 161q-33 30-77 27.5t-73-35.5-26.5-77 34.5-73l239-213q26-23 60-26.5t64 14.5l488 283q36 21 48 68 17 67-26 117l-205 232 371-20q49-3 83 32zM1240 356q-74 0-126-52t-52-126 52-126 126-52 126.5 52 52.5 126-52.5 126-126.5 52zM613 1598q106 0 196-61l139 139q-146 116-335 116-148 0-273.5-73t-198.5-198-73-273q0-188 116-336l139 139q-60 88-60 197 0 145 102.5 247.5t247.5 102.5z\"}]}}),h.register({wheelchair:{width:1664,height:1792,paths:[{d:\"M1023 1187l102 204q-58 179-210 290t-339 111q-156 0-288.5-77.5t-210-210-77.5-288.5q0-181 104.5-330t274.5-211l17 131q-122 54-195 165.5t-73 244.5q0 185 131.5 316.5t316.5 131.5q126 0 232.5-65t165-175.5 49.5-236.5zM1571 1287l58 114-256 128q-13 7-29 7-40 0-57-35l-239-477h-472q-24 0-42.5-16.5t-21.5-40.5l-96-779q-2-17 6-42 14-51 57-82.5t97-31.5q66 0 113 47t47 113q0 69-52 117.5t-120 41.5l37 289h423v128h-407l16 128h455q40 0 57 35l228 455z\"}]}}),h.register({wifi:{width:2048,height:1792,paths:[{d:\"M1024 1523q-20 0-93-73.5t-73-93.5q0-32 62.5-54t103.5-22 103.5 22 62.5 54q0 20-73 93.5t-93 73.5zM1294 1252q-2 0-40-25t-101.5-50-128.5-25-128.5 25-101 50-40.5 25q-18 0-93.5-75t-75.5-93q0-13 10-23 78-77 196-121t233-44 233 44 196 121q10 10 10 23 0 18-75.5 93t-93.5 75zM1567 980q-11 0-23-8-136-105-252-154.5t-268-49.5q-85 0-170.5 22t-149 53-113.5 62-79 53-31 22q-17 0-92-75t-75-93q0-12 10-22 132-132 320-205t380-73 380 73 320 205q10 10 10 22 0 18-75 93t-92 75zM1838 709q-11 0-22-9-179-157-371.5-236.5t-420.5-79.5-420.5 79.5-371.5 236.5q-11 9-22 9-17 0-92.5-75t-75.5-93q0-13 10-23 187-186 445-288t527-102 527 102 445 288q10 10 10 23 0 18-75.5 93t-92.5 75z\"}]}}),h.register({\"wikipedia-w\":{width:2304,height:1792,paths:[{d:\"M1494 1639l-295-695q-25 49-158.5 305.5t-198.5 389.5q-1 1-27.5 0.5t-26.5-1.5q-82-193-255.5-587t-259.5-596q-21-50-66.5-107.5t-103.5-100.5-102-43q0-5-0.5-24t-0.5-27h583v50q-39 2-79.5 16t-66.5 43-10 64q26 59 216.5 499t235.5 540q31-61 140-266.5t131-247.5q-19-39-126-281t-136-295q-38-69-201-71v-50l513 1v47q-60 2-93.5 25t-12.5 69q33 70 87 189.5t86 187.5q110-214 173-363 24-55-10-79.5t-129-26.5q1-7 1-25v-24q64 0 170.5-0.5t180-1 92.5-0.5v49q-62 2-119 33t-90 81l-213 442q13 33 127.5 290t121.5 274l441-1017q-14-38-49.5-62.5t-65-31.5-55.5-8v-50l460 4 1 2-1 44q-139 4-201 145-526 1216-559 1291h-49z\"}]}}),h.register({\"window-close-o\":{width:1792,height:1792,paths:[{d:\"M1257 1111l-146 146q-10 10-23 10t-23-10l-169-169-169 169q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l169-169-169-169q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l169 169 169-169q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-169 169 169 169q10 10 10 23t-10 23zM256 1408h1280v-1024h-1280v1024zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-close\":{width:1792,height:1792,paths:[{d:\"M1175 1321l146-146q10-10 10-23t-10-23l-233-233 233-233q10-10 10-23t-10-23l-146-146q-10-10-23-10t-23 10l-233 233-233-233q-10-10-23-10t-23 10l-146 146q-10 10-10 23t10 23l233 233-233 233q-10 10-10 23t10 23l146 146q10 10 23 10t23-10l233-233 233 233q10 10 23 10t23-10zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-maximize\":{width:1792,height:1792,paths:[{d:\"M256 1408h1280v-768h-1280v768zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-minimize\":{width:1792,height:1792,paths:[{d:\"M1792 1312v192q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-192q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-restore\":{width:2048,height:1792,paths:[{d:\"M256 1536h768v-512h-768v512zM1280 1024h512v-768h-768v256h96q66 0 113 47t47 113v352zM2048 160v960q0 66-47 113t-113 47h-608v352q0 66-47 113t-113 47h-960q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h608v-352q0-66 47-113t113-47h960q66 0 113 47t47 113z\"}]}}),h.register({windows:{width:1664,height:1792,paths:[{d:\"M682 1006v651l-682-94v-557h682zM682 263v659h-682v-565zM1664 1006v786l-907-125v-661h907zM1664 128v794h-907v-669z\"}]}}),h.register({won:{width:1792,height:1792,paths:[{d:\"M514 1195l81-299h-159l75 300q1 1 1 3t1 3q0-1 0.5-3.5t0.5-3.5zM630 768l35-128h-292l32 128h225zM822 768h139l-35-128h-70zM1271 1196l78-300h-162l81 299q0 1 0.5 3.5t1.5 3.5q0-1 0.5-3t0.5-3zM1382 768l33-128h-297l34 128h230zM1792 800v64q0 14-9 23t-23 9h-213l-164 616q-7 24-31 24h-159q-24 0-31-24l-166-616h-209l-167 616q-7 24-31 24h-159q-11 0-19.5-7t-10.5-17l-160-616h-208q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h175l-33-128h-142q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h109l-89-344q-5-15 5-28 10-12 26-12h137q26 0 31 24l90 360h359l97-360q7-24 31-24h126q24 0 31 24l98 360h365l93-360q5-24 31-24h137q16 0 26 12 10 13 5 28l-91 344h111q14 0 23 9t9 23v64q0 14-9 23t-23 9h-145l-34 128h179q14 0 23 9t9 23z\"}]}}),h.register({wordpress:{width:1792,height:1792,paths:[{d:\"M127 896q0-163 67-313l367 1005q-196-95-315-281t-119-411zM1415 857q0 19-2.5 38.5t-10 49.5-11.5 44-17.5 59-17.5 58l-76 256-278-826q46-3 88-8 19-2 26-18.5t-2.5-31-28.5-13.5l-205 10q-75-1-202-10-12-1-20.5 5t-11.5 15-1.5 18.5 9 16.5 19.5 8l80 8 120 328-168 504-280-832q46-3 88-8 19-2 26-18.5t-2.5-31-28.5-13.5l-205 10q-7 0-23-0.5t-26-0.5q105-160 274.5-253.5t367.5-93.5q147 0 280.5 53t238.5 149h-10q-55 0-92 40.5t-37 95.5q0 12 2 24t4 21.5 8 23 9 21 12 22.5 12.5 21 14.5 24 14 23q63 107 63 212zM909 963l237 647q1 6 5 11-126 44-255 44-112 0-217-32zM1570 527q95 174 95 369 0 209-104 385.5t-279 278.5l235-678q59-169 59-276 0-42-6-79zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 1751q173 0 331.5-68t273-182.5 182.5-273 68-331.5-68-331.5-182.5-273-273-182.5-331.5-68-331.5 68-273 182.5-182.5 273-68 331.5 68 331.5 182.5 273 273 182.5 331.5 68z\"}]}}),h.register({wpbeginner:{width:1792,height:1792,paths:[{d:\"M384 832h160v-224h-160v224zM1221 1164v-92q-104 36-243 38-135 1-259.5-46.5t-220.5-122.5l1 96q88 80 212 128.5t272 47.5q129 0 238-49zM640 832h640v-224h-640v224zM1792 800q0 187-99 352 89 102 89 229 0 157-129.5 268t-313.5 111q-122 0-225-52.5t-161-140.5q-19 1-57 1t-57-1q-58 88-161 140.5t-225 52.5q-184 0-313.5-111t-129.5-268q0-127 89-229-99-165-99-352 0-209 120-385.5t326.5-279.5 449.5-103 449.5 103 326.5 279.5 120 385.5z\"}]}}),h.register({wpexplorer:{width:1792,height:1792,paths:[{d:\"M948 1028l163 329h-51l-175-350-171 350h-49l179-374-78-33 21-49 240 102-21 50zM563 436l304 130-130 304-304-130zM907 621l240 103-103 239-239-102zM1188 771l191 81-82 190-190-81zM1680 896q0-159-62-304t-167.5-250.5-250.5-167.5-304-62-304 62-250.5 167.5-167.5 250.5-62 304 62 304 167.5 250.5 250.5 167.5 304 62 304-62 250.5-167.5 167.5-250.5 62-304zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({wpforms:{width:1536,height:1792,paths:[{d:\"M515 911v128h-252v-128h252zM515 656v127h-252v-127h252zM1273 1167v128h-341v-128h341zM1273 911v128h-672v-128h672zM1273 656v127h-672v-127h672zM1408 1516v-1240q0-8-6-14t-14-6h-32l-378 256-210-171-210 171-378-256h-32q-8 0-14 6t-6 14v1240q0 8 6 14t14 6h1240q8 0 14-6t6-14zM553 406l185-150h-406zM983 406l221-150h-406zM1536 276v1240q0 62-43 105t-105 43h-1240q-62 0-105-43t-43-105v-1240q0-62 43-105t105-43h1240q62 0 105 43t43 105z\"}]}}),h.register({wrench:{width:1664,height:1792,paths:[{d:\"M384 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1028 1052l-682 682q-37 37-90 37-52 0-91-37l-106-108q-38-36-38-90 0-53 38-91l681-681q39 98 114.5 173.5t173.5 114.5zM1662 617q0 39-23 106-47 134-164.5 217.5t-258.5 83.5q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q58 0 121.5 16.5t107.5 46.5q16 11 16 28t-16 28l-293 169v224l193 107q5-3 79-48.5t135.5-81 70.5-35.5q15 0 23.5 10t8.5 25z\"}]}}),h.register({\"xing-square\":{width:1536,height:1792,paths:[{d:\"M685 765q0-1-126-222-21-34-52-34h-184q-18 0-26 11-7 12 1 29l125 216v1l-196 346q-9 14 0 28 8 13 24 13h185q31 0 50-36zM1309 268q-7-12-24-12h-187q-30 0-49 35l-411 729q1 2 262 481 20 35 52 35h184q18 0 25-12 8-13-1-28l-260-476v-1l409-723q8-16 0-28zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({xing:{width:1408,height:1792,paths:[{d:\"M597 667q-10 18-257 456-27 46-65 46h-239q-21 0-31-17t0-36l253-448q1 0 0-1l-161-279q-12-22-1-37 9-15 32-15h239q40 0 66 45zM1403 25q11 16 0 37l-528 934v1l336 615q11 20 1 37-10 15-32 15h-239q-42 0-66-45l-339-622q18-32 531-942 25-45 64-45h241q22 0 31 15z\"}]}}),h.register({\"y-combinator-square\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"y-combinator\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 128v1536h-1536v-1536h1536z\"}]}}),h.register({yahoo:{width:1536,height:1792,paths:[{d:\"M859 957l13 707q-62-11-105-11-41 0-105 11l13-707q-40-69-168.5-295.5t-216.5-374.5-181-287q58 15 108 15 44 0 111-15 63 111 133.5 229.5t167 276.5 138.5 227q37-61 109.5-177.5t117.5-190 105-176 107-189.5q54 14 107 14 56 0 114-14v0q-28 39-60 88.5t-49.5 78.5-56.5 96-49 84q-146 248-353 610z\"}]}}),h.register({\"yc-square\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({yc:{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 128v1536h-1536v-1536h1536z\"}]}}),h.register({yelp:{width:1536,height:1792,paths:[{d:\"M773 1319v127q-1 292-6 305-12 32-51 40-54 9-181.5-38t-162.5-89q-13-15-17-36-1-12 4-26 4-10 34-47t181-216q1 0 60-70 15-19 39.5-24.5t49.5 3.5q24 10 37.5 29t12.5 42zM624 1068q-3 55-52 70l-120 39q-275 88-292 88-35-2-54-36-12-25-17-75-8-76 1-166.5t30-124.5 56-32q13 0 202 77 71 29 115 47l84 34q23 9 35.5 30.5t11.5 48.5zM1450 1365q-7 54-91.5 161t-135.5 127q-37 14-63-7-14-10-184-287l-47-77q-14-21-11.5-46t19.5-46q35-43 83-26 1 1 119 40 203 66 242 79.5t47 20.5q28 22 22 61zM778 733q5 102-54 122-58 17-114-71l-378-598q-8-35 19-62 41-43 207.5-89.5t224.5-31.5q40 10 49 45 3 18 22 305.5t24 379.5zM1440 841q3 39-26 59-15 10-329 86-67 15-91 23l1-2q-23 6-46-4t-37-32q-30-47 0-87 1-1 75-102 125-171 150-204t34-39q28-19 65-2 48 23 123 133.5t81 167.5v3z\"}]}}),h.register({yen:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({yoast:{width:1664,height:1792,paths:[{d:\"M339 218h691l-26 72h-665q-110 0-188.5 79t-78.5 189v771q0 95 60.5 169.5t153.5 93.5q23 5 98 5v72h-45q-140 0-239.5-100t-99.5-240v-771q0-140 99.5-240t239.5-100zM1190 0h247l-482 1294q-23 61-40.5 103.5t-45 98-54 93.5-64.5 78.5-79.5 65-95.5 41-116 18.5v-195q163-26 220-182 20-52 20-105 0-54-20-106l-285-733h228l187 585zM1664 558v1111h-795q37-55 45-73h678v-1038q0-85-49.5-155t-129.5-99l25-67q101 34 163.5 123.5t62.5 197.5z\"}]}}),h.register({\"youtube-play\":{width:1792,height:1792,paths:[{d:\"M711 1128l484-250-484-253v503zM896 266q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v40 136q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-40-136q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z\"}]}}),h.register({\"youtube-square\":{width:1536,height:1792,paths:[{d:\"M919 1303v-157q0-50-29-50-17 0-33 16v224q16 16 33 16 29 0 29-49zM1103 1181h66v-34q0-51-33-51t-33 51v34zM532 915v70h-80v423h-74v-423h-78v-70h232zM733 1041v367h-67v-40q-39 45-76 45-33 0-42-28-6-17-6-54v-290h66v270q0 24 1 26 1 15 15 15 20 0 42-31v-280h67zM985 1152v146q0 52-7 73-12 42-53 42-35 0-68-41v36h-67v-493h67v161q32-40 68-40 41 0 53 42 7 21 7 74zM1236 1281v9q0 29-2 43-3 22-15 40-27 40-80 40-52 0-81-38-21-27-21-86v-129q0-59 20-86 29-38 80-38t78 38q21 29 21 86v76h-133v65q0 51 34 51 24 0 30-26 0-1 0.5-7t0.5-16.5v-21.5h68zM785 457v156q0 51-32 51t-32-51v-156q0-52 32-52t32 52zM1318 1170q0-177-19-260-10-44-43-73.5t-76-34.5q-136-15-412-15-275 0-411 15-44 5-76.5 34.5t-42.5 73.5q-20 87-20 260 0 176 20 260 10 43 42.5 73t75.5 35q137 15 412 15t412-15q43-5 75.5-35t42.5-73q20-84 20-260zM563 519l90-296h-75l-51 195-53-195h-78q7 23 23 69l24 69q35 103 46 158v201h74v-201zM852 600v-130q0-58-21-87-29-38-78-38-51 0-78 38-21 29-21 87v130q0 58 21 87 27 38 78 38 49 0 78-38 21-27 21-87zM1033 720h67v-370h-67v283q-22 31-42 31-15 0-16-16-1-2-1-26v-272h-67v293q0 37 6 55 11 27 43 27 36 0 77-45v40zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({youtube:{width:1536,height:1792,paths:[{d:\"M971 1244v211q0 67-39 67-23 0-45-22v-301q22-22 45-22 39 0 39 67zM1309 1245v46h-90v-46q0-68 45-68t45 68zM343 1027h107v-94h-312v94h105v569h100v-569zM631 1596h89v-494h-89v378q-30 42-57 42-18 0-21-21-1-3-1-35v-364h-89v391q0 49 8 73 12 37 58 37 48 0 102-61v54zM1060 1448v-197q0-73-9-99-17-56-71-56-50 0-93 54v-217h-89v663h89v-48q45 55 93 55 54 0 71-55 9-27 9-100zM1398 1438v-13h-91q0 51-2 61-7 36-40 36-46 0-46-69v-87h179v-103q0-79-27-116-39-51-106-51-68 0-107 51-28 37-28 116v173q0 79 29 116 39 51 108 51 72 0 108-53 18-27 21-54 2-9 2-58zM790 525v-210q0-69-43-69t-43 69v210q0 70 43 70t43-70zM1509 1276q0 234-26 350-14 59-58 99t-102 46q-184 21-555 21t-555-21q-58-6-102.5-46t-57.5-99q-26-112-26-350 0-234 26-350 14-59 58-99t103-47q183-20 554-20t555 20q58 7 102.5 47t57.5 99q26 112 26 350zM511 0h102l-121 399v271h-100v-271q-14-74-61-212-37-103-65-187h106l71 263zM881 333v175q0 81-28 118-38 51-106 51-67 0-105-51-28-38-28-118v-175q0-80 28-117 38-51 105-51 68 0 106 51 28 37 28 117zM1216 171v499h-91v-55q-53 62-103 62-46 0-59-37-8-24-8-75v-394h91v367q0 33 1 35 3 22 21 22 27 0 57-43v-381h91z\"}]}}),h});\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 77:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n\n/***/ 78:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(75)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.dc8da95990592d91153b.js","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 1","/*!\n * Vue.js v2.4.1\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (process.env.NODE_ENV !== 'production' && !hasOwn(result, key)) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // keep listeners\n  var listeners = data.on;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.1';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  var isComponentRoot = isDef(vnode.componentOptions);\n  var oldOn = isComponentRoot ? oldVnode.data.nativeOn : oldVnode.data.on;\n  var on = isComponentRoot ? vnode.data.nativeOn : vnode.data.on;\n  if (isUndef(oldOn) && isUndef(on)) {\n    return\n  }\n  on = on || {};\n  oldOn = oldOn || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      if (shouldIgnoreFirstNewline(lastTag, html)) {\n        advance(1);\n      }\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (!el.component && (\n          isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e('\" + (comment.text) + \"')\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 1\n// module chunks = 1","!function(t,q){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=q(require(\"vue\")):\"function\"==typeof define&&define.amd?define([\"vue\"],q):t.VueAwesome=q(t.Vue)}(this,function(t){\"use strict\";t=\"default\"in t?t.default:t,function(){if(document){var t=document.head||document.getElementsByTagName(\"head\")[0],q=document.createElement(\"style\"),h=\" .fa-icon { display: inline-block; fill: currentColor; } .fa-flip-horizontal { transform: scale(-1, 1); } .fa-flip-vertical { transform: scale(1, -1); } .fa-spin { animation: fa-spin 1s 0s infinite linear; } .fa-inverse { color: #fff; } @keyframes fa-spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } \";q.type=\"text/css\",q.styleSheet?q.styleSheet.cssText=h:q.appendChild(document.createTextNode(h)),t.appendChild(q)}}();var q={},h={render:function(){var t=this,q=t.$createElement,h=t._self._c||q;return h(\"svg\",{class:t.clazz,style:t.style,attrs:{version:\"1.1\",role:t.label?\"img\":\"presentation\",\"aria-label\":t.label,x:t.x,y:t.y,width:t.width,height:t.height,viewBox:t.box}},[t._t(\"default\",[t.icon&&t.icon.paths?t._l(t.icon.paths,function(q){return h(\"path\",t._b({},\"path\",q))}):t._e(),t.icon&&t.icon.polygons?t._l(t.icon.polygons,function(q){return h(\"polygon\",t._b({},\"polygon\",q))}):t._e(),t._v(\"\\b\"),t.icon&&t.icon.raw?[h(\"g\",{domProps:{innerHTML:t._s(t.icon.raw)}})]:t._e()])],2)},staticRenderFns:[],name:\"icon\",props:{name:{type:String,validator:function(h){return h?h in q||(t.util.warn('Invalid prop: prop \"icon\" is referring to an unregistered icon \"'+h+'\".\\nPlesase make sure you have imported this icon before using it.',this),!1):null}},scale:[Number,String],spin:Boolean,inverse:Boolean,flip:{validator:function(t){return\"horizontal\"===t||\"vertical\"===t}},label:String},data:function(){return{x:!1,y:!1,childrenWidth:0,childrenHeight:0,outerScale:1}},computed:{normalizedScale:function(){var q=this.scale;return q=void 0===q?1:Number(q),isNaN(q)||q<=0?(t.util.warn('Invalid prop: prop \"scale\" should be a number over 0.',this),this.outerScale):q*this.outerScale},clazz:function(){return{\"fa-icon\":!0,\"fa-spin\":this.spin,\"fa-flip-horizontal\":\"horizontal\"===this.flip,\"fa-flip-vertical\":\"vertical\"===this.flip,\"fa-inverse\":this.inverse}},icon:function(){return this.name?q[this.name]:null},box:function(){return this.icon?\"0 0 \"+this.icon.width+\" \"+this.icon.height:\"0 0 \"+this.width+\" \"+this.height},ratio:function(){if(!this.icon)return 1;var t=this.icon,q=t.width,h=t.height;return Math.max(q,h)/16},width:function(){return this.childrenWidth||this.icon&&this.icon.width/this.ratio*this.normalizedScale||0},height:function(){return this.childrenHeight||this.icon&&this.icon.height/this.ratio*this.normalizedScale||0},style:function(){return 1!==this.normalizedScale&&{fontSize:this.normalizedScale+\"em\"}}},mounted:function(){var t=this;if(!this.icon){this.$children.forEach(function(q){q.outerScale=t.normalizedScale});var q=0,h=0;this.$children.forEach(function(t){q=Math.max(q,t.width),h=Math.max(h,t.height)}),this.childrenWidth=q,this.childrenHeight=h,this.$children.forEach(function(t){t.x=(q-t.width)/2,t.y=(h-t.height)/2})}},register:function(t){for(var h in t){var v=t[h];v.paths||(v.paths=[]),v.d&&v.paths.push({d:v.d}),v.polygons||(v.polygons=[]),v.points&&v.polygons.push({points:v.points}),q[h]=v}},icons:q};return h.register({\"500px\":{width:1536,height:1792,paths:[{d:\"M1401 1547l-6 6q-113 113-259 175-154 64-317 64-165 0-317-64-148-63-259-175-113-112-175-258-42-103-54-189-4-28 48-36 51-8 56 20 1 1 1 4 18 90 46 159 50 124 152 226 98 98 226 152 132 56 276 56 143 0 276-56 128-55 225-152l6-6q10-10 25-6 12 3 33 22 36 37 17 58zM929 932l-66 66 63 63q21 21-7 49-17 17-32 17-10 0-19-10l-62-61-66 66q-5 5-15 5-15 0-31-16l-2-2q-18-15-18-29 0-7 8-17l66-65-66-66q-16-16 14-45 18-18 31-18 6 0 13 5l65 66 65-65q18-17 48 13 27 27 11 44zM1400 989q0 118-46 228-45 105-126 186-80 80-187 126t-228 46-228-46-187-126q-82-82-125-186-15-33-15-40h-1q-9-27 43-44 50-16 60 12 37 99 97 167h1v-339-2q3-136 102-232 105-103 253-103 147 0 251 103t104 249q0 147-104.5 251t-250.5 104q-58 0-112-16-28-11-13-61 16-51 44-43l14 3q14 3 33 6t30 3q104 0 176-71.5t72-174.5q0-101-72-171-71-71-175-71-107 0-178 80-64 72-64 160v413q110 67 242 67 96 0 185-36.5t156-103.5 103.5-155 36.5-183q0-198-141-339-140-140-339-140-200 0-340 140-53 53-77 87l-2 2q-8 11-13 15.5t-21.5 9.5-38.5-3q-21-5-36.5-16.5t-15.5-26.5v-680q0-15 10.5-26.5t27.5-11.5h877q30 0 30 55t-30 55h-811v483h1q40-42 102-84t108-61q109-46 231-46 121 0 228 46t187 126q81 81 126 186 46 112 46 229zM1369 408q9 8 9 18t-5.5 18-16.5 21q-26 26-39 26-9 0-16-7-106-91-207-133-128-56-276-56-133 0-262 49-27 10-45-37-9-25-8-38 3-16 16-20 130-57 299-57 164 0 316 64 137 58 235 152z\"}]}}),h.register({\"address-book-o\":{width:1664,height:1792,paths:[{d:\"M1028 644q0 107-76.5 183t-183.5 76-183.5-76-76.5-183q0-108 76.5-184t183.5-76 183.5 76 76.5 184zM980 864q46 0 82.5 17t60 47.5 39.5 67 24 81 11.5 82.5 3.5 79q0 67-39.5 118.5t-105.5 51.5h-576q-66 0-105.5-51.5t-39.5-118.5q0-48 4.5-93.5t18.5-98.5 36.5-91.5 63-64.5 93.5-26h5q7 4 32 19.5t35.5 21 33 17 37 16 35 9 39.5 4.5 39.5-4.5 35-9 37-16 33-17 35.5-21 32-19.5zM1664 608q0 13-9.5 22.5t-22.5 9.5h-96v128h96q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-96v128h96q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-96v224q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h1216q66 0 113 47t47 113v224h96q13 0 22.5 9.5t9.5 22.5v192zM1408 1632v-1472q0-13-9.5-22.5t-22.5-9.5h-1216q-13 0-22.5 9.5t-9.5 22.5v1472q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5-9.5t9.5-22.5z\"}]}}),h.register({\"address-book\":{width:1664,height:1792,paths:[{d:\"M1201 1238q0-57-5.5-107t-21-100.5-39.5-86-64-58-91-22.5q-6 4-33.5 20.5t-42.5 24.5-40.5 20-49 17-46.5 5-46.5-5-49-17-40.5-20-42.5-24.5-33.5-20.5q-51 0-91 22.5t-64 58-39.5 86-21 100.5-5.5 107q0 73 42 121.5t103 48.5h576q61 0 103-48.5t42-121.5zM1028 644q0-108-76.5-184t-183.5-76-183.5 76-76.5 184q0 107 76.5 183t183.5 76 183.5-76 76.5-183zM1664 1184v192q0 14-9 23t-23 9h-96v224q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h1216q66 0 113 47t47 113v224h96q14 0 23 9t9 23v192q0 14-9 23t-23 9h-96v128h96q14 0 23 9t9 23v192q0 14-9 23t-23 9h-96v128h96q14 0 23 9t9 23z\"}]}}),h.register({\"address-card-o\":{width:2048,height:1792,paths:[{d:\"M1024 1131q0 64-37 106.5t-91 42.5h-512q-54 0-91-42.5t-37-106.5 9-117.5 29.5-103 60.5-78 97-28.5q6 4 30 18t37.5 21.5 35.5 17.5 43 14.5 42 4.5 42-4.5 43-14.5 35.5-17.5 37.5-21.5 30-18q57 0 97 28.5t60.5 78 29.5 103 9 117.5zM867 611q0 94-66.5 160.5t-160.5 66.5-160.5-66.5-66.5-160.5 66.5-160.5 160.5-66.5 160.5 66.5 66.5 160.5zM1792 1056v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1792 804v56q0 15-10.5 25.5t-25.5 10.5h-568q-15 0-25.5-10.5t-10.5-25.5v-56q0-15 10.5-25.5t25.5-10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 544v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1920 1504v-1216q0-13-9.5-22.5t-22.5-9.5h-1728q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h352v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h768v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h352q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"address-card\":{width:2048,height:1792,paths:[{d:\"M1024 1131q0-64-9-117.5t-29.5-103-60.5-78-97-28.5q-6 4-30 18t-37.5 21.5-35.5 17.5-43 14.5-42 4.5-42-4.5-43-14.5-35.5-17.5-37.5-21.5-30-18q-57 0-97 28.5t-60.5 78-29.5 103-9 117.5 37 106.5 91 42.5h512q54 0 91-42.5t37-106.5zM867 611q0-94-66.5-160.5t-160.5-66.5-160.5 66.5-66.5 160.5 66.5 160.5 160.5 66.5 160.5-66.5 66.5-160.5zM1792 1120v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM1792 860v-56q0-15-10.5-25.5t-25.5-10.5h-568q-15 0-25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5-10.5t10.5-25.5zM1792 608v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM2048 288v1216q0 66-47 113t-113 47h-352v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-768v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-352q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({adjust:{width:1536,height:1792,paths:[{d:\"M768 1440v-1088q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({adn:{width:1536,height:1792,paths:[{d:\"M768 622l201 306h-402zM1133 1152h94l-459-691-459 691h94l104-160h522zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"align-center\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1408 960v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zM1664 576v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1280 192v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z\"}]}}),h.register({\"align-justify\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 960v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 576v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 192v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z\"}]}}),h.register({\"align-left\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1408 960v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zM1664 576v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zM1280 192v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({\"align-right\":{width:1792,height:1792,paths:[{d:\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 960v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zM1792 576v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zM1792 192v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({amazon:{width:1792,height:1792,paths:[{d:\"M1551 1476q15-6 26-3t11 17.5-15 33.5q-13 16-44 43.5t-95.5 68-141 74-188 58-229.5 24.5q-119 0-238-31t-209-76.5-172.5-104-132.5-105-84-87.5q-8-9-10-16.5t1-12 8-7 11.5-2 11.5 4.5q192 117 300 166 389 176 799 90 190-40 391-135zM1758 1361q11 16 2.5 69.5t-28.5 102.5q-34 83-85 124-17 14-26 9t0-24q21-45 44.5-121.5t6.5-98.5q-5-7-15.5-11.5t-27-6-29.5-2.5-35 0-31.5 2-31 3-22.5 2q-6 1-13 1.5t-11 1-8.5 1-7 0.5h-5.5-4.5t-3-0.5-2-1.5l-1.5-3q-6-16 47-40t103-30q46-7 108-1t76 24zM1364 918q0 31 13.5 64t32 58 37.5 46 33 32l13 11-227 224q-40-37-79-75.5t-58-58.5l-19-20q-11-11-25-33-38 59-97.5 102.5t-127.5 63.5-140 23-137.5-21-117.5-65.5-83-113-31-162.5q0-84 28-154t72-116.5 106.5-83 122.5-57 130-34.5 119.5-18.5 99.5-6.5v-127q0-65-21-97-34-53-121-53-6 0-16.5 1t-40.5 12-56 29.5-56 59.5-48 96l-294-27q0-60 22-119t67-113 108-95 151.5-65.5 190.5-24.5q100 0 181 25t129.5 61.5 81 83 45 86 12.5 73.5v589zM692 939q0 86 70 133 66 44 139 22 84-25 114-123 14-45 14-101v-162q-59 2-111 12t-106.5 33.5-87 71-32.5 114.5z\"}]}}),h.register({ambulance:{width:1920,height:1792,paths:[{d:\"M640 1408q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM256 896h384v-256h-158q-14 2-22 9l-195 195q-7 12-9 22v30zM1536 1408q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 736v-192q0-14-9-23t-23-9h-224v-224q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v224h-224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23-9t9-23v-224h224q14 0 23-9t9-23zM1920 192v1152q0 26-19 45t-45 19h-192q0 106-75 181t-181 75-181-75-75-181h-384q0 106-75 181t-181 75-181-75-75-181h-128q-26 0-45-19t-19-45 19-45 45-19v-416q0-26 13-58t32-51l198-198q19-19 51-32t58-13h160v-320q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({\"american-sign-language-interpreting\":{width:2304,height:1792,paths:[{d:\"M1032 960q-59-2-84-55-17-34-48-53.5t-68-19.5q-53 0-90.5 37.5t-37.5 90.5q0 56 36 89l10 8q34 31 82 31 37 0 68-19.5t48-53.5q25-53 84-55zM1600 832q0-56-36-89l-10-8q-34-31-82-31-37 0-68 19.5t-48 53.5q-25 53-84 55 59 2 84 55 17 34 48 53.5t68 19.5q53 0 90.5-37.5t37.5-90.5zM1174 611q-17 35-55 48t-73-4q-62-31-134-31-51 0-99 17 3 0 9.5-0.5t9.5-0.5q92 0 170.5 50t118.5 133q17 36 3.5 73.5t-49.5 54.5q-18 9-39 9 21 0 39 9 36 17 49.5 54.5t-3.5 73.5q-40 83-118.5 133t-170.5 50h-6q-16-2-44-4l-290-27-239 120q-14 7-29 7-40 0-57-35l-160-320q-11-23-4-47.5t29-37.5l209-119 148-267q17-155 91.5-291.5t195.5-236.5q31-25 70.5-21.5t64.5 34.5 21.5 70-34.5 65q-70 59-117 128 123-84 267-101 40-5 71.5 19t35.5 64q5 40-19 71.5t-64 35.5q-84 10-159 55 46-10 99-10 115 0 218 50 36 18 49 55.5t-5 73.5zM2137 451l160 320q11 23 4 47.5t-29 37.5l-209 119-148 267q-17 155-91.5 291.5t-195.5 236.5q-26 22-61 22-45 0-74-35-25-31-21.5-70t34.5-65q70-59 117-128-123 84-267 101-4 1-12 1-36 0-63.5-24t-31.5-60q-5-40 19-71.5t64-35.5q84-10 159-55-46 10-99 10-115 0-218-50-36-18-49-55.5t5-73.5q17-35 55-48t73 4q62 31 134 31 51 0 99-17-3 0-9.5 0.5t-9.5 0.5q-92 0-170.5-50t-118.5-133q-17-36-3.5-73.5t49.5-54.5q18-9 39-9-21 0-39-9-36-17-49.5-54.5t3.5-73.5q40-83 118.5-133t170.5-50h6 1q14 2 42 4l291 27 239-120q14-7 29-7 40 0 57 35z\"}]}}),h.register({anchor:{width:1792,height:1792,paths:[{d:\"M960 256q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1792 1184v352q0 22-20 30-8 2-12 2-12 0-23-9l-93-93q-119 143-318.5 226.5t-429.5 83.5-429.5-83.5-318.5-226.5l-93 93q-9 9-23 9-4 0-12-2-20-8-20-30v-352q0-14 9-23t23-9h352q22 0 30 20 8 19-7 35l-100 100q67 91 189.5 153.5t271.5 82.5v-647h-192q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h192v-163q-58-34-93-92.5t-35-128.5q0-106 75-181t181-75 181 75 75 181q0 70-35 128.5t-93 92.5v163h192q26 0 45 19t19 45v128q0 26-19 45t-45 19h-192v647q149-20 271.5-82.5t189.5-153.5l-100-100q-15-16-7-35 8-20 30-20h352q14 0 23 9t9 23z\"}]}}),h.register({android:{width:1408,height:1792,paths:[{d:\"M493 483q16 0 27.5-11.5t11.5-27.5-11.5-27.5-27.5-11.5-27 11.5-11 27.5 11 27.5 27 11.5zM915 483q16 0 27-11.5t11-27.5-11-27.5-27-11.5-27.5 11.5-11.5 27.5 11.5 27.5 27.5 11.5zM103 667q42 0 72 30t30 72v430q0 43-29.5 73t-72.5 30-73-30-30-73v-430q0-42 30-72t73-30zM1163 686v666q0 46-32 78t-77 32h-75v227q0 43-30 73t-73 30-73-30-30-73v-227h-138v227q0 43-30 73t-73 30q-42 0-72-30t-30-73l-1-227h-74q-46 0-78-32t-32-78v-666h918zM931 281q107 55 171 153.5t64 215.5h-925q0-117 64-215.5t172-153.5l-71-131q-7-13 5-20 13-6 20 6l72 132q95-42 201-42t201 42l72-132q7-12 20-6 12 7 5 20zM1408 769v430q0 43-30 73t-73 30q-42 0-72-30t-30-73v-430q0-43 30-72.5t72-29.5q43 0 73 29.5t30 72.5z\"}]}}),h.register({angellist:{width:1280,height:1792,paths:[{d:\"M953 378l-114 328 117 21q165-451 165-518 0-56-38-56-57 0-130 225zM654 1065l33 88q37-42 71-67l-33-5.5t-38.5-7-32.5-8.5zM362 169q0 98 159 521 17-10 49-10 15 0 75 5l-121-351q-75-220-123-220-19 0-29 17.5t-10 37.5zM283 928q0 36 51.5 119t117.5 153 100 70q14 0 25.5-13t11.5-27q0-24-32-102-13-32-32-72t-47.5-89-61.5-81-62-32q-20 0-45.5 27t-25.5 47zM125 1263q0 41 25 104 59 145 183.5 227t281.5 82q227 0 382-170 152-169 152-427 0-43-1-67t-11.5-62-30.5-56q-56-49-211.5-75.5t-270.5-26.5q-37 0-49 11-12 5-12 35 0 34 21.5 60t55.5 40 77.5 23.5 87.5 11.5 85 4 70 0h23q24 0 40 19 15 19 19 55-28 28-96 54-61 22-93 46-64 46-108.5 114t-44.5 137q0 31 18.5 88.5t18.5 87.5l-3 12q-4 12-4 14-137-10-146-216-8 2-41 2 2 7 2 21 0 53-40.5 89.5t-94.5 36.5q-82 0-166.5-78t-84.5-159q0-34 33-67 52 64 60 76 77 104 133 104 12 0 26.5-8.5t14.5-20.5q0-34-87.5-145t-116.5-111q-43 0-70 44.5t-27 90.5zM11 1272q0-101 42.5-163t136.5-88q-28-74-28-104 0-62 61-123t122-61q29 0 70 15-163-462-163-567 0-80 41-130.5t119-50.5q131 0 325 581 6 17 8 23 6-16 29-79.5t43.5-118.5 54-127.5 64.5-123 70.5-86.5 76.5-36q71 0 112 49t41 122q0 108-159 550 61 15 100.5 46t58.5 78 26 93.5 7 110.5q0 150-47 280t-132 225-211 150-278 55q-111 0-223-42-149-57-258-191.5t-109-286.5z\"}]}}),h.register({\"angle-double-down\":{width:1152,height:1792,paths:[{d:\"M1075 864q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23zM1075 480q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z\"}]}}),h.register({\"angle-double-left\":{width:1024,height:1792,paths:[{d:\"M627 1376q0 13-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23zM1011 1376q0 13-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23z\"}]}}),h.register({\"angle-double-right\":{width:1024,height:1792,paths:[{d:\"M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23zM979 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({\"angle-double-up\":{width:1152,height:1792,paths:[{d:\"M1075 1312q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23zM1075 928q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({\"angle-down\":{width:1152,height:1792,paths:[{d:\"M1075 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z\"}]}}),h.register({\"angle-left\":{width:640,height:1792,paths:[{d:\"M627 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z\"}]}}),h.register({\"angle-right\":{width:640,height:1792,paths:[{d:\"M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({\"angle-up\":{width:1152,height:1792,paths:[{d:\"M1075 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z\"}]}}),h.register({apple:{width:1408,height:1792,paths:[{d:\"M1393 1215q-39 125-123 250-129 196-257 196-49 0-140-32-86-32-151-32-61 0-142 33-81 34-132 34-152 0-301-259-147-261-147-503 0-228 113-374 113-144 284-144 72 0 177 30 104 30 138 30 45 0 143-34 102-34 173-34 119 0 213 65 52 36 104 100-79 67-114 118-65 94-65 207 0 124 69 223t158 126zM1017 42q0 61-29 136-30 75-93 138-54 54-108 72-37 11-104 17 3-149 78-257 74-107 250-148 1 3 2.5 11t2.5 11q0 4 0.5 10t0.5 10z\"}]}}),h.register({archive:{width:1792,height:1792,paths:[{d:\"M1088 832q0-26-19-45t-45-19h-256q-26 0-45 19t-19 45 19 45 45 19h256q26 0 45-19t19-45zM1664 640v960q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-960q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1728 192v256q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1536q26 0 45 19t19 45z\"}]}}),h.register({\"area-chart\":{width:2048,height:1792,paths:[{d:\"M2048 1536v128h-2048v-1536h128v1408h1920zM1664 512l256 896h-1664v-576l448-576 576 576z\"}]}}),h.register({\"arrow-circle-down\":{width:1536,height:1792,paths:[{d:\"M1284 897q0-27-18-45l-91-91q-18-18-45-18t-45 18l-189 189v-502q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v502l-189-189q-19-19-45-19t-45 19l-91 91q-18 18-18 45t18 45l362 362 91 91q18 18 45 18t45-18l91-91 362-362q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-left\":{width:1536,height:1792,paths:[{d:\"M1280 960v-128q0-26-19-45t-45-19h-502l189-189q19-19 19-45t-19-45l-91-91q-18-18-45-18t-45 18l-362 362-91 91q-18 18-18 45t18 45l91 91 362 362q18 18 45 18t45-18l91-91q18-18 18-45t-18-45l-189-189h502q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-down\":{width:1536,height:1792,paths:[{d:\"M1120 928q0 12-10 24l-319 319q-11 9-23 9t-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-352q0-14 9-23t23-9h192q14 0 23 9t9 23v352h192q14 0 23 9t9 23zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-left\":{width:1536,height:1792,paths:[{d:\"M1152 800v192q0 13-9.5 22.5t-22.5 9.5h-352v192q0 14-9 23t-23 9q-12 0-24-10l-319-319q-9-9-9-23t9-23l320-320q9-9 23-9 13 0 22.5 9.5t9.5 22.5v192h352q13 0 22.5 9.5t9.5 22.5zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-right\":{width:1536,height:1792,paths:[{d:\"M1152 896q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-o-up\":{width:1536,height:1792,paths:[{d:\"M1118 876q-8 20-30 20h-192v352q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-352h-192q-14 0-23-9t-9-23q0-12 10-24l319-319q11-9 23-9t23 9l320 320q15 16 7 35zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-right\":{width:1536,height:1792,paths:[{d:\"M1285 896q0-27-18-45l-91-91-362-362q-18-18-45-18t-45 18l-91 91q-18 18-18 45t18 45l189 189h-502q-26 0-45 19t-19 45v128q0 26 19 45t45 19h502l-189 189q-19 19-19 45t19 45l91 91q18 18 45 18t45-18l362-362 91-91q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-circle-up\":{width:1536,height:1792,paths:[{d:\"M1284 895q0-27-18-45l-362-362-91-91q-18-18-45-18t-45 18l-91 91-362 362q-18 18-18 45t18 45l91 91q18 18 45 18t45-18l189-189v502q0 26 19 45t45 19h128q26 0 45-19t19-45v-502l189 189q19 19 45 19t45-19l91-91q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"arrow-down\":{width:1664,height:1792,paths:[{d:\"M1611 832q0 53-37 90l-651 652q-39 37-91 37-53 0-90-37l-651-652q-38-36-38-90 0-53 38-91l74-75q39-37 91-37 53 0 90 37l294 294v-704q0-52 38-90t90-38h128q52 0 90 38t38 90v704l294-294q37-37 90-37 52 0 91 37l75 75q37 39 37 91z\"}]}}),h.register({\"arrow-left\":{width:1536,height:1792,paths:[{d:\"M1536 896v128q0 53-32.5 90.5t-84.5 37.5h-704l293 294q38 36 38 90t-38 90l-75 76q-37 37-90 37-52 0-91-37l-651-652q-37-37-37-90 0-52 37-91l651-650q38-38 91-38 52 0 90 38l75 74q38 38 38 91t-38 91l-293 293h704q52 0 84.5 37.5t32.5 90.5z\"}]}}),h.register({\"arrow-right\":{width:1536,height:1792,paths:[{d:\"M1472 960q0 54-37 91l-651 651q-39 37-91 37-51 0-90-37l-75-75q-38-38-38-91t38-91l293-293h-704q-52 0-84.5-37.5t-32.5-90.5v-128q0-53 32.5-90.5t84.5-37.5h704l-293-294q-38-36-38-90t38-90l75-75q38-38 90-38 53 0 91 38l651 651q37 35 37 90z\"}]}}),h.register({\"arrow-up\":{width:1664,height:1792,paths:[{d:\"M1611 971q0 51-37 90l-75 75q-38 38-91 38-54 0-90-38l-294-293v704q0 52-37.5 84.5t-90.5 32.5h-128q-53 0-90.5-32.5t-37.5-84.5v-704l-294 293q-36 38-90 38t-90-38l-75-75q-38-38-38-90 0-53 38-91l651-651q35-37 90-37 54 0 91 37l651 651q37 39 37 91z\"}]}}),h.register({\"arrows-alt\":{width:1536,height:1792,paths:[{d:\"M1283 541l-355 355 355 355 144-144q29-31 70-14 39 17 39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355 355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12 0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144 144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19 45v448q0 42-39 59-13 5-25 5-26 0-45-19z\"}]}}),h.register({\"arrows-h\":{width:1792,height:1792,paths:[{d:\"M1792 896q0 26-19 45l-256 256q-19 19-45 19t-45-19-19-45v-128h-1024v128q0 26-19 45t-45 19-45-19l-256-256q-19-19-19-45t19-45l256-256q19-19 45-19t45 19 19 45v128h1024v-128q0-26 19-45t45-19 45 19l256 256q19 19 19 45z\"}]}}),h.register({\"arrows-v\":{width:768,height:1792,paths:[{d:\"M704 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\"}]}}),h.register({arrows:{width:1792,height:1792,paths:[{d:\"M1792 896q0 26-19 45l-256 256q-19 19-45 19t-45-19-19-45v-128h-384v384h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-384h-384v128q0 26-19 45t-45 19-45-19l-256-256q-19-19-19-45t19-45l256-256q19-19 45-19t45 19 19 45v128h384v-384h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45t-19 45-45 19h-128v384h384v-128q0-26 19-45t45-19 45 19l256 256q19 19 19 45z\"}]}}),h.register({\"asl-interpreting\":{width:2304,height:1792,paths:[{d:\"M1032 960q-59-2-84-55-17-34-48-53.5t-68-19.5q-53 0-90.5 37.5t-37.5 90.5q0 56 36 89l10 8q34 31 82 31 37 0 68-19.5t48-53.5q25-53 84-55zM1600 832q0-56-36-89l-10-8q-34-31-82-31-37 0-68 19.5t-48 53.5q-25 53-84 55 59 2 84 55 17 34 48 53.5t68 19.5q53 0 90.5-37.5t37.5-90.5zM1174 611q-17 35-55 48t-73-4q-62-31-134-31-51 0-99 17 3 0 9.5-0.5t9.5-0.5q92 0 170.5 50t118.5 133q17 36 3.5 73.5t-49.5 54.5q-18 9-39 9 21 0 39 9 36 17 49.5 54.5t-3.5 73.5q-40 83-118.5 133t-170.5 50h-6q-16-2-44-4l-290-27-239 120q-14 7-29 7-40 0-57-35l-160-320q-11-23-4-47.5t29-37.5l209-119 148-267q17-155 91.5-291.5t195.5-236.5q31-25 70.5-21.5t64.5 34.5 21.5 70-34.5 65q-70 59-117 128 123-84 267-101 40-5 71.5 19t35.5 64q5 40-19 71.5t-64 35.5q-84 10-159 55 46-10 99-10 115 0 218 50 36 18 49 55.5t-5 73.5zM2137 451l160 320q11 23 4 47.5t-29 37.5l-209 119-148 267q-17 155-91.5 291.5t-195.5 236.5q-26 22-61 22-45 0-74-35-25-31-21.5-70t34.5-65q70-59 117-128-123 84-267 101-4 1-12 1-36 0-63.5-24t-31.5-60q-5-40 19-71.5t64-35.5q84-10 159-55-46 10-99 10-115 0-218-50-36-18-49-55.5t5-73.5q17-35 55-48t73 4q62 31 134 31 51 0 99-17-3 0-9.5 0.5t-9.5 0.5q-92 0-170.5-50t-118.5-133q-17-36-3.5-73.5t49.5-54.5q18-9 39-9-21 0-39-9-36-17-49.5-54.5t3.5-73.5q40-83 118.5-133t170.5-50h6 1q14 2 42 4l291 27 239-120q14-7 29-7 40 0 57 35z\"}]}}),h.register({\"assistive-listening-systems\":{width:1792,height:1792,paths:[{d:\"M128 1728q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM320 1536q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM365 1171l256 256-90 90-256-256zM704 1152q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1411 832q0 59-11.5 108.5t-37.5 93.5-44 67.5-53 64.5q-31 35-45.5 54t-33.5 50-26.5 64-7.5 74q0 159-112.5 271.5t-271.5 112.5q-26 0-45-19t-19-45 19-45 45-19q106 0 181-75t75-181q0-57 11.5-105.5t37-91 43.5-66.5 52-63q40-46 59.5-72t37.5-74.5 18-103.5q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5q0 26-19 45t-45 19-45-19-19-45q0-117 45.5-223.5t123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5zM896 960q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1184 832q0 26-19 45t-45 19-45-19-19-45q0-93-65.5-158.5t-158.5-65.5q-92 0-158 65.5t-66 158.5q0 26-19 45t-45 19-45-19-19-45q0-146 103-249t249-103 249 103 103 249zM1578 543q10 25-1 49t-36 34q-9 4-23 4-19 0-35.5-11t-23.5-30q-68-178-224-295-21-16-25-42t12-47q17-21 43-25t47 12q183 137 266 351zM1788 462q9 25-1.5 49t-35.5 34q-11 4-23 4-44 0-60-41-92-238-297-393-22-16-25.5-42t12.5-47q16-22 42-25.5t47 12.5q235 175 341 449z\"}]}}),h.register({asterisk:{width:1664,height:1792,paths:[{d:\"M1482 1050q46 26 59.5 77.5t-12.5 97.5l-64 110q-26 46-77.5 59.5t-97.5-12.5l-266-153v307q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-307l-266 153q-46 26-97.5 12.5t-77.5-59.5l-64-110q-26-46-12.5-97.5t59.5-77.5l266-154-266-154q-46-26-59.5-77.5t12.5-97.5l64-110q26-46 77.5-59.5t97.5 12.5l266 153v-307q0-52 38-90t90-38h128q52 0 90 38t38 90v307l266-153q46-26 97.5-12.5t77.5 59.5l64 110q26 46 12.5 97.5t-59.5 77.5l-266 154z\"}]}}),h.register({at:{width:1536,height:1792,paths:[{d:\"M972 775q0-108-53.5-169t-147.5-61q-63 0-124 30.5t-110 84.5-79.5 137-30.5 180q0 112 53.5 173t150.5 61q96 0 176-66.5t122.5-166 42.5-203.5zM1536 896q0 111-37 197t-98.5 135-131.5 74.5-145 27.5q-6 0-15.5 0.5t-16.5 0.5q-95 0-142-53-28-33-33-83-52 66-131.5 110t-173.5 44q-161 0-249.5-95.5t-88.5-269.5q0-157 66-290t179-210.5 246-77.5q87 0 155 35.5t106 99.5l2-19 11-56q1-6 5.5-12t9.5-6h118q5 0 13 11 5 5 3 16l-120 614q-5 24-5 48 0 39 12.5 52t44.5 13q28-1 57-5.5t73-24 77-50 57-89.5 24-137q0-292-174-466t-466-174q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51q228 0 405-144 11-9 24-8t21 12l41 49q8 12 7 24-2 13-12 22-102 83-227.5 128t-258.5 45q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q344 0 556 212t212 556z\"}]}}),h.register({\"audio-description\":{width:2304,height:1792,paths:[{d:\"M504 994h171l-1-265zM1530 895q0-87-50.5-140t-146.5-53h-54v388h52q91 0 145-57t54-138zM956 518l1 756q0 14-9.5 24t-23.5 10h-216q-14 0-23.5-10t-9.5-24v-62h-291l-55 81q-10 15-28 15h-267q-21 0-30.5-18t3.5-35l556-757q9-14 27-14h332q14 0 24 10t10 24zM1783 895q0 193-125.5 303t-324.5 110h-270q-14 0-24-10t-10-24v-756q0-14 10-24t24-10h268q200 0 326 109t126 302zM1939 896q0 11-0.5 29t-8 71.5-21.5 102-44.5 108-73.5 102.5h-51q38-45 66.5-104.5t41.5-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-20-91.5-41-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 10.5 70.5zM2123 896q0 11-0.5 29t-8 71.5-21.5 102-45 108-74 102.5h-51q38-45 66.5-104.5t41.5-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-19.5-91.5-40.5-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 10.5 70.5zM2304 896q0 11-0.5 29t-8 71.5-21.5 102-44.5 108-73.5 102.5h-51q38-45 66-104.5t41-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-19.5-91.5-40.5-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 9.5 70.5z\"}]}}),h.register({automobile:{width:2048,height:1792,paths:[{d:\"M480 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM516 768h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1888 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM2048 992v384q0 14-9 23t-23 9h-96v128q0 80-56 136t-136 56-136-56-56-136v-128h-1024v128q0 80-56 136t-136 56-136-56-56-136v-128h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h768q98 0 179 63.5t104 157.5l105 419h28q93 0 158.5 65.5t65.5 158.5z\"}]}}),h.register({backward:{width:1664,height:1792,paths:[{d:\"M1619 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v710q0 26-13 32t-32-13l-710-710q-19-19-19-45t19-45l710-710q19-19 32-13t13 32v710q4-10 13-19z\"}]}}),h.register({\"balance-scale\":{width:2304,height:1792,paths:[{\nd:\"M1728 448l-384 704h768zM448 448l-384 704h768zM1269 256q-14 40-45.5 71.5t-71.5 45.5v1291h608q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1344q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h608v-1291q-40-14-71.5-45.5t-45.5-71.5h-491q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h491q21-57 70-92.5t111-35.5 111 35.5 70 92.5h491q14 0 23 9t9 23v64q0 14-9 23t-23 9h-491zM1088 272q33 0 56.5-23.5t23.5-56.5-23.5-56.5-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5zM2176 1152q0 73-46.5 131t-117.5 91-144.5 49.5-139.5 16.5-139.5-16.5-144.5-49.5-117.5-91-46.5-131q0-11 35-81t92-174.5 107-195.5 102-184 56-100q18-33 56-33t56 33q4 7 56 100t102 184 107 195.5 92 174.5 35 81zM896 1152q0 73-46.5 131t-117.5 91-144.5 49.5-139.5 16.5-139.5-16.5-144.5-49.5-117.5-91-46.5-131q0-11 35-81t92-174.5 107-195.5 102-184 56-100q18-33 56-33t56 33q4 7 56 100t102 184 107 195.5 92 174.5 35 81z\"}]}}),h.register({ban:{width:1536,height:1792,paths:[{d:\"M1312 893q0-161-87-295l-754 753q137 89 297 89 111 0 211.5-43.5t173.5-116.5 116-174.5 43-212.5zM313 1192l755-754q-135-91-300-91-148 0-273 73t-198 199-73 274q0 162 89 299zM1536 893q0 157-61 300t-163.5 246-245 164-298.5 61-298.5-61-245-164-163.5-246-61-300 61-299.5 163.5-245.5 245-164 298.5-61 298.5 61 245 164 163.5 245.5 61 299.5z\"}]}}),h.register({bandcamp:{width:1792,height:1792,paths:[{d:\"M1070 1178l306-564h-654l-306 564h654zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({bank:{width:2048,height:1792,paths:[{d:\"M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z\"}]}}),h.register({\"bar-chart-o\":{width:2048,height:1792,paths:[{d:\"M640 896v512h-256v-512h256zM1024 384v1024h-256v-1024h256zM2048 1536v128h-2048v-1536h128v1408h1920zM1408 640v768h-256v-768h256zM1792 256v1152h-256v-1152h256z\"}]}}),h.register({\"bar-chart\":{width:2048,height:1792,paths:[{d:\"M640 896v512h-256v-512h256zM1024 384v1024h-256v-1024h256zM2048 1536v128h-2048v-1536h128v1408h1920zM1408 640v768h-256v-768h256zM1792 256v1152h-256v-1152h256z\"}]}}),h.register({barcode:{width:1792,height:1792,paths:[{d:\"M63 1536h-63v-1408h63v1408zM126 1535h-32v-1407h32v1407zM220 1535h-31v-1407h31v1407zM377 1535h-31v-1407h31v1407zM534 1535h-62v-1407h62v1407zM660 1535h-31v-1407h31v1407zM723 1535h-31v-1407h31v1407zM786 1535h-31v-1407h31v1407zM943 1535h-63v-1407h63v1407zM1100 1535h-63v-1407h63v1407zM1226 1535h-63v-1407h63v1407zM1352 1535h-63v-1407h63v1407zM1446 1535h-63v-1407h63v1407zM1635 1535h-94v-1407h94v1407zM1698 1535h-32v-1407h32v1407zM1792 1536h-63v-1408h63v1408z\"}]}}),h.register({bars:{width:1536,height:1792,paths:[{d:\"M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({bath:{width:1792,height:1792,paths:[{d:\"M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z\"}]}}),h.register({bathtub:{width:1792,height:1792,paths:[{d:\"M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z\"}]}}),h.register({\"battery-0\":{width:2304,height:1792,paths:[{d:\"M2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-1\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h512v768h-512zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-2\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h896v768h-896zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-3\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h1280v768h-1280zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-4\":{width:2304,height:1792,paths:[{d:\"M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({\"battery-empty\":{width:2304,height:1792,paths:[{d:\"M2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-full\":{width:2304,height:1792,paths:[{d:\"M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({\"battery-half\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h896v768h-896zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-quarter\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h512v768h-512zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({\"battery-three-quarters\":{width:2304,height:1792,paths:[{d:\"M256 1280v-768h1280v768h-1280zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z\"}]}}),h.register({battery:{width:2304,height:1792,paths:[{d:\"M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({bed:{width:2048,height:1792,paths:[{d:\"M256 1024h1728q26 0 45 19t19 45v448h-256v-256h-1536v256h-256v-1216q0-26 19-45t45-19h128q26 0 45 19t19 45v704zM832 704q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM2048 960v-64q0-159-112.5-271.5t-271.5-112.5h-704q-26 0-45 19t-19 45v384h1152z\"}]}}),h.register({beer:{width:1664,height:1792,paths:[{d:\"M640 896v-384h-256v256q0 53 37.5 90.5t90.5 37.5h128zM1664 1344v192h-1152v-192l128-192h-128q-159 0-271.5-112.5t-112.5-271.5v-320l-64-64 32-128h480l32-128h960l32 192-64 32v800z\"}]}}),h.register({\"behance-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM499 495h-371v787h382q117 0 197-57.5t80-170.5q0-158-143-200 107-52 107-164 0-57-19.5-96.5t-56.5-60.5-79-29.5-97-8.5zM477 813h-176v-184h163q119 0 119 90 0 94-106 94zM486 1148h-185v-217h189q124 0 124 113 0 104-128 104zM1136 1180q-68 0-104-38t-36-107h411q1-10 1-30 0-132-74.5-220.5t-203.5-88.5q-128 0-210 86t-82 216q0 135 79 217t213 82q205 0 267-191h-138q-11 34-47.5 54t-75.5 20zM1126 814q113 0 124 122h-254q4-56 39-89t91-33zM964 548h319v77h-319v-77z\"}]}}),h.register({behance:{width:2048,height:1792,paths:[{d:\"M1848 339h-511v124h511v-124zM1596 765q-90 0-146 52.5t-62 142.5h408q-18-195-200-195zM1612 1350q63 0 122-32t76-87h221q-100 307-427 307-214 0-340.5-132t-126.5-347q0-208 130.5-345.5t336.5-137.5q138 0 240.5 68t153 179 50.5 248q0 17-2 47h-658q0 111 57.5 171.5t166.5 60.5zM277 1300h296q205 0 205-167 0-180-199-180h-302v347zM277 763h281q78 0 123.5-36.5t45.5-113.5q0-144-190-144h-260v294zM0 254h594q87 0 155 14t126.5 47.5 90 96.5 31.5 154q0 181-172 263 114 32 172 115t58 204q0 75-24.5 136.5t-66 103.5-98.5 71-121 42-134 13h-611v-1260z\"}]}}),h.register({\"bell-o\":{width:1792,height:1792,paths:[{d:\"M912 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM246 1408h1300q-266-300-266-832 0-51-24-105t-69-103-121.5-80.5-169.5-31.5-169.5 31.5-121.5 80.5-69 103-24 105q0 532-266 832zM1728 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-181-75-75-181h-448q-52 0-90-38t-38-90q50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 190 28 307 158.5t117 282.5q0 139 19.5 260t50 206 74.5 158.5 85 119.5 91 88z\"}]}}),h.register({\"bell-slash-o\":{width:2048,height:1792,paths:[{d:\"M1040 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM503 1221l877-760q-42-88-132.5-146.5t-223.5-58.5q-93 0-169.5 31.5t-121.5 80.5-69 103-24 105q0 384-137 645zM1856 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-180.5-74.5-75.5-180.5l149-129h757q-166-187-227-459l111-97q61 356 298 556zM1942 16l84 96q8 10 7.5 23.5t-10.5 22.5l-1872 1622q-10 8-23.5 7t-21.5-11l-84-96q-8-10-7.5-23.5t10.5-21.5l186-161q-19-32-19-66 50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 124 18 219 82.5t148 157.5l418-363q10-8 23.5-7t21.5 11z\"}]}}),h.register({\"bell-slash\":{width:2048,height:1792,paths:[{d:\"M1558 852q61 356 298 556 0 52-38 90t-90 38h-448q0 106-75 181t-181 75-180.5-74.5-75.5-180.5zM1024 1712q16 0 16-16t-16-16q-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5zM2026 112q8 10 7.5 23.5t-10.5 22.5l-1872 1622q-10 8-23.5 7t-21.5-11l-84-96q-8-10-7.5-23.5t10.5-21.5l186-161q-19-32-19-66 50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 124 18 219 82.5t148 157.5l418-363q10-8 23.5-7t21.5 11z\"}]}}),h.register({bell:{width:1792,height:1792,paths:[{d:\"M912 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM1728 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-181-75-75-181h-448q-52 0-90-38t-38-90q50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 190 28 307 158.5t117 282.5q0 139 19.5 260t50 206 74.5 158.5 85 119.5 91 88z\"}]}}),h.register({bicycle:{width:2304,height:1792,paths:[{d:\"M762 1152h-314q-40 0-57.5-35t6.5-67l188-251q-65-31-137-31-132 0-226 94t-94 226 94 226 226 94q115 0 203-72.5t111-183.5zM576 1024h186q-18-85-75-148zM1056 1024l288-384h-480l-99 132q105 103 126 252h165zM2176 1088q0-132-94-226t-226-94q-60 0-121 24l174 260q15 23 10 49t-27 40q-15 11-36 11-35 0-53-29l-174-260q-93 95-93 225 0 132 94 226t226 94 226-94 94-226zM2304 1088q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-97 39.5-183.5t109.5-149.5l-65-98-353 469q-18 26-51 26h-197q-23 164-149 274t-294 110q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q114 0 215 55l137-183h-224q-26 0-45-19t-19-45 19-45 45-19h384v128h435l-85-128h-222q-26 0-45-19t-19-45 19-45 45-19h256q33 0 53 28l267 400q91-44 192-44 185 0 316.5 131.5t131.5 316.5z\"}]}}),h.register({binoculars:{width:1792,height:1792,paths:[{d:\"M704 320v768q0 26-19 45t-45 19v576q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-512l249-873q7-23 31-23h424zM1024 320v704h-256v-704h256zM1792 1216v512q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-576q-26 0-45-19t-19-45v-768h424q24 0 31 23zM736 32v224h-352v-224q0-14 9-23t23-9h288q14 0 23 9t9 23zM1408 32v224h-352v-224q0-14 9-23t23-9h288q14 0 23 9t9 23z\"}]}}),h.register({\"birthday-cake\":{width:1792,height:1792,paths:[{d:\"M1792 1408v384h-1792v-384q45 0 85-14t59-27.5 47-37.5q30-27 51.5-38t56.5-11q24 0 44 7t31 15 33 27q29 25 47 38t58 27 86 14q45 0 85-14.5t58-27 48-37.5q21-19 32.5-27t31-15 43.5-7q35 0 56.5 11t51.5 38q28 24 47 37.5t59 27.5 85 14 85-14 59-27.5 47-37.5q30-27 51.5-38t56.5-11q34 0 55.5 11t51.5 38q28 24 47 37.5t59 27.5 85 14zM1792 1088v192q-24 0-44-7t-31-15-33-27q-29-25-47-38t-58-27-85-14q-46 0-86 14t-58 27-47 38q-22 19-33 27t-31 15-44 7q-35 0-56.5-11t-51.5-38q-29-25-47-38t-58-27-86-14q-45 0-85 14.5t-58 27-48 37.5q-21 19-32.5 27t-31 15-43.5 7q-35 0-56.5-11t-51.5-38q-28-24-47-37.5t-59-27.5-85-14q-46 0-86 14t-58 27-47 38q-30 27-51.5 38t-56.5 11v-192q0-80 56-136t136-56h64v-448h256v448h256v-448h256v448h256v-448h256v448h64q80 0 136 56t56 136zM512 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150zM1024 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150zM1536 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150z\"}]}}),h.register({\"bitbucket-square\":{width:1536,height:1792,paths:[{d:\"M848 870q0-43-41-66t-77-1q-43 20-42.5 72.5t43.5 70.5q39 23 81-4t36-72zM928 854q8 66-36 121t-110 61-119-40-56-113q-2-49 25.5-93t72.5-64q70-31 141.5 10t81.5 118zM1100 463q-20 21-53.5 34t-53 16-63.5 8q-155 20-324 0-44-6-63-9.5t-52.5-16-54.5-32.5q13-19 36-31t40-15.5 47-8.5q198-35 408-1 33 5 51 8.5t43 16 39 31.5zM1142 1209q0-7 5.5-26.5t3-32-17.5-16.5q-161 106-365 106t-366-106l-12 6-5 12q26 154 41 210 47 81 204 108 249 46 428-53 34-19 49-51.5t22.5-85.5 12.5-71zM1272 516q9-53-8-75-43-55-155-88-216-63-487-36-132 12-226 46-38 15-59.5 25t-47 34-29.5 54q8 68 19 138t29 171 24 137q1 5 5 31t7 36 12 27 22 28q105 80 284 100 259 28 440-63 24-13 39.5-23t31-29 19.5-40q48-267 80-473zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({bitbucket:{width:1408,height:1792,paths:[{d:\"M815 859q8 63-50.5 101t-111.5 6q-39-17-53.5-58t-0.5-82 52-58q36-18 72.5-12t64 35.5 27.5 67.5zM926 838q-14-107-113-164t-197-13q-63 28-100.5 88.5t-34.5 129.5q4 91 77.5 155t165.5 56q91-8 152-84t50-168zM1165 296q-20-27-56-44.5t-58-22-71-12.5q-291-47-566 2-43 7-66 12t-55 22-50 43q30 28 76 45.5t73.5 22 87.5 11.5q228 29 448 1 63-8 89.5-12t72.5-21.5 75-46.5zM1222 1331q-8 26-15.5 76.5t-14 84-28.5 70-58 56.5q-86 48-189.5 71.5t-202 22-201.5-18.5q-46-8-81.5-18t-76.5-27-73-43.5-52-61.5q-25-96-57-292l6-16 18-9q223 148 506.5 148t507.5-148q21 6 24 23t-5 45-8 37zM1403 370q-26 167-111 655-5 30-27 56t-43.5 40-54.5 31q-252 126-610 88-248-27-394-139-15-12-25.5-26.5t-17-35-9-34-6-39.5-5.5-35q-9-50-26.5-150t-28-161.5-23.5-147.5-22-158q3-26 17.5-48.5t31.5-37.5 45-30 46-22.5 48-18.5q125-46 313-64 379-37 676 50 155 46 215 122 16 20 16.5 51t-5.5 54z\"}]}}),h.register({bitcoin:{width:1280,height:1792,paths:[{d:\"M1167 640q18 182-131 258 117 28 175 103t45 214q-7 71-32.5 125t-64.5 89-97 58.5-121.5 34.5-145.5 15v255h-154v-251q-80 0-122-1v252h-154v-255q-18 0-54-0.5t-55-0.5h-200l31-183h111q50 0 58-51v-402h16q-6-1-16-1v-287q-13-68-89-68h-111v-164l212 1q64 0 97-1v-252h154v247q82-2 122-2v-245h154v252q79 7 140 22.5t113 45 82.5 78 36.5 114.5zM952 1185q0-36-15-64t-37-46-57.5-30.5-65.5-18.5-74-9-69-3-64.5 1-47.5 1v338q8 0 37 0.5t48 0.5 53-1.5 58.5-4 57-8.5 55.5-14 47.5-21 39.5-30 24.5-40 9.5-51zM881 709q0-33-12.5-58.5t-30.5-42-48-28-55-16.5-61.5-8-58-2.5-54 1-39.5 0.5v307q5 0 34.5 0.5t46.5 0 50-2 55-5.5 51.5-11 48.5-18.5 37-27 27-38.5 9-51z\"}]}}),h.register({\"black-tie\":{width:1536,height:1792,paths:[{d:\"M0 128h1536v1536h-1536v-1536zM1085 1243l-221-631 221-297h-634l221 297-221 631 317 304z\"}]}}),h.register({blind:{width:1408,height:1792,paths:[{d:\"M366 311q-64 0-110-45.5t-46-110.5q0-64 46-109.5t110-45.5 109.5 45.5 45.5 109.5q0 65-45.5 110.5t-109.5 45.5zM917 953q0 50-30 67.5t-63.5 6.5-47.5-34l-367-438q-7-12-14-15.5t-11-1.5l-3 3q-7 8 4 21l122 139 1 354-161 457q-67 192-92 234-15 26-28 32-50 26-103 1-29-13-41.5-43t-9.5-57q2-17 197-618l5-416-85 164 35 222q4 24-1 42t-14 27.5-19 16-17 7.5l-7 2q-19 3-34.5-3t-24-16-14-22-7.5-19.5-2-9.5l-46-299 211-381q23-34 113-34 75 0 107 40l424 521q7 5 14 17l3 3-1 1q7 13 7 29zM514 1103q43 113 88.5 225t69.5 168l24 55q36 93 42 125 11 70-36 97-35 22-66 16t-51-22-29-35h-1q-6-16-8-25l-124-351zM1338 1695q31 49 31 57 0 5-3 7-9 5-14.5-0.5t-15.5-26-16-30.5q-114-172-423-661 3 1 7-1t7-4l3-2q11-9 11-17z\"}]}}),h.register({\"bluetooth-b\":{width:1024,height:1792,paths:[{d:\"M596 1423l173-172-173-172v344zM596 713l173-172-173-172v344zM628 896l356 356-539 540v-711l-297 296-108-108 372-373-372-373 108-108 297 296v-711l539 540z\"}]}}),h.register({bluetooth:{width:1536,height:1792,paths:[{d:\"M841 1053l148 148-149 149zM840 442l149 149-148 148zM710 1666l464-464-306-306 306-306-464-464v611l-255-255-93 93 320 321-320 321 93 93 255-255v611zM1429 896q0 209-32 365.5t-87.5 257-140.5 162.5-181.5 86.5-219.5 24.5-219.5-24.5-181.5-86.5-140.5-162.5-87.5-257-32-365.5 32-365.5 87.5-257 140.5-162.5 181.5-86.5 219.5-24.5 219.5 24.5 181.5 86.5 140.5 162.5 87.5 257 32 365.5z\"}]}}),h.register({bold:{width:1408,height:1792,paths:[{d:\"M555 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-0.5 159t-0.5 158q0 8-1 67.5t-0.5 96.5 4.5 83.5 12 66.5zM541 775q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-0.5 80t-0.5 79q0 46 1 69zM0 1664l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5 0.5-34v-35.5-30q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68 0.5t68 0.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z\"}]}}),h.register({bolt:{width:896,height:1792,paths:[{d:\"M885 566q18 20 7 44l-540 1157q-13 25-42 25-4 0-14-2-17-5-25.5-19t-4.5-30l197-808-406 101q-4 1-12 1-18 0-31-11-18-15-13-39l201-825q4-14 16-23t28-9h328q19 0 32 12.5t13 29.5q0 8-5 18l-171 463 396-98q8-2 12-2 19 0 34 15z\"}]}}),h.register({bomb:{width:1792,height:1792,paths:[{d:\"M571 589q-10-25-34-35t-49 0q-108 44-191 127t-127 191q-10 25 0 49t35 34q13 5 24 5 42 0 60-40 34-84 98.5-148.5t148.5-98.5q25-11 35-35t0-49zM1513 233l46 46-244 243 68 68q19 19 19 45.5t-19 45.5l-64 64q89 161 89 343 0 143-55.5 273.5t-150 225-225 150-273.5 55.5-273.5-55.5-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5q182 0 343 89l64-64q19-19 45.5-19t45.5 19l68 68zM1521 177q-10 10-22 10-13 0-23-10l-91-90q-9-10-9-23t9-23q10-9 23-9t23 9l90 91q10 9 10 22.5t-10 22.5zM1751 407q-11 9-23 9t-23-9l-90-91q-10-9-10-22.5t10-22.5q9-10 22.5-10t22.5 10l91 90q9 10 9 23t-9 23zM1792 224q0 14-9 23t-23 9h-96q-14 0-23-9t-9-23 9-23 23-9h96q14 0 23 9t9 23zM1600 32v96q0 14-9 23t-23 9-23-9-9-23v-96q0-14 9-23t23-9 23 9 9 23zM1751 87l-91 90q-10 10-22 10-13 0-23-10-10-9-10-22.5t10-22.5l90-91q10-9 23-9t23 9q9 10 9 23t-9 23z\"}]}}),h.register({book:{width:1664,height:1792,paths:[{d:\"M1639 478q40 57 18 129l-275 906q-19 64-76.5 107.5t-122.5 43.5h-923q-77 0-148.5-53.5t-99.5-131.5q-24-67-2-127 0-4 3-27t4-37q1-8-3-21.5t-3-19.5q2-11 8-21t16.5-23.5 16.5-23.5q23-38 45-91.5t30-91.5q3-10 0.5-30t-0.5-28q3-11 17-28t17-23q21-36 42-92t25-90q1-9-2.5-32t0.5-28q4-13 22-30.5t22-22.5q19-26 42.5-84.5t27.5-96.5q1-8-3-25.5t-2-26.5q2-8 9-18t18-23 17-21q8-12 16.5-30.5t15-35 16-36 19.5-32 26.5-23.5 36-11.5 47.5 5.5l-1 3q38-9 51-9h761q74 0 114 56t18 130l-274 906q-36 119-71.5 153.5t-128.5 34.5h-869q-27 0-38 15-11 16-1 43 24 70 144 70h923q29 0 56-15.5t35-41.5l300-987q7-22 5-57 38 15 59 43zM575 480q-4 13 2 22.5t20 9.5h608q13 0 25.5-9.5t16.5-22.5l21-64q4-13-2-22.5t-20-9.5h-608q-13 0-25.5 9.5t-16.5 22.5zM492 736q-4 13 2 22.5t20 9.5h608q13 0 25.5-9.5t16.5-22.5l21-64q4-13-2-22.5t-20-9.5h-608q-13 0-25.5 9.5t-16.5 22.5z\"}]}}),h.register({\"bookmark-o\":{width:1280,height:1792,paths:[{d:\"M1152 256h-1024v1242l423-406 89-85 89 85 423 406v-1242zM1164 128q23 0 44 9 33 13 52.5 41t19.5 62v1289q0 34-19.5 62t-52.5 41q-19 8-44 8-48 0-83-32l-441-424-441 424q-36 33-83 33-23 0-44-9-33-13-52.5-41t-19.5-62v-1289q0-34 19.5-62t52.5-41q21-9 44-9h1048z\"}]}}),h.register({bookmark:{width:1280,height:1792,paths:[{d:\"M1164 128q23 0 44 9 33 13 52.5 41t19.5 62v1289q0 34-19.5 62t-52.5 41q-19 8-44 8-48 0-83-32l-441-424-441 424q-36 33-83 33-23 0-44-9-33-13-52.5-41t-19.5-62v-1289q0-34 19.5-62t52.5-41q21-9 44-9h1048z\"}]}}),h.register({braille:{width:2176,height:1792,paths:[{d:\"M192 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM704 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM704 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1472 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1472 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 160q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136z\"}]}}),h.register({briefcase:{width:1792,height:1792,paths:[{d:\"M640 256h512v-128h-512v128zM1792 896v480q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-480h672v160q0 26 19 45t45 19h320q26 0 45-19t19-45v-160h672zM1024 896v128h-256v-128h256zM1792 416v384h-1792v-384q0-66 47-113t113-47h352v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h352q66 0 113 47t47 113z\"}]}}),h.register({btc:{width:1280,height:1792,paths:[{d:\"M1167 640q18 182-131 258 117 28 175 103t45 214q-7 71-32.5 125t-64.5 89-97 58.5-121.5 34.5-145.5 15v255h-154v-251q-80 0-122-1v252h-154v-255q-18 0-54-0.5t-55-0.5h-200l31-183h111q50 0 58-51v-402h16q-6-1-16-1v-287q-13-68-89-68h-111v-164l212 1q64 0 97-1v-252h154v247q82-2 122-2v-245h154v252q79 7 140 22.5t113 45 82.5 78 36.5 114.5zM952 1185q0-36-15-64t-37-46-57.5-30.5-65.5-18.5-74-9-69-3-64.5 1-47.5 1v338q8 0 37 0.5t48 0.5 53-1.5 58.5-4 57-8.5 55.5-14 47.5-21 39.5-30 24.5-40 9.5-51zM881 709q0-33-12.5-58.5t-30.5-42-48-28-55-16.5-61.5-8-58-2.5-54 1-39.5 0.5v307q5 0 34.5 0.5t46.5 0 50-2 55-5.5 51.5-11 48.5-18.5 37-27 27-38.5 9-51z\"}]}}),h.register({bug:{width:1664,height:1792,paths:[{d:\"M1632 960q0 26-19 45t-45 19h-224q0 171-67 290l208 209q19 19 19 45t-19 45q-18 19-45 19t-45-19l-198-197q-5 5-15 13t-42 28.5-65 36.5-82 29-97 13v-896h-128v896q-51 0-101.5-13.5t-87-33-66-39-43.5-32.5l-15-14-183 207q-20 21-48 21-24 0-43-16-19-18-20.5-44.5t15.5-46.5l202-227q-58-114-58-274h-224q-26 0-45-19t-19-45 19-45 45-19h224v-294l-173-173q-19-19-19-45t19-45 45-19 45 19l173 173h844l173-173q19-19 45-19t45 19 19 45-19 45l-173 173v294h224q26 0 45 19t19 45zM1152 384h-640q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5z\"}]}}),h.register({\"building-o\":{width:1408,height:1792,paths:[{d:\"M384 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1664h384v-1536h-1152v1536h384v-224q0-13 9.5-22.5t22.5-9.5h320q13 0 22.5 9.5t9.5 22.5v224zM1408 64v1664q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h1280q26 0 45 19t19 45z\"}]}}),h.register({building:{width:1536,height:1792,paths:[{d:\"M1344 0q26 0 45 19t19 45v1664q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h1280zM512 288v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 544v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 800v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 1056v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM384 1376v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 1632v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM896 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 1376v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23z\"}]}}),h.register({bullhorn:{width:1792,height:1792,paths:[{d:\"M1664 640q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5v384q0 52-38 90t-90 38q-417-347-812-380-58 19-91 66t-31 100.5 40 92.5q-20 33-23 65.5t6 58 33.5 55 48 50 61.5 50.5q-29 58-111.5 83t-168.5 11.5-132-55.5q-7-23-29.5-87.5t-32-94.5-23-89-15-101 3.5-98.5 22-110.5h-122q-66 0-113-47t-47-113v-192q0-66 47-113t113-47h480q435 0 896-384 52 0 90 38t38 90v384zM1536 1244v-954q-394 302-768 343v270q377 42 768 341z\"}]}}),h.register({bullseye:{width:1536,height:1792,paths:[{\nd:\"M1024 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1152 896q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM1280 896q0 212-150 362t-362 150-362-150-150-362 150-362 362-150 362 150 150 362zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({bus:{width:1536,height:1792,paths:[{d:\"M384 1216q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1408 1216q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1362 820l-72-384q-5-23-22.5-37.5t-40.5-14.5h-918q-23 0-40.5 14.5t-22.5 37.5l-72 384q-5 30 14 53t49 23h1062q30 0 49-23t14-53zM1136 208q0-20-14-34t-34-14h-640q-20 0-34 14t-14 34 14 34 34 14h640q20 0 34-14t14-34zM1536 933v603h-128v128q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5v-128h-768v128q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5v-128h-128v-603q0-112 25-223l103-454q9-78 97.5-137t230-89 312.5-30 312.5 30 230 89 97.5 137l105 454q23 102 23 223z\"}]}}),h.register({buysellads:{width:1536,height:1792,paths:[{d:\"M915 1086h-294l147-551zM1001 1408h311l-324-1024h-440l-324 1024h311l383-314zM1536 416v960q0 118-85 203t-203 85h-960q-118 0-203-85t-85-203v-960q0-118 85-203t203-85h960q118 0 203 85t85 203z\"}]}}),h.register({cab:{width:2048,height:1792,paths:[{d:\"M1824 896q93 0 158.5 65.5t65.5 158.5v384q0 14-9 23t-23 9h-96v64q0 80-56 136t-136 56-136-56-56-136v-64h-1024v64q0 80-56 136t-136 56-136-56-56-136v-64h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h128v-224q0-14 9-23t23-9h448q14 0 23 9t9 23v224h128q98 0 179 63.5t104 157.5l105 419h28zM320 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM516 896h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1728 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47z\"}]}}),h.register({calculator:{width:1792,height:1792,paths:[{d:\"M384 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1152 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM384 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1152 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1536 1536v-384q0-52-38-90t-90-38-90 38-38 90v384q0 52 38 90t90 38 90-38 38-90zM1152 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1536 448v-256q0-26-19-45t-45-19h-1280q-26 0-45 19t-19 45v256q0 26 19 45t45 19h1280q26 0 45-19t19-45zM1536 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 128v1536q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1536q0-52 38-90t90-38h1408q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-check-o\":{width:1792,height:1792,paths:[{d:\"M1303 964l-512 512q-10 9-23 9t-23-9l-288-288q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l220 220 444-444q10-9 23-9t22 9l46 46q9 9 9 22t-9 23zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-minus-o\":{width:1792,height:1792,paths:[{d:\"M1152 1120v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-o\":{width:1664,height:1792,paths:[{d:\"M128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"calendar-plus-o\":{width:1792,height:1792,paths:[{d:\"M1536 256q52 0 90 38t38 90v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128zM1152 160v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM384 160v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM1536 1664v-1024h-1408v1024h1408zM896 1088h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224z\"}]}}),h.register({\"calendar-times-o\":{width:1792,height:1792,paths:[{d:\"M1111 1385l-46 46q-9 9-22 9t-23-9l-188-189-188 189q-10 9-23 9t-22-9l-46-46q-9-9-9-22t9-23l189-188-189-188q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l188 188 188-188q10-9 23-9t22 9l46 46q9 9 9 22t-9 23l-188 188 188 188q9 10 9 23t-9 22zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({calendar:{width:1664,height:1792,paths:[{d:\"M128 1664h288v-288h-288v288zM480 1664h320v-288h-320v288zM128 1312h288v-320h-288v320zM480 1312h320v-320h-320v320zM128 928h288v-288h-288v288zM864 1664h320v-288h-320v288zM480 928h320v-288h-320v288zM1248 1664h288v-288h-288v288zM864 1312h320v-320h-320v320zM512 448v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1248 1312h288v-320h-288v320zM864 928h320v-288h-320v288zM1248 928h288v-288h-288v288zM1280 448v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z\"}]}}),h.register({\"camera-retro\":{width:1792,height:1792,paths:[{d:\"M928 832q0-14-9-23t-23-9q-66 0-113 47t-47 113q0 14 9 23t23 9 23-9 9-23q0-40 28-68t68-28q14 0 23-9t9-23zM1152 962q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM128 1536h1536v-128h-1536v128zM1280 962q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM256 320h384v-128h-384v128zM128 512h1536v-118-138h-828l-64 128h-644v128zM1792 256v1280q0 53-37.5 90.5t-90.5 37.5h-1536q-53 0-90.5-37.5t-37.5-90.5v-1280q0-53 37.5-90.5t90.5-37.5h1536q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({camera:{width:1920,height:1792,paths:[{d:\"M960 672q119 0 203.5 84.5t84.5 203.5-84.5 203.5-203.5 84.5-203.5-84.5-84.5-203.5 84.5-203.5 203.5-84.5zM1664 256q106 0 181 75t75 181v896q0 106-75 181t-181 75h-1408q-106 0-181-75t-75-181v-896q0-106 75-181t181-75h224l51-136q19-49 69.5-84.5t103.5-35.5h512q53 0 103.5 35.5t69.5 84.5l51 136h224zM960 1408q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({car:{width:2048,height:1792,paths:[{d:\"M480 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM516 768h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1888 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM2048 992v384q0 14-9 23t-23 9h-96v128q0 80-56 136t-136 56-136-56-56-136v-128h-1024v128q0 80-56 136t-136 56-136-56-56-136v-128h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h768q98 0 179 63.5t104 157.5l105 419h28q93 0 158.5 65.5t65.5 158.5z\"}]}}),h.register({\"caret-down\":{width:1024,height:1792,paths:[{d:\"M1024 704q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"}]}}),h.register({\"caret-left\":{width:640,height:1792,paths:[{d:\"M640 448v896q0 26-19 45t-45 19-45-19l-448-448q-19-19-19-45t19-45l448-448q19-19 45-19t45 19 19 45z\"}]}}),h.register({\"caret-right\":{width:640,height:1792,paths:[{d:\"M576 896q0 26-19 45l-448 448q-19 19-45 19t-45-19-19-45v-896q0-26 19-45t45-19 45 19l448 448q19 19 19 45z\"}]}}),h.register({\"caret-square-o-down\":{width:1536,height:1792,paths:[{d:\"M1145 675q18 35-5 66l-320 448q-19 27-52 27t-52-27l-320-448q-23-31-5-66 17-35 57-35h640q40 0 57 35zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-square-o-left\":{width:1536,height:1792,paths:[{d:\"M1024 576v640q0 26-19 45t-45 19q-20 0-37-12l-448-320q-27-19-27-52t27-52l448-320q17-12 37-12 26 0 45 19t19 45zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-square-o-right\":{width:1536,height:1792,paths:[{d:\"M1088 896q0 33-27 52l-448 320q-31 23-66 5-35-17-35-57v-640q0-40 35-57 35-18 66 5l448 320q27 19 27 52zM1280 1376v-960q0-14-9-23t-23-9h-960q-14 0-23 9t-9 23v960q0 14 9 23t23 9h960q14 0 23-9t9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-square-o-up\":{width:1536,height:1792,paths:[{d:\"M1145 1117q-17 35-57 35h-640q-40 0-57-35-18-35 5-66l320-448q19-27 52-27t52 27l320 448q23 31 5 66zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"caret-up\":{width:1024,height:1792,paths:[{d:\"M1024 1216q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({\"cart-arrow-down\":{width:1664,height:1792,paths:[{d:\"M1280 704q0-26-19-45t-45-19-45 19l-147 146v-293q0-26-19-45t-45-19-45 19-19 45v293l-147-146q-19-19-45-19t-45 19-19 45 19 45l256 256q19 19 45 19t45-19l256-256q19-19 19-45zM640 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1536 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1664 448v512q0 24-16 42.5t-41 21.5l-1044 122q1 7 4.5 21.5t6 26.5 2.5 22q0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-14 11-39.5t29.5-59.5 20.5-38l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t20 15.5 13 24.5 7.5 26.5 5.5 29.5 4.5 25.5h1201q26 0 45 19t19 45z\"}]}}),h.register({\"cart-plus\":{width:1664,height:1792,paths:[{d:\"M1216 704q0-26-19-45t-45-19h-128v-128q0-26-19-45t-45-19-45 19-19 45v128h-128q-26 0-45 19t-19 45 19 45 45 19h128v128q0 26 19 45t45 19 45-19 19-45v-128h128q26 0 45-19t19-45zM640 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1536 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1664 448v512q0 24-16 42.5t-41 21.5l-1044 122q1 7 4.5 21.5t6 26.5 2.5 22q0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-14 11-39.5t29.5-59.5 20.5-38l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t20 15.5 13 24.5 7.5 26.5 5.5 29.5 4.5 25.5h1201q26 0 45 19t19 45z\"}]}}),h.register({\"cc-amex\":{width:2304,height:1792,paths:[{d:\"M119 682h89l-45-108zM740 1208l74-79-70-79h-163v49h142v55h-142v54h159zM898 1130l99 110v-217zM1186 1083q0-33-40-33h-84v69h83q41 0 41-36zM1475 1079q0-29-42-29h-82v61h81q43 0 43-32zM1197 613q0-29-42-29h-82v60h81q43 0 43-31zM1656 682h89l-44-108zM699 527v271h-66v-212l-94 212h-57l-94-212v212h-132l-25-60h-135l-25 60h-70l116-271h96l110 257v-257h106l85 184 77-184h108zM1255 1083q0 20-5.5 35t-14 25-22.5 16.5-26 10-31.5 4.5-31.5 1-32.5-0.5-29.5-0.5v91h-126l-80-90-83 90h-256v-271h260l80 89 82-89h207q109 0 109 89zM964 742v56h-217v-271h217v57h-152v49h148v55h-148v54h152zM2304 1301v229q0 55-38.5 94.5t-93.5 39.5h-2040q-55 0-93.5-39.5t-38.5-94.5v-678h111l25-61h55l25 61h218v-46l19 46h113l20-47v47h541v-99l10-1q10 0 10 14v86h279v-23q23 12 55 18t52.5 6.5 63-0.5 51.5-1l25-61h56l25 61h227v-58l34 58h182v-378h-180v44l-25-44h-185v44l-23-44h-249q-69 0-109 22v-22h-172v22q-24-22-73-22h-628l-43 97-43-97h-198v44l-22-44h-169l-78 179v-391q0-55 38.5-94.5t93.5-39.5h2040q55 0 93.5 39.5t38.5 94.5v678h-120q-51 0-81 22v-22h-177q-55 0-78 22v-22h-316v22q-31-22-87-22h-209v22q-23-22-91-22h-234l-54 58-50-58h-349v378h343l55-59 52 59h211v-89h21q59 0 90-13v102h174v-99h8q8 0 10 2t2 10v87h529q57 0 88-24v24h168q60 0 95-17zM1546 1067q0 23-12 43t-34 29q25 9 34 26t9 46v54h-65v-45q0-33-12-43.5t-46-10.5h-69v99h-65v-271h154q48 0 77 15t29 58zM1269 600q0 24-12.5 44t-33.5 29q26 9 34.5 25.5t8.5 46.5v53h-65q0-9 0.5-26.5t0-25-3-18.5-8.5-16-17.5-8.5-29.5-3.5h-70v98h-64v-271l153 1q49 0 78 14.5t29 57.5zM1798 1209v56h-216v-271h216v56h-151v49h148v55h-148v54zM1372 527v271h-66v-271h66zM2065 1179q0 86-102 86h-126v-58h126q34 0 34-25 0-16-17-21t-41.5-5-49.5-3.5-42-22.5-17-55q0-39 26-60t66-21h130v57h-119q-36 0-36 25 0 16 17.5 20.5t42 4 49 2.5 42 21.5 17.5 54.5zM2304 1129v101q-24 35-88 35h-125v-58h125q33 0 33-25 0-13-12.5-19t-31-5.5-40-2-40-8-31-24-12.5-48.5q0-39 26.5-60t66.5-21h129v57h-118q-36 0-36 25 0 20 29 22t68.5 5 56.5 26zM2139 528v270h-92l-122-203v203h-132l-26-60h-134l-25 60h-75q-129 0-129-133 0-138 133-138h63v59q-7 0-28-1t-28.5-0.5-23 2-21.5 6.5-14.5 13.5-11.5 23-3 33.5q0 38 13.5 58t49.5 20h29l92-213h97l109 256v-256h99l114 188v-188h66z\"}]}}),h.register({\"cc-diners-club\":{width:2304,height:1792,paths:[{d:\"M858 1241v-693q-106 41-172 135.5t-66 211.5 66 211.5 172 134.5zM1362 895q0-117-66-211.5t-172-135.5v694q106-41 172-135.5t66-211.5zM1577 895q0 159-78.5 294t-213.5 213.5-294 78.5q-119 0-227.5-46.5t-187-125-125-187-46.5-227.5q0-159 78.5-294t213.5-213.5 294-78.5 294 78.5 213.5 213.5 78.5 294zM1960 902q0-139-55.5-261.5t-147.5-205.5-213.5-131-252.5-48h-301q-176 0-323.5 81t-235 230-87.5 335q0 171 87 317.5t236 231.5 323 85h301q129 0 251.5-50.5t214.5-135 147.5-202.5 55.5-246zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-discover\":{width:2304,height:1792,paths:[{d:\"M313 777q0 51-36 84-29 26-89 26h-17v-220h17q61 0 89 27 36 31 36 83zM2089 712q0 52-64 52h-19v-101h20q63 0 63 49zM380 777q0-74-50-120.5t-129-46.5h-95v333h95q74 0 119-38 60-51 60-128zM410 943h65v-333h-65v333zM730 842q0-40-20.5-62t-75.5-42q-29-10-39.5-19t-10.5-23q0-16 13.5-26.5t34.5-10.5q29 0 53 27l34-44q-41-37-98-37-44 0-74 27.5t-30 67.5q0 35 18 55.5t64 36.5q37 13 45 19 19 12 19 34 0 20-14 33.5t-36 13.5q-48 0-71-44l-42 40q44 64 115 64 51 0 83-30.5t32-79.5zM1008 932v-77q-37 37-78 37-49 0-80.5-32.5t-31.5-82.5q0-48 31.5-81.5t77.5-33.5q43 0 81 38v-77q-40-20-80-20-74 0-125.5 50.5t-51.5 123.5 51 123.5 125 50.5q42 0 81-19zM2240 1536v-527q-65 40-144.5 84t-237.5 117-329.5 137.5-417.5 134.5-504 118h1569q26 0 45-19t19-45zM1389 779q0-75-53-128t-128-53-128 53-53 128 53 128 128 53 128-53 53-128zM1541 952l144-342h-71l-90 224-89-224h-71l142 342h35zM1714 943h184v-56h-119v-90h115v-56h-115v-74h119v-57h-184v333zM2105 943h80l-105-140q76-16 76-94 0-47-31-73t-87-26h-97v333h65v-133h9zM2304 262v1268q0 56-38.5 95t-93.5 39h-2040q-55 0-93.5-39t-38.5-95v-1268q0-56 38.5-95t93.5-39h2040q55 0 93.5 39t38.5 95z\"}]}}),h.register({\"cc-jcb\":{width:2304,height:1792,paths:[{d:\"M1951 998q0 26-15.5 44.5t-38.5 23.5q-8 2-18 2h-153v-140h153q10 0 18 2 23 5 38.5 23.5t15.5 44.5zM1933 785q0 25-15 42t-38 21q-3 1-15 1h-139v-129h139q3 0 8.5 0.5t6.5 0.5q23 4 38 21.5t15 42.5zM728 949v-308h-228v308q0 58-38 94.5t-105 36.5q-108 0-229-59v112q53 15 121 23t109 9l42 1q328 0 328-217zM1442 1133v-113q-99 52-200 59-108 8-169-41t-61-142 61-142 169-41q101 7 200 58v-112q-48-12-100-19.5t-80-9.5l-28-2q-127-6-218.5 14t-140.5 60-71 88-22 106 22 106 71 88 140.5 60 218.5 14q101-4 208-31zM2176 1018q0-54-43-88.5t-109-39.5v-3q57-8 89-41.5t32-79.5q0-55-41-88t-107-36q-3 0-12-0.5t-14-0.5h-455v510h491q74 0 121.5-36.5t47.5-96.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-mastercard\":{width:2304,height:1792,paths:[{d:\"M1119 341q-128-85-281-85-103 0-197.5 40.5t-162.5 108.5-108.5 162-40.5 197q0 104 40.5 198t108.5 162 162 108.5 198 40.5q153 0 281-85-131-107-178-265.5t0.5-316.5 177.5-265zM1152 365q-126 99-172 249.5t-0.5 300.5 172.5 249q127-99 172.5-249t-0.5-300.5-172-249.5zM1185 341q130 107 177.5 265.5t0.5 317-178 264.5q128 85 281 85 104 0 198-40.5t162-108.5 108.5-162 40.5-198q0-103-40.5-197t-108.5-162-162.5-108.5-197.5-40.5q-153 0-281 85zM1926 1063h7v-3h-17v3h7v17h3v-17zM1955 1080h4v-20h-5l-6 13-6-13h-5v20h3v-15l6 13h4l5-13v15zM1947 1520v2h-2-3v-3h3 2v1zM1947 1529h3l-4-5h2l1-1q1-1 1-3t-1-3l-1-1h-3-6v13h3v-5h1zM685 1461q0-19 11-31t30-12q18 0 29 12.5t11 30.5q0 19-11 31t-29 12q-19 0-30-12t-11-31zM1158 1417q30 0 35 32h-70q5-32 35-32zM1514 1461q0-19 11-31t29-12 29.5 12.5 11.5 30.5q0 19-11 31t-30 12q-18 0-29-12t-11-31zM1786 1461q0-18 11.5-30.5t29.5-12.5 29.5 12.5 11.5 30.5q0 19-11.5 31t-29.5 12-29.5-12.5-11.5-30.5zM1944 1533q-2 0-4-1-1 0-3-2t-2-3q-1-2-1-4 0-3 1-4 0-2 2-4l1-1q2 0 2-1 2-1 4-1 3 0 4 1l4 2 2 4v1q1 2 1 3l-1 1v3t-1 1l-1 2q-2 2-4 2-1 1-4 1zM599 1529h30v-85q0-24-14.5-38.5t-39.5-15.5q-32 0-47 24-14-24-45-24-24 0-39 20v-16h-30v135h30v-75q0-36 33-36 30 0 30 36v75h29v-75q0-36 33-36 30 0 30 36v75zM765 1529h29v-68-67h-29v16q-17-20-43-20-29 0-48 20t-19 51 19 51 48 20q28 0 43-20v17zM943 1488q0-34-47-40l-14-2q-23-4-23-14 0-15 25-15 23 0 43 11l12-24q-22-14-55-14-26 0-41 12t-15 32q0 33 47 39l13 2q24 4 24 14 0 17-31 17-25 0-45-14l-13 23q25 17 58 17 29 0 45.5-12t16.5-32zM1073 1522l-8-25q-13 7-26 7-19 0-19-22v-61h48v-27h-48v-41h-30v41h-28v27h28v61q0 50 47 50 21 0 36-10zM1159 1390q-29 0-48 20t-19 51q0 32 19.5 51.5t49.5 19.5q33 0 55-19l-14-22q-18 15-39 15-34 0-41-33h101v-12q0-32-18-51.5t-46-19.5zM1318 1390q-23 0-35 20v-16h-30v135h30v-76q0-35 29-35 10 0 18 4l9-28q-9-4-21-4zM1348 1461q0 31 19.5 51t52.5 20q29 0 48-16l-14-24q-18 13-35 12-18 0-29.5-12t-11.5-31 11.5-31 29.5-12q19 0 35 12l14-24q-20-16-48-16-33 0-52.5 20t-19.5 51zM1593 1529h30v-68-67h-30v16q-15-20-42-20-29 0-48.5 20t-19.5 51 19.5 51 48.5 20q28 0 42-20v17zM1726 1390q-23 0-35 20v-16h-29v135h29v-76q0-35 29-35 10 0 18 4l9-28q-8-4-21-4zM1866 1529h29v-68-122h-29v71q-15-20-43-20t-47.5 20.5-19.5 50.5 19.5 50.5 47.5 20.5q29 0 43-20v17zM1944 1509l-2 1h-3q-2 1-4 3-3 1-3 4-1 2-1 6 0 3 1 5 0 2 3 4 2 2 4 3t5 1q4 0 6-1 0-1 2-2l2-1q1-1 3-4 1-2 1-5 0-4-1-6-1-1-3-4 0-1-2-2l-2-1q-1 0-3-0.5t-3-0.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-paypal\":{width:2304,height:1792,paths:[{d:\"M745 906q0 37-25.5 61.5t-62.5 24.5q-29 0-46.5-16t-17.5-44q0-37 25-62.5t62-25.5q28 0 46.5 16.5t18.5 45.5zM1530 757q0 42-22 57t-66 15l-32 1 17-107q2-11 13-11h18q22 0 35 2t25 12.5 12 30.5zM1881 906q0 36-25.5 61t-61.5 25q-29 0-47-16t-18-44q0-37 25-62.5t62-25.5q28 0 46.5 16.5t18.5 45.5zM513 735q0-59-38.5-85.5t-100.5-26.5h-160q-19 0-21 19l-65 408q-1 6 3 11t10 5h76q20 0 22-19l18-110q1-8 7-13t15-6.5 17-1.5 19 1 14 1q86 0 135-48.5t49-134.5zM822 1047l41-261q1-6-3-11t-10-5h-76q-14 0-17 33-27-40-95-40-72 0-122.5 54t-50.5 127q0 59 34.5 94t92.5 35q28 0 58-12t48-32q-4 12-4 21 0 16 13 16h69q19 0 22-19zM1269 784q0-5-4-9.5t-9-4.5h-77q-11 0-18 10l-106 156-44-150q-5-16-22-16h-75q-5 0-9 4.5t-4 9.5q0 2 19.5 59t42 123 23.5 70q-82 112-82 120 0 13 13 13h77q11 0 18-10l255-368q2-2 2-7zM1649 735q0-59-38.5-85.5t-100.5-26.5h-159q-20 0-22 19l-65 408q-1 6 3 11t10 5h82q12 0 16-13l18-116q1-8 7-13t15-6.5 17-1.5 19 1 14 1q86 0 135-48.5t49-134.5zM1958 1047l41-261q1-6-3-11t-10-5h-76q-14 0-17 33-26-40-95-40-72 0-122.5 54t-50.5 127q0 59 34.5 94t92.5 35q29 0 59-12t47-32q0 1-2 9t-2 12q0 16 13 16h69q19 0 22-19zM2176 638v-1q0-14-13-14h-74q-11 0-13 11l-65 416-1 2q0 5 4 9.5t10 4.5h66q19 0 21-19zM392 772q-5 35-26 46t-60 11l-33 1 17-107q2-11 13-11h19q40 0 58 11.5t12 48.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-stripe\":{width:2304,height:1792,paths:[{d:\"M1597 903q0 69-21 106-19 35-52 35-23 0-41-9v-224q29-30 57-30 57 0 57 122zM2035 867h-110q6-98 56-98 51 0 54 98zM476 1002q0-59-33-91.5t-101-57.5q-36-13-52-24t-16-25q0-26 38-26 58 0 124 33l18-112q-67-32-149-32-77 0-123 38-48 39-48 109 0 58 32.5 90.5t99.5 56.5q39 14 54.5 25.5t15.5 27.5q0 31-48 31-29 0-70-12.5t-72-30.5l-18 113q72 41 168 41 81 0 129-37 51-41 51-117zM771 787l19-111h-96v-135l-129 21-18 114-46 8-17 103h62v219q0 84 44 120 38 30 111 30 32 0 79-11v-118q-32 7-44 7-42 0-42-50v-197h77zM1087 812v-139q-15-3-28-3-32 0-55.5 16t-33.5 46l-10-56h-131v471h150v-306q26-31 82-31 16 0 26 2zM1124 1147h150v-471h-150v471zM1746 898q0-122-45-179-40-52-111-52-64 0-117 56l-8-47h-132v645l150-25v-151q36 11 68 11 83 0 134-56 61-65 61-202zM1278 550q0-33-23-56t-56-23-56 23-23 56 23 56.5 56 23.5 56-23.5 23-56.5zM2176 907q0-113-48-176-50-64-144-64-96 0-151.5 66t-55.5 180q0 128 63 188 55 55 161 55 101 0 160-40l-16-103q-57 31-128 31-43 0-63-19-23-19-28-66h248q2-14 2-52zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({\"cc-visa\":{width:2304,height:1792,paths:[{d:\"M1975 990h-138q14-37 66-179l3-9q4-10 10-26t9-26l12 55zM531 925l-58-295q-11-54-75-54h-268l-2 13q311 79 403 336zM710 576l-162 438-17-89q-26-70-85-129.5t-131-88.5l135 510h175l261-641h-176zM849 1218h166l104-642h-166zM1617 592q-69-27-149-27-123 0-201 59t-79 153q-1 102 145 174 48 23 67 41t19 39q0 30-30 46t-69 16q-86 0-156-33l-22-11-23 144q74 34 185 34 130 1 208.5-59t80.5-160q0-106-140-174-49-25-71-42t-22-38q0-22 24.5-38.5t70.5-16.5q70-1 124 24l15 8zM2042 576h-128q-65 0-87 54l-246 588h174l35-96h212q5 22 20 96h154zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z\"}]}}),h.register({cc:{width:2048,height:1792,paths:[{d:\"M785 1008h207q-14 158-98.5 248.5t-214.5 90.5q-162 0-254.5-116t-92.5-316q0-194 93-311.5t233-117.5q148 0 232 87t97 247h-203q-5-64-35.5-99t-81.5-35q-57 0-88.5 60.5t-31.5 177.5q0 48 5 84t18 69.5 40 51.5 66 18q95 0 109-139zM1497 1008h206q-14 158-98 248.5t-214 90.5q-162 0-254.5-116t-92.5-316q0-194 93-311.5t233-117.5q148 0 232 87t97 247h-204q-4-64-35-99t-81-35q-57 0-88.5 60.5t-31.5 177.5q0 48 5 84t18 69.5 39.5 51.5 65.5 18q49 0 76.5-38t33.5-101zM1856 889q0-207-15.5-307t-60.5-161q-6-8-13.5-14t-21.5-15-16-11q-86-63-697-63-625 0-710 63-5 4-17.5 11.5t-21 14-14.5 14.5q-45 60-60 159.5t-15 308.5q0 208 15 307.5t60 160.5q6 8 15 15t20.5 14 17.5 12q44 33 239.5 49t470.5 16q610 0 697-65 5-4 17-11t20.5-14 13.5-16q46-60 61-159t15-309zM2048 128v1536h-2048v-1536h2048z\"}]}}),h.register({certificate:{width:1536,height:1792,paths:[{d:\"M1376 896l138 135q30 28 20 70-12 41-52 51l-188 48 53 186q12 41-19 70-29 31-70 19l-186-53-48 188q-10 40-51 52-12 2-19 2-31 0-51-22l-135-138-135 138q-28 30-70 20-41-11-51-52l-48-188-186 53q-41 12-70-19-31-29-19-70l53-186-188-48q-40-10-52-51-10-42 20-70l138-135-138-135q-30-28-20-70 12-41 52-51l188-48-53-186q-12-41 19-70 29-31 70-19l186 53 48-188q10-41 51-51 41-12 70 19l135 139 135-139q29-30 70-19 41 10 51 51l48 188 186-53q41-12 70 19 31 29 19 70l-53 186 188 48q40 10 52 51 10 42-20 70z\"}]}}),h.register({\"chain-broken\":{width:1664,height:1792,paths:[{d:\"M439 1271l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zM608 1312v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM384 1088q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zM1031 492l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zM1664 576q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1120 32v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM1527 183l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z\"}]}}),h.register({chain:{width:1664,height:1792,paths:[{d:\"M1456 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zM753 511q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z\"}]}}),h.register({\"check-circle-o\":{width:1536,height:1792,paths:[{d:\"M1171 813l-422 422q-19 19-45 19t-45-19l-294-294q-19-19-19-45t19-45l102-102q19-19 45-19t45 19l147 147 275-275q19-19 45-19t45 19l102 102q19 19 19 45t-19 45zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"check-circle\":{width:1536,height:1792,paths:[{d:\"M1284 734q0-28-18-46l-91-90q-19-19-45-19t-45 19l-408 407-226-226q-19-19-45-19t-45 19l-91 90q-18 18-18 46 0 27 18 45l362 362q19 19 45 19 27 0 46-19l543-543q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"check-square-o\":{width:1664,height:1792,paths:[{d:\"M1408 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zM1639 441l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z\"}]}}),h.register({\"check-square\":{width:1536,height:1792,paths:[{d:\"M685 1299l614-614q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-467 467-211-211q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l358 358q19 19 45 19t45-19zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({check:{width:1792,height:1792,paths:[{d:\"M1671 566q0 40-28 68l-724 724-136 136q-28 28-68 28t-68-28l-136-136-362-362q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295 656-657q28-28 68-28t68 28l136 136q28 28 28 68z\"}]}}),h.register({\"chevron-circle-down\":{width:1536,height:1792,paths:[{d:\"M813 1299l454-454q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-307 307-307-307q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l454 454q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-circle-left\":{width:1536,height:1792,paths:[{d:\"M909 1395l102-102q19-19 19-45t-19-45l-307-307 307-307q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-454 454q-19 19-19 45t19 45l454 454q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-circle-right\":{width:1536,height:1792,paths:[{d:\"M717 1395l454-454q19-19 19-45t-19-45l-454-454q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l307 307-307 307q-19 19-19 45t19 45l102 102q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-circle-up\":{width:1536,height:1792,paths:[{d:\"M1165 1139l102-102q19-19 19-45t-19-45l-454-454q-19-19-45-19t-45 19l-454 454q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l307-307 307 307q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"chevron-down\":{width:1792,height:1792,paths:[{d:\"M1683 808l-742 741q-19 19-45 19t-45-19l-742-741q-19-19-19-45.5t19-45.5l166-165q19-19 45-19t45 19l531 531 531-531q19-19 45-19t45 19l166 165q19 19 19 45.5t-19 45.5z\"}]}}),h.register({\"chevron-left\":{width:1280,height:1792,paths:[{d:\"M1171 301l-531 531 531 531q19 19 19 45t-19 45l-166 166q-19 19-45 19t-45-19l-742-742q-19-19-19-45t19-45l742-742q19-19 45-19t45 19l166 166q19 19 19 45t-19 45z\"}]}}),h.register({\"chevron-right\":{width:1280,height:1792,paths:[{d:\"M1107 877l-742 742q-19 19-45 19t-45-19l-166-166q-19-19-19-45t19-45l531-531-531-531q-19-19-19-45t19-45l166-166q19-19 45-19t45 19l742 742q19 19 19 45t-19 45z\"}]}}),h.register({\"chevron-up\":{width:1792,height:1792,paths:[{d:\"M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z\"}]}}),h.register({child:{width:1280,height:1792,paths:[{d:\"M1188 548l-292 292v824q0 46-33 79t-79 33-79-33-33-79v-384h-64v384q0 46-33 79t-79 33-79-33-33-79v-824l-292-292q-28-28-28-68t28-68q29-28 68.5-28t67.5 28l228 228h368l228-228q28-28 68-28t68 28q28 29 28 68.5t-28 67.5zM864 384q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({chrome:{width:1792,height:1792,paths:[{d:\"M893 0q240-2 451 120 232 134 352 372l-742-39q-160-9-294 74.5t-185 229.5l-276-424q128-159 311-245.5t383-87.5zM146 405l337 663q72 143 211 217t293 45l-230 451q-212-33-385-157.5t-272.5-316-99.5-411.5q0-267 146-491zM1732 574q58 150 59.5 310.5t-48.5 306-153 272-246 209.5q-230 133-498 119l405-623q88-131 82.5-290.5t-106.5-277.5zM896 594q125 0 213.5 88.5t88.5 213.5-88.5 213.5-213.5 88.5-213.5-88.5-88.5-213.5 88.5-213.5 213.5-88.5z\"}]}}),h.register({\"circle-o-notch\":{width:1792,height:1792,paths:[{\nd:\"M1760 896q0 176-68.5 336t-184 275.5-275.5 184-336 68.5-336-68.5-275.5-184-184-275.5-68.5-336q0-213 97-398.5t265-305.5 374-151v228q-221 45-366.5 221t-145.5 406q0 130 51 248.5t136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5q0-230-145.5-406t-366.5-221v-228q206 31 374 151t265 305.5 97 398.5z\"}]}}),h.register({\"circle-o\":{width:1536,height:1792,paths:[{d:\"M768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"circle-thin\":{width:1536,height:1792,paths:[{d:\"M768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({circle:{width:1536,height:1792,paths:[{d:\"M1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({clipboard:{width:1792,height:1792,paths:[{d:\"M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zM1024 224v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zM1280 896h299l-299-299v299zM1792 1024v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z\"}]}}),h.register({\"clock-o\":{width:1536,height:1792,paths:[{d:\"M896 544v448q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-352q0-14 9-23t23-9h64q14 0 23 9t9 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({clone:{width:1792,height:1792,paths:[{d:\"M1664 1632v-1088q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5v1088q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5-9.5t9.5-22.5zM1792 544v1088q0 66-47 113t-113 47h-1088q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1088q66 0 113 47t47 113zM1408 160v160h-128v-160q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5v1088q0 13 9.5 22.5t22.5 9.5h160v128h-160q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1088q66 0 113 47t47 113z\"}]}}),h.register({close:{width:1408,height:1792,paths:[{d:\"M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"}]}}),h.register({\"cloud-download\":{width:1920,height:1792,paths:[{d:\"M1280 928q0-14-9-23t-23-9h-224v-352q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v352h-224q-13 0-22.5 9.5t-9.5 22.5q0 14 9 23l352 352q9 9 23 9t23-9l351-351q10-12 10-24zM1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z\"}]}}),h.register({\"cloud-upload\":{width:1920,height:1792,paths:[{d:\"M1280 864q0-14-9-23l-352-352q-9-9-23-9t-23 9l-351 351q-10 12-10 24 0 14 9 23t23 9h224v352q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5v-352h224q13 0 22.5-9.5t9.5-22.5zM1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z\"}]}}),h.register({cloud:{width:1920,height:1792,paths:[{d:\"M1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-132 71-241.5t187-163.5q-2-28-2-43 0-212 150-362t362-150q158 0 286.5 88t187.5 230q70-62 166-62 106 0 181 75t75 181q0 75-41 138 129 30 213 134.5t84 239.5z\"}]}}),h.register({cny:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({\"code-fork\":{width:1024,height:1792,paths:[{d:\"M288 1472q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM288 320q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM928 448q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1024 448q0 52-26 96.5t-70 69.5q-2 287-226 414-67 38-203 81-128 40-169.5 71t-41.5 100v26q44 25 70 69.5t26 96.5q0 80-56 136t-136 56-136-56-56-136q0-52 26-96.5t70-69.5v-820q-44-25-70-69.5t-26-96.5q0-80 56-136t136-56 136 56 56 136q0 52-26 96.5t-70 69.5v497q54-26 154-57 55-17 87.5-29.5t70.5-31 59-39.5 40.5-51 28-69.5 8.5-91.5q-44-25-70-69.5t-26-96.5q0-80 56-136t136-56 136 56 56 136z\"}]}}),h.register({code:{width:1920,height:1792,paths:[{d:\"M617 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zM1208 332l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zM1865 983l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z\"}]}}),h.register({codepen:{width:1792,height:1792,paths:[{d:\"M216 1169l603 402v-359l-334-223zM154 1025l193-129-193-129v258zM973 1571l603-402-269-180-334 223v359zM896 1078l272-182-272-182-272 182zM485 803l334-223v-359l-603 402zM1445 896l193 129v-258zM1307 803l269-180-603-402v359zM1792 623v546q0 41-34 64l-819 546q-21 13-43 13t-43-13l-819-546q-34-23-34-64v-546q0-41 34-64l819-546q21-13 43-13t43 13l819 546q34 23 34 64z\"}]}}),h.register({codiepie:{width:1792,height:1792,paths:[{d:\"M1584 1290l-218-111q-74 120-196.5 189t-263.5 69q-147 0-271-72t-196-196-72-270q0-110 42.5-209.5t115-172 172-115 209.5-42.5q131 0 247.5 60.5t192.5 168.5l215-125q-110-169-286.5-265t-378.5-96q-161 0-308 63t-253 169-169 253-63 308 63 308 169 253 253 169 308 63q213 0 397.5-107t290.5-292zM1030 893l693 352q-116 253-334.5 400t-492.5 147q-182 0-348-71t-286-191-191-286-71-348 71-348 191-286 286-191 348-71q260 0 470.5 133.5t335.5 366.5zM1543 896h-39v160h-96v-352h136q32 0 54.5 20t28.5 48 1 56-27.5 48-57.5 20z\"}]}}),h.register({coffee:{width:1920,height:1792,paths:[{d:\"M1664 640q0-80-56-136t-136-56h-64v384h64q80 0 136-56t56-136zM0 1408h1792q0 106-75 181t-181 75h-1280q-106 0-181-75t-75-181zM1856 640q0 159-112.5 271.5t-271.5 112.5h-64v32q0 92-66 158t-158 66h-704q-92 0-158-66t-66-158v-736q0-26 19-45t45-19h1152q159 0 271.5 112.5t112.5 271.5z\"}]}}),h.register({cog:{width:1536,height:1792,paths:[{d:\"M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1536 787v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z\"}]}}),h.register({cogs:{width:1920,height:1792,paths:[{d:\"M896 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1664 1408q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1664 384q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1280 805v185q0 10-7 19.5t-16 10.5l-155 24q-11 35-32 76 34 48 90 115 7 11 7 20 0 12-7 19-23 30-82.5 89.5t-78.5 59.5q-11 0-21-7l-115-90q-37 19-77 31-11 108-23 155-7 24-30 24h-186q-11 0-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118 89q-7 7-20 7-11 0-21-8-144-133-144-160 0-9 7-19 10-14 41-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5t-7-19.5v-185q0-10 7-19.5t16-10.5l155-24q11-35 32-76-34-48-90-115-7-11-7-20 0-12 7-20 22-30 82-89t79-59q11 0 21 7l115 90q34-18 77-32 11-108 23-154 7-24 30-24h186q11 0 20 7.5t10 17.5l23 153q34 10 75 31l118-89q8-7 20-7 11 0 21 8 144 133 144 160 0 8-7 19-12 16-42 54t-45 60q23 48 34 82l152 23q10 2 17 10.5t7 19.5zM1920 1338v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31zM1920 314v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31z\"}]}}),h.register({columns:{width:1664,height:1792,paths:[{d:\"M160 1536h608v-1152h-640v1120q0 13 9.5 22.5t22.5 9.5zM1536 1504v-1120h-640v1152h608q13 0 22.5-9.5t9.5-22.5zM1664 288v1216q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1344q66 0 113 47t47 113z\"}]}}),h.register({\"comment-o\":{width:1792,height:1792,paths:[{d:\"M896 384q-204 0-381.5 69.5t-282 187.5-104.5 255q0 112 71.5 213.5t201.5 175.5l87 50-27 96q-24 91-70 172 152-63 275-171l43-38 57 6q69 8 130 8 204 0 381.5-69.5t282-187.5 104.5-255-104.5-255-282-187.5-381.5-69.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22h-5q-15 0-27-10.5t-16-27.5v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-174 120-321.5t326-233 450-85.5 450 85.5 326 233 120 321.5z\"}]}}),h.register({comment:{width:1792,height:1792,paths:[{d:\"M1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22-17 2-30.5-9t-17.5-29v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-130 71-248.5t191-204.5 286-136.5 348-50.5q244 0 450 85.5t326 233 120 321.5z\"}]}}),h.register({\"commenting-o\":{width:1792,height:1792,paths:[{d:\"M640 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1024 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM896 384q-204 0-381.5 69.5t-282 187.5-104.5 255q0 112 71.5 213.5t201.5 175.5l87 50-27 96q-24 91-70 172 152-63 275-171l43-38 57 6q69 8 130 8 204 0 381.5-69.5t282-187.5 104.5-255-104.5-255-282-187.5-381.5-69.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22h-5q-15 0-27-10.5t-16-27.5v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-130 71-248.5t191-204.5 286-136.5 348-50.5 348 50.5 286 136.5 191 204.5 71 248.5z\"}]}}),h.register({commenting:{width:1792,height:1792,paths:[{d:\"M640 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1408 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-110 0-211-18-173 173-435 229-52 10-86 13-12 1-22-6t-13-18q-4-15 20-37 5-5 23.5-21.5t25.5-23.5 23.5-25.5 24-31.5 20.5-37 20-48 14.5-57.5 12.5-72.5q-146-90-229.5-216.5t-83.5-269.5q0-174 120-321.5t326-233 450-85.5 450 85.5 326 233 120 321.5z\"}]}}),h.register({\"comments-o\":{width:1792,height:1792,paths:[{d:\"M704 384q-153 0-286 52t-211.5 141-78.5 191q0 82 53 158t149 132l97 56-35 84q34-20 62-39l44-31 53 10q78 14 153 14 153 0 286-52t211.5-141 78.5-191-78.5-191-211.5-141-286-52zM704 256q191 0 353.5 68.5t256.5 186.5 94 257-94 257-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t0.5-6.5 2-6l2.5-5t3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5zM1526 1425q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5t2 6 0.5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230q0 120-71 224.5t-195 176.5z\"}]}}),h.register({comments:{width:1792,height:1792,paths:[{d:\"M1408 768q0 139-94 257t-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t0.5-6.5 2-6l2.5-5t3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5 353.5 68.5 256.5 186.5 94 257zM1792 1024q0 120-71 224.5t-195 176.5q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5t2 6 0.5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230z\"}]}}),h.register({compass:{width:1536,height:1792,paths:[{d:\"M640 1088l256-128-256-128v256zM1024 497v542l-512 256v-542zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({compress:{width:1536,height:1792,paths:[{d:\"M768 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zM1523 288q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z\"}]}}),h.register({connectdevelop:{width:2048,height:1792,paths:[{d:\"M2048 895q0 21-13 36.5t-33 19.5l-205 356q3 9 3 18 0 20-12.5 35.5t-32.5 19.5l-193 337q3 8 3 16 0 23-16.5 40t-40.5 17q-25 0-41-18h-400q-17 20-43 20t-43-20h-399q-17 20-43 20-23 0-40-16.5t-17-40.5q0-8 4-20l-193-335q-20-4-32.5-19.5t-12.5-35.5q0-9 3-18l-206-356q-20-5-32.5-20.5t-12.5-35.5q0-21 13.5-36.5t33.5-19.5l199-344q0-1-0.5-3t-0.5-3q0-36 34-51l209-363q-4-10-4-18 0-24 17-40.5t40-16.5q26 0 44 21h396q16-21 43-21t43 21h398q18-21 44-21 23 0 40 16.5t17 40.5q0 6-4 18l207 358q23 1 39 17.5t16 38.5q0 13-7 27l187 324q19 4 31.5 19.5t12.5 35.5zM1063 1694h389l-342-354h-143l-342 354h360q18-16 39-16t39 16zM112 882q1 4 1 13 0 10-2 15l208 360 15 6 188-199v-347l-187-194q-13 8-29 10zM986 98h-388l190 200 554-200h-280q-16 16-38 16t-38-16zM1689 1310q1-6 5-11l-64-68-17 79h76zM1583 1310l22-105-252-266-296 307 63 64h463zM1495 1678l16-28 65-310h-427l333 343q8-4 13-5zM578 1694h5l342-354h-373v335l4 6q14 5 22 13zM552 1310h402l64-66-309-321-157 166v221zM359 1310h163v-189l-168 177q4 8 5 12zM358 485q0 1 0.5 2t0.5 2q0 16-8 29l171 177v-269zM552 415v311l153 157 297-314-223-236zM556 111l-4 8v264l205-74-191-201q-6 2-10 3zM1447 98h-16l-621 224 213 225zM1023 590l-297 315 311 319 296-307zM688 902l-136-141v284zM1038 1266l-42 44h85zM1374 918l238 251 132-624-3-5-1-1zM1718 518q-8-13-8-29v-2l-216-376q-5-1-13-5l-437 463 310 327zM522 394v-223l-163 282zM522 1340h-163l163 283v-283zM1607 1340l-48 227 130-227h-82zM1729 1270l207-361q-2-10-2-14 0-1 3-16l-171-296-129 612 77 82q5-3 15-7z\"}]}}),h.register({contao:{width:1792,height:1792,paths:[{d:\"M138 128h197q-70 64-126 149-36 56-59 115t-30 125.5-8.5 120 10.5 132 21 126 28 136.5q4 19 6 28 51 238 81 329 57 171 152 275h-272q-48 0-82-34t-34-82v-1304q0-48 34-82t82-34zM1346 128h308q48 0 82 34t34 82v1304q0 48-34 82t-82 34h-178q212-210 196-565l-469 101q-2 45-12 82t-31 72-59.5 59.5-93.5 36.5q-123 26-199-40-32-27-53-61t-51.5-129-64.5-258q-35-163-45.5-263t-5.5-139 23-77q20-41 62.5-73t102.5-45q45-12 83.5-6.5t67 17 54 35 43 48 34.5 56.5l468-100q-68-175-180-287z\"}]}}),h.register({copy:{width:1792,height:1792,paths:[{d:\"M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zM1152 597l-299 299h299v-299zM512 213l-299 299h299v-299zM708 860l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zM1664 1664v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z\"}]}}),h.register({copyright:{width:1536,height:1792,paths:[{d:\"M1150 1074v109q0 50-36.5 89t-94 60.5-118 32.5-117.5 11q-205 0-342.5-139t-137.5-346q0-203 136-339t339-136q34 0 75.5 4.5t93 18 92.5 34 69 56.5 28 81v109q0 16-16 16h-118q-16 0-16-16v-70q0-43-65.5-67.5t-137.5-24.5q-140 0-228.5 91.5t-88.5 237.5q0 151 91.5 249.5t233.5 98.5q68 0 138-24t70-66v-70q0-7 4.5-11.5t10.5-4.5h119q6 0 11 4.5t5 11.5zM768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"creative-commons\":{width:1792,height:1792,paths:[{d:\"M605 1233q153 0 257-104 14-18 3-36l-45-82q-6-13-24-17-16-2-27 11l-4 3q-4 4-11.5 10t-17.5 13.5-23.5 14.5-28.5 13-33.5 9.5-37.5 3.5q-76 0-125-50t-49-127q0-76 48-125.5t122-49.5q37 0 71.5 14t50.5 28l16 14q11 11 26 10 16-2 24-14l53-78q13-20-2-39-3-4-11-12t-30-23.5-48.5-28-67.5-22.5-86-10q-148 0-246 96.5t-98 240.5q0 146 97 241.5t247 95.5zM1235 1233q153 0 257-104 14-18 4-36l-45-82q-8-14-25-17-16-2-27 11l-4 3q-4 4-11.5 10t-17.5 13.5-23.5 14.5-28.5 13-33.5 9.5-37.5 3.5q-76 0-125-50t-49-127q0-76 48-125.5t122-49.5q37 0 71.5 14t50.5 28l16 14q11 11 26 10 16-2 24-14l53-78q13-20-2-39-3-4-11-12t-30-23.5-48.5-28-67.5-22.5-86-10q-147 0-245.5 96.5t-98.5 240.5q0 146 97 241.5t247 95.5zM896 160q-150 0-286 58.5t-234.5 157-157 234.5-58.5 286 58.5 286 157 234.5 234.5 157 286 58.5 286-58.5 234.5-157 157-234.5 58.5-286-58.5-286-157-234.5-234.5-157-286-58.5zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71z\"}]}}),h.register({\"credit-card-alt\":{width:2304,height:1792,paths:[{d:\"M0 1504v-608h2304v608q0 66-47 113t-113 47h-1984q-66 0-113-47t-47-113zM640 1280v128h384v-128h-384zM256 1280v128h256v-128h-256zM2144 128q66 0 113 47t47 113v224h-2304v-224q0-66 47-113t113-47h1984z\"}]}}),h.register({\"credit-card\":{width:1920,height:1792,paths:[{d:\"M1760 128q66 0 113 47t47 113v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600zM160 256q-13 0-22.5 9.5t-9.5 22.5v224h1664v-224q0-13-9.5-22.5t-22.5-9.5h-1600zM1760 1536q13 0 22.5-9.5t9.5-22.5v-608h-1664v608q0 13 9.5 22.5t22.5 9.5h1600zM256 1408v-128h256v128h-256zM640 1408v-128h384v128h-384z\"}]}}),h.register({crop:{width:1664,height:1792,paths:[{d:\"M557 1280h595v-595zM512 1235l595-595h-595v595zM1664 1312v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z\"}]}}),h.register({crosshairs:{width:1536,height:1792,paths:[{d:\"M1197 1024h-109q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26 0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5 112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32 188.5-112.5t112.5-188.5zM1536 832v128q0 26-19 45t-45 19h-143q-37 161-154.5 278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161 154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161 37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\"}]}}),h.register({css3:{width:1792,height:1792,paths:[{d:\"M275 128h1505l-266 1333-804 267-698-267 71-356h297l-29 147 422 161 486-161 68-339h-1208l58-297h1209l38-191h-1208z\"}]}}),h.register({cube:{width:1792,height:1792,paths:[{d:\"M896 1629l640-349v-636l-640 233v752zM832 764l698-254-698-254-698 254zM1664 512v768q0 35-18 65t-49 47l-704 384q-28 16-61 16t-61-16l-704-384q-31-17-49-47t-18-65v-768q0-40 23-73t61-47l704-256q22-8 44-8t44 8l704 256q38 14 61 47t23 73z\"}]}}),h.register({cubes:{width:2304,height:1792,paths:[{d:\"M640 1632l384-192v-314l-384 164v342zM576 1178l404-173-404-173-404 173zM1664 1632l384-192v-314l-384 164v342zM1600 1178l404-173-404-173-404 173zM1152 885l384-165v-266l-384 164v267zM1088 506l441-189-441-189-441 189zM2176 1024v416q0 36-19 67t-52 47l-448 224q-25 14-57 14t-57-14l-448-224q-4-2-7-4-2 2-7 4l-448 224q-25 14-57 14t-57-14l-448-224q-33-16-52-47t-19-67v-416q0-38 21.5-70t56.5-48l434-186v-400q0-38 21.5-70t56.5-48l448-192q23-10 50-10t50 10l448 192q35 16 56.5 48t21.5 70v400l434 186q36 16 57 48t21 70z\"}]}}),h.register({cut:{width:1792,height:1792,paths:[{d:\"M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1260 960l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zM579 700q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zM494 1445q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zM672 832l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zM896 1056l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zM1600 1472l128-64-520-408-177 138q-2 3-13 7z\"}]}}),h.register({cutlery:{width:1408,height:1792,paths:[{d:\"M640 64v640q0 61-35.5 111t-92.5 70v779q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-779q-57-20-92.5-70t-35.5-111v-640q0-26 19-45t45-19 45 19 19 45v416q0 26 19 45t45 19 45-19 19-45v-416q0-26 19-45t45-19 45 19 19 45v416q0 26 19 45t45 19 45-19 19-45v-416q0-26 19-45t45-19 45 19 19 45zM1408 64v1600q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-512h-224q-13 0-22.5-9.5t-9.5-22.5v-800q0-132 94-226t226-94h256q26 0 45 19t19 45z\"}]}}),h.register({dashboard:{width:1792,height:1792,paths:[{d:\"M384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM576 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1004 1185l101-382q6-26-7.5-48.5t-38.5-29.5-48 6.5-30 39.5l-101 382q-60 5-107 43.5t-63 98.5q-20 77 20 146t117 89 146-20 89-117q16-60-6-117t-72-91zM1664 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1472 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 1152q0 261-141 483-19 29-54 29h-1402q-35 0-54-29-141-221-141-483 0-182 71-348t191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({dashcube:{width:1536,height:1792,paths:[{d:\"M0 680q0-131 91.5-226.5t222.5-95.5h742l352-358v1470q0 132-91.5 227t-222.5 95h-780q-131 0-222.5-95t-91.5-227v-790zM1232 1434l-176-180v-425q0-46-32-79t-78-33h-484q-46 0-78 33t-32 79v492q0 46 32.5 79.5t77.5 33.5h770z\"}]}}),h.register({database:{width:1536,height:1792,paths:[{d:\"M768 768q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 1536q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 1152q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 0q208 0 385 34.5t280 93.5 103 128v128q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-128q0-69 103-128t280-93.5 385-34.5z\"}]}}),h.register({deaf:{width:1792,height:1792,paths:[{d:\"M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z\"}]}}),h.register({deafness:{width:1792,height:1792,paths:[{d:\"M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z\"}]}}),h.register({dedent:{width:1792,height:1792,paths:[{d:\"M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({delicious:{width:1536,height:1792,paths:[{d:\"M1472 1376v-480h-704v-704h-480q-93 0-158.5 65.5t-65.5 158.5v480h704v704h480q93 0 158.5-65.5t65.5-158.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({desktop:{width:1920,height:1792,paths:[{d:\"M1792 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 160v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({deviantart:{width:1024,height:1792,paths:[{d:\"M1024 303l-303 582 24 31h279v415h-507l-44 30-142 273-30 30h-301v-303l303-583-24-30h-279v-415h507l44-30 142-273 30-30h301v303z\"}]}}),h.register({diamond:{width:2048,height:1792,paths:[{d:\"M212 768l623 665-300-665h-323zM1024 1540l349-772h-698zM538 640l204-384h-262l-288 384h346zM1213 1433l623-665h-323zM683 640h682l-204-384h-274zM1510 640h346l-288-384h-262zM1651 154l384 512q14 18 13 41.5t-17 40.5l-960 1024q-18 20-47 20t-47-20l-960-1024q-16-17-17-40.5t13-41.5l384-512q18-26 51-26h1152q33 0 51 26z\"}]}}),h.register({digg:{width:2048,height:1792,paths:[{d:\"M328 282h204v983h-532v-697h328v-286zM328 1101v-369h-123v369h123zM614 568v697h205v-697h-205zM614 282v204h205v-204h-205zM901 568h533v942h-533v-163h328v-82h-328v-697zM1229 1101v-369h-123v369h123zM1516 568h532v942h-532v-163h327v-82h-327v-697zM1843 1101v-369h-123v369h123z\"}]}}),h.register({dollar:{width:1024,height:1792,paths:[{d:\"M978 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z\"}]}}),h.register({\"dot-circle-o\":{width:1536,height:1792,paths:[{d:\"M1024 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({download:{width:1664,height:1792,paths:[{d:\"M1280 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 1120v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h465l135 136q58 56 136 56t136-56l136-136h464q40 0 68 28t28 68zM1339 551q17 41-14 70l-448 448q-18 19-45 19t-45-19l-448-448q-31-29-14-70 17-39 59-39h256v-448q0-26 19-45t45-19h256q26 0 45 19t19 45v448h256q42 0 59 39z\"}]}}),h.register({dribbble:{width:1536,height:1792,paths:[{d:\"M1024 1500q-42-241-140-498h-2l-2 1q-16 6-43 16.5t-101 49-137 82-131 114.5-103 148l-15-11q184 150 418 150 132 0 256-52zM839 893q-21-49-53-111-311 93-673 93-1 7-1 21 0 124 44 236.5t124 201.5q50-89 123.5-166.5t142.5-124.5 130.5-81 99.5-48l37-13q4-1 13-3.5t13-4.5zM732 681q-120-213-244-378-138 65-234 186t-128 272q302 0 606-80zM1416 1000q-210-60-409-29 87 239 128 469 111-75 185-189.5t96-250.5zM611 259q-1 0-2 1 1-1 2-1zM1201 404q-185-164-433-164-76 0-155 19 131 170 246 382 69-26 130-60.5t96.5-61.5 65.5-57 37.5-40.5zM1424 889q-3-232-149-410l-1 1q-9 12-19 24.5t-43.5 44.5-71 60.5-100 65-131.5 64.5q25 53 44 95 2 5 6.5 17t7.5 17q36-5 74.5-7t73.5-2 69 1.5 64 4 56.5 5.5 48 6.5 36.5 6 25 4.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"drivers-license-o\":{width:2048,height:1792,paths:[{\nd:\"M896 1212q0 55-31.5 93.5t-75.5 38.5h-426q-44 0-75.5-38.5t-31.5-93.5q0-54 7.5-100.5t24.5-90 51-68.5 81-25q64 64 156 64t156-64q47 0 81 25t51 68.5 24.5 90 7.5 100.5zM768 768q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1184v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1408 928v64q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h320q14 0 23 9t9 23zM1792 928v64q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 672v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1920 1504v-1120h-1792v1120q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"drivers-license\":{width:2048,height:1792,paths:[{d:\"M896 1212q0-54-7.5-100.5t-24.5-90-51-68.5-81-25q-64 64-156 64t-156-64q-47 0-81 25t-51 68.5-24.5 90-7.5 100.5q0 55 31.5 93.5t75.5 38.5h426q44 0 75.5-38.5t31.5-93.5zM768 768q0-80-56-136t-136-56-136 56-56 136 56 136 136 56 136-56 56-136zM1792 1248v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1408 992v-64q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23-9t9-23zM1792 992v-64q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v64q0 14 9 23t23 9h192q14 0 23-9t9-23zM1792 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM128 384h1792v-96q0-14-9-23t-23-9h-1728q-14 0-23 9t-9 23v96zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({dropbox:{width:1792,height:1792,paths:[{d:\"M402 707l494 305-342 285-490-319zM1388 1262v108l-490 293v1l-1-1-1 1v-1l-489-293v-108l147 96 342-284v-2l1 1 1-1v2l343 284zM554 118l342 285-494 304-338-270zM1390 707l338 271-489 319-343-285zM1239 118l489 319-338 270-494-304z\"}]}}),h.register({drupal:{width:1536,height:1792,paths:[{d:\"M1167 1586q-5-19-24-5-30 22-87 39t-131 17q-129 0-193-49-5-4-13-4-11 0-26 12-7 6-7.5 16t7.5 20q34 32 87.5 46t102.5 12.5 99-4.5q41-4 84.5-20.5t65-30 28.5-20.5q12-12 7-29zM1128 1471q-19-47-39-61-23-15-76-15-47 0-71 10-29 12-78 56-26 24-12 44 9 8 17.5 4.5t31.5-23.5q3-2 10.5-8.5t10.5-8.5 10-7 11.5-7 12.5-5 15-4.5 16.5-2.5 20.5-1q27 0 44.5 7.5t23 14.5 13.5 22q10 17 12.5 20t12.5-1q23-12 14-34zM1483 1190q0-22-5-44.5t-16.5-45-34-36.5-52.5-14q-33 0-97 41.5t-129 83.5-101 42q-27 1-63.5-19t-76-49-83.5-58-100-49-111-19q-115 1-197 78.5t-84 178.5q-2 112 74 164 29 20 62.5 28.5t103.5 8.5q57 0 132-32.5t134-71 120-70.5 93-31q26 1 65 31.5t71.5 67 68 67.5 55.5 32q35 3 58.5-14t55.5-63q28-41 42.5-101t14.5-106zM1536 1030q0 164-62 304.5t-166 236-242.5 149.5-290.5 54-293-57.5-247.5-157-170.5-241.5-64-302q0-89 19.5-172.5t49-145.5 70.5-118.5 78.5-94 78.5-69.5 64.5-46.5 42.5-24.5q14-8 51-26.5t54.5-28.5 48-30 60.5-44q36-28 58-72.5t30-125.5q129 155 186 193 44 29 130 68t129 66q21 13 39 25t60.5 46.5 76 70.5 75 95 69 122 47 148.5 19.5 177.5z\"}]}}),h.register({edge:{width:1792,height:1792,paths:[{d:\"M69 795h1q16-126 58.5-241.5t115-217 167.5-176 223.5-117.5 276.5-43q231 0 414 105.5t294 303.5q104 187 104 442v188h-1125q1 111 53.5 192.5t136.5 122.5 189.5 57 213 3 208-46.5 173.5-84.5v377q-92 55-229.5 92t-312.5 38-316-53q-189-73-311.5-249t-124.5-372q-3-242 111-412t325-268q-48 60-78 125.5t-46 159.5h635q8-77-8-140t-47-101.5-70.5-66.5-80.5-41-75-20.5-56-8.5l-22-1q-135 5-259.5 44.5t-223.5 104.5-176 140.5-138 163.5z\"}]}}),h.register({edit:{width:1792,height:1792,paths:[{d:\"M888 1184l116-116-152-152-116 116v56h96v96h56zM1328 464q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zM1408 1058v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zM1312 320l288 288-672 672h-288v-288zM1756 452l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z\"}]}}),h.register({eercast:{width:1792,height:1792,paths:[{d:\"M1341 784q29-44-6.5-129.5t-121.5-142.5q-58-39-125.5-53.5t-118-4.5-68.5 37q-12 23-4.5 28t42.5 10q23 3 38.5 5t44.5 9.5 56 17.5q36 13 67.5 31.5t53 37 40 38.5 30.5 38 22 34.5 16.5 28.5 12 18.5 10.5 6 11-9.5zM1704 1358q-52 127-148.5 220t-214.5 141.5-253 60.5-266-13.5-251-91-210-161.5-141.5-235.5-46.5-303.5q1-41 8.5-84.5t12.5-64 24-80.5 23-73q-51 208 1 397t173 318 291 206 346 83 349-74.5 289-244.5q20-27 18-14 0 4-4 14zM1465 909q0 104-40.5 199t-108.5 164-162 109.5-198 40.5-198-40.5-162-109.5-108.5-164-40.5-199 40.5-199 108.5-164 162-109.5 198-40.5 198 40.5 162 109.5 108.5 164 40.5 199zM1752 621q-65-147-180.5-251t-253-153.5-292-53.5-301 36.5-275.5 129-220 211.5-131 297-10 373q-49-161-51.5-311.5t35.5-272.5 109-227 165.5-180.5 207-126 232-71 242.5-9 236 54 216 124.5 178 197q33 50 62 121t31 112zM1690 963q12-244-136.5-416t-396.5-240q-8 0-10-5t24-8q125 4 230 50t173 120 116 168.5 58.5 199-1 208-61.5 197.5-122.5 167-185 117.5-248.5 46.5q108-30 201.5-80t174-123 129.5-176.5 55-225.5z\"}]}}),h.register({eject:{width:1538,height:1792,paths:[{d:\"M14 979l710-710q19-19 45-19t45 19l710 710q19 19 13 32t-32 13h-1472q-26 0-32-13t13-32zM1473 1536h-1408q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1408q26 0 45 19t19 45v256q0 26-19 45t-45 19z\"}]}}),h.register({\"ellipsis-h\":{width:1408,height:1792,paths:[{d:\"M384 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM896 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM1408 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68z\"}]}}),h.register({\"ellipsis-v\":{width:384,height:1792,paths:[{d:\"M384 1248v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM384 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM384 224v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68z\"}]}}),h.register({empire:{width:1792,height:1792,paths:[{d:\"M874 1638v66q-208-6-385-109.5t-283-275.5l58-34q29 49 73 99l65-57q148 168 368 212l-17 86q65 12 121 13zM276 1108l-83 28q22 60 49 112l-57 33q-98-180-98-385t98-385l57 33q-30 56-49 112l82 28q-35 100-35 212 0 109 36 212zM1528 1285l58 34q-106 172-283 275.5t-385 109.5v-66q56-1 121-13l-17-86q220-44 368-212l65 57q44-50 73-99zM1377 731l-233 80q14 42 14 85t-14 85l232 80q-31 92-98 169l-185-162q-57 67-147 85l48 241q-52 10-98 10t-98-10l48-241q-90-18-147-85l-185 162q-67-77-98-169l232-80q-14-42-14-85t14-85l-233-80q33-93 99-169l185 162q59-68 147-86l-48-240q44-10 98-10t98 10l-48 240q88 18 147 86l185-162q66 76 99 169zM874 88v66q-65 2-121 13l17 86q-220 42-368 211l-65-56q-38 42-73 98l-57-33q106-172 282-275.5t385-109.5zM1705 896q0 205-98 385l-57-33q27-52 49-112l-83-28q36-103 36-212 0-112-35-212l82-28q-19-56-49-112l57-33q98 180 98 385zM1585 473l-57 33q-35-56-73-98l-65 56q-148-169-368-211l17-86q-56-11-121-13v-66q209 6 385 109.5t282 275.5zM1748 896q0-173-67.5-331t-181.5-272-272-181.5-331-67.5-331 67.5-272 181.5-181.5 272-67.5 331 67.5 331 181.5 272 272 181.5 331 67.5 331-67.5 272-181.5 181.5-272 67.5-331zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({\"envelope-o\":{width:1792,height:1792,paths:[{d:\"M1664 1504v-768q-32 36-69 66-268 206-426 338-51 43-83 67t-86.5 48.5-102.5 24.5h-1-1q-48 0-102.5-24.5t-86.5-48.5-83-67q-158-132-426-338-37-30-69-66v768q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1664 453v-11-13.5t-0.5-13-3-12.5-5.5-9-9-7.5-14-2.5h-1472q-13 0-22.5 9.5t-9.5 22.5q0 168 147 284 193 152 401 317 6 5 35 29.5t46 37.5 44.5 31.5 50.5 27.5 43 9h1 1q20 0 43-9t50.5-27.5 44.5-31.5 46-37.5 35-29.5q208-165 401-317 54-43 100.5-115.5t46.5-131.5zM1792 416v1088q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"envelope-open-o\":{width:1792,height:1792,paths:[{d:\"M1474 913l39 51q8 11 6.5 23.5t-11.5 20.5q-43 34-126.5 98.5t-146.5 113-67 51.5q-39 32-60 48t-60.5 41-76.5 36.5-74 11.5h-1-1q-37 0-74-11.5t-76-36.5-61-41.5-60-47.5q-5-4-65-50.5t-143.5-111-122.5-94.5q-11-8-12.5-20.5t6.5-23.5l37-52q8-11 21.5-13t24.5 7q94 73 306 236 5 4 43.5 35t60.5 46.5 56.5 32.5 58.5 17h1 1q24 0 58.5-17t56.5-32.5 60.5-46.5 43.5-35q258-198 313-242 11-8 24-6.5t21 12.5zM1664 1632v-928q-90-83-159-139-91-74-389-304-3-2-43-35t-61-48-56-32.5-59-17.5h-1-1q-24 0-59 17.5t-56 32.5-61 48-43 35q-215 166-315.5 245.5t-129.5 104-82 74.5q-14 12-21 19v928q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1792 704v928q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-928q0-56 41-94 123-114 350-290.5t233-181.5q36-30 59-47.5t61.5-42 76-36.5 74.5-12h1 1q37 0 74.5 12t76 36.5 61.5 42 59 47.5q43 36 156 122t226 177 201 173q41 38 41 94z\"}]}}),h.register({\"envelope-open\":{width:1792,height:1792,paths:[{d:\"M1792 654v978q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-978q0-15 11-24 8-7 39-34.5t41.5-36 45.5-37.5 70-55.5 96-73 143.5-107 192.5-140.5q5-4 52.5-40t71.5-52.5 64-35 69-18.5 69 18.5 65 35.5 71 52 52 40q110 80 192.5 140.5t143.5 107 96 73 70 55.5 45.5 37.5 41.5 36 39 34.5q11 9 11 24zM1228 1239q263-191 345-252 11-8 12.5-20.5t-6.5-23.5l-38-52q-8-11-21-12.5t-24 6.5q-231 169-343 250-5 3-52 39t-71.5 52.5-64.5 35-69 18.5-69-18.5-64.5-35-71.5-52.5-52-39q-186-134-343-250-11-8-24-6.5t-21 12.5l-38 52q-8 11-6.5 23.5t12.5 20.5q82 61 345 252 10 8 50 38t65 47 64 39.5 77.5 33.5 75.5 11 75.5-11 79-34.5 64.5-39.5 65-47.5 48-36.5z\"}]}}),h.register({\"envelope-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM1280 1184v-436q-31 35-64 55-34 22-132.5 85t-151.5 99q-98 69-164 69v0 0q-66 0-164-69-47-32-142-92.5t-142-92.5q-12-8-33-27t-31-27v436q0 40 28 68t68 28h832q40 0 68-28t28-68zM1280 611q0-41-27.5-70t-68.5-29h-832q-40 0-68 28t-28 68q0 37 30.5 76.5t67.5 64.5q47 32 137.5 89t129.5 83q3 2 17 11.5t21 14 21 13 23.5 13 21.5 9.5 22.5 7.5 20.5 2.5 20.5-2.5 22.5-7.5 21.5-9.5 23.5-13 21-13 21-14 17-11.5l267-174q35-23 66.5-62.5t31.5-73.5z\"}]}}),h.register({envelope:{width:1792,height:1792,paths:[{d:\"M1792 710v794q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-794q44 49 101 87 362 246 497 345 57 42 92.5 65.5t94.5 48 110 24.5h1 1q51 0 110-24.5t94.5-48 92.5-65.5q170-123 498-345 57-39 100-87zM1792 416q0 79-49 151t-122 123q-376 261-468 325-10 7-42.5 30.5t-54 38-52 32.5-57.5 27-50 9h-1-1q-23 0-50-9t-57.5-27-52-32.5-54-38-42.5-30.5q-91-64-262-182.5t-205-142.5q-62-42-117-115.5t-55-136.5q0-78 41.5-130t118.5-52h1472q65 0 112.5 47t47.5 113z\"}]}}),h.register({envira:{width:1792,height:1792,paths:[{d:\"M896 816q-104-196-160-278-139-202-347-318-34-19-70-36-89-40-94-32t34 38l39 31q62 43 112.5 93.5t94.5 116.5 70.5 113 70.5 131q9 17 13 25 44 84 84 153t98 154 115.5 150 131 123.5 148.5 90.5q153 66 154 60 1-3-49-37-53-36-81-57-77-58-179-211t-185-310zM549 1359q-76-60-132.5-125t-98-143.5-71-154.5-58.5-186-52-209-60.5-252-76.5-289q273 0 497.5 36t379 92 271 144.5 185.5 172.5 110 198.5 56 199.5 12.5 198.5-9.5 173-20 143.5-13 107l323 327h-104l-281-285q-22 2-91.5 14t-121.5 19-138 6-160.5-17-167.5-59-179-111z\"}]}}),h.register({eraser:{width:1920,height:1792,paths:[{d:\"M896 1408l336-384h-768l-336 384h768zM1909 331q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z\"}]}}),h.register({etsy:{width:1536,height:1792,paths:[{d:\"M518 183v655q103 1 191.5-1.5t125.5-5.5l37-3q68-2 90.5-24.5t39.5-94.5l33-142h103l-14 322 7 319h-103l-29-127q-15-68-45-93t-84-26q-87-8-352-8v556q0 78 43.5 115.5t133.5 37.5h357q35 0 59.5-2t55-7.5 54-18 48.5-32 46-50.5 39-73l93-216h89q-6 37-31.5 252t-30.5 276q-146-5-263.5-8t-162.5-4h-44-628l-376 12v-102l127-25q67-13 91.5-37t25.5-79l8-643q3-402-8-645-2-61-25.5-84t-91.5-36l-127-24v-102l376 12h702q139 0 374-27-6 68-14 194.5t-12 219.5l-5 92h-93l-32-124q-31-121-74-179.5t-113-58.5h-548q-28 0-35.5 8.5t-7.5 30.5z\"}]}}),h.register({eur:{width:1024,height:1792,paths:[{d:\"M976 1307l35 159q3 12-3 22.5t-17 14.5l-5 1q-4 2-10.5 3.5t-16 4.5-21.5 5.5-25.5 5-30 5-33.5 4.5-36.5 3-38.5 1q-234 0-409-130.5t-238-351.5h-95q-13 0-22.5-9.5t-9.5-22.5v-113q0-13 9.5-22.5t22.5-9.5h66q-2-57 1-105h-67q-14 0-23-9t-9-23v-114q0-14 9-23t23-9h98q67-210 243.5-338t400.5-128q102 0 194 23 11 3 20 15 6 11 3 24l-43 159q-3 13-14 19.5t-24 2.5l-4-1q-4-1-11.5-2.5l-17.5-3.5t-22.5-3.5-26-3-29-2.5-29.5-1q-126 0-226 64t-150 176h468q16 0 25 12 10 12 7 26l-24 114q-5 26-32 26h-488q-3 37 0 105h459q15 0 25 12 9 12 6 27l-24 112q-2 11-11 18.5t-20 7.5h-387q48 117 149.5 185.5t228.5 68.5q18 0 36-1.5t33.5-3.5 29.5-4.5 24.5-5 18.5-4.5l12-3 5-2q13-5 26 2 12 7 15 21z\"}]}}),h.register({euro:{width:1024,height:1792,paths:[{d:\"M976 1307l35 159q3 12-3 22.5t-17 14.5l-5 1q-4 2-10.5 3.5t-16 4.5-21.5 5.5-25.5 5-30 5-33.5 4.5-36.5 3-38.5 1q-234 0-409-130.5t-238-351.5h-95q-13 0-22.5-9.5t-9.5-22.5v-113q0-13 9.5-22.5t22.5-9.5h66q-2-57 1-105h-67q-14 0-23-9t-9-23v-114q0-14 9-23t23-9h98q67-210 243.5-338t400.5-128q102 0 194 23 11 3 20 15 6 11 3 24l-43 159q-3 13-14 19.5t-24 2.5l-4-1q-4-1-11.5-2.5l-17.5-3.5t-22.5-3.5-26-3-29-2.5-29.5-1q-126 0-226 64t-150 176h468q16 0 25 12 10 12 7 26l-24 114q-5 26-32 26h-488q-3 37 0 105h459q15 0 25 12 9 12 6 27l-24 112q-2 11-11 18.5t-20 7.5h-387q48 117 149.5 185.5t228.5 68.5q18 0 36-1.5t33.5-3.5 29.5-4.5 24.5-5 18.5-4.5l12-3 5-2q13-5 26 2 12 7 15 21z\"}]}}),h.register({exchange:{width:1792,height:1792,paths:[{d:\"M1792 1184v192q0 13-9.5 22.5t-22.5 9.5h-1376v192q0 13-9.5 22.5t-22.5 9.5q-12 0-24-10l-319-320q-9-9-9-22 0-14 9-23l320-320q9-9 23-9 13 0 22.5 9.5t9.5 22.5v192h1376q13 0 22.5 9.5t9.5 22.5zM1792 640q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-1376q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1376v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z\"}]}}),h.register({\"exclamation-circle\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM896 1375v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zM894 1031l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z\"}]}}),h.register({\"exclamation-triangle\":{width:1792,height:1792,paths:[{d:\"M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zM1022 1001l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zM1008 67l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z\"}]}}),h.register({exclamation:{width:640,height:1792,paths:[{d:\"M512 1248v224q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-224q0-26 19-45t45-19h256q26 0 45 19t19 45zM542 192l-28 768q-1 26-20.5 45t-45.5 19h-256q-26 0-45.5-19t-20.5-45l-28-768q-1-26 17.5-45t44.5-19h320q26 0 44.5 19t17.5 45z\"}]}}),h.register({expand:{width:1536,height:1792,paths:[{d:\"M755 1056q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23zM1536 192v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45z\"}]}}),h.register({expeditedssl:{width:1792,height:1792,paths:[{d:\"M896 64q-169 0-323 66t-265.5 177.5-177.5 265.5-66 323 66 323 177.5 265.5 265.5 177.5 323 66 323-66 265.5-177.5 177.5-265.5 66-323-66-323-177.5-265.5-265.5-177.5-323-66zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM496 832q16 0 16 16v480q0 16-16 16h-32q-16 0-16-16v-480q0-16 16-16h32zM896 896q53 0 90.5 37.5t37.5 90.5q0 35-17.5 64t-46.5 46v114q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-114q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5zM896 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM544 608v96q0 14 9 23t23 9h64q14 0 23-9t9-23v-96q0-93 65.5-158.5t158.5-65.5 158.5 65.5 65.5 158.5v96q0 14 9 23t23 9h64q14 0 23-9t9-23v-96q0-146-103-249t-249-103-249 103-103 249zM1408 1344v-512q0-26-19-45t-45-19h-896q-26 0-45 19t-19 45v512q0 26 19 45t45 19h896q26 0 45-19t19-45z\"}]}}),h.register({\"external-link-square\":{width:1536,height:1792,paths:[{d:\"M1280 928v-480q0-26-19-45t-45-19h-480q-42 0-59 39-17 41 14 70l144 144-534 534q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l534-534 144 144q18 19 45 19 12 0 25-5 39-17 39-59zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"external-link\":{width:1792,height:1792,paths:[{d:\"M1408 928v320q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-320q0-14 9-23t23-9h64q14 0 23 9t9 23zM1792 64v512q0 26-19 45t-45 19-45-19l-176-176-652 652q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l652-652-176-176q-19-19-19-45t19-45 45-19h512q26 0 45 19t19 45z\"}]}}),h.register({\"eye-slash\":{width:1792,height:1792,paths:[{d:\"M555 1335l78-141q-87-63-136-159t-49-203q0-121 61-225-229 117-381 353 167 258 427 375zM944 576q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zM1307 385q0 7-1 9-106 189-316 567t-315 566l-49 89q-10 16-28 16-12 0-134-70-16-10-16-28 0-12 44-87-143-65-263.5-173t-208.5-245q-20-31-20-69t20-69q153-235 380-371t496-136q89 0 180 17l54-97q10-16 28-16 5 0 18 6t31 15.5 33 18.5 31.5 18.5 19.5 11.5q16 10 16 27zM1344 832q0 139-79 253.5t-209 164.5l280-502q8 45 8 84zM1792 960q0 35-20 69-39 64-109 145-150 172-347.5 267t-419.5 95l74-132q212-18 392.5-137t301.5-307q-115-179-282-294l63-112q95 64 182.5 153t144.5 184q20 34 20 69z\"}]}}),h.register({eye:{width:1792,height:1792,paths:[{d:\"M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zM944 576q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zM1792 960q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z\"}]}}),h.register({eyedropper:{width:1792,height:1792,paths:[{d:\"M1698 94q94 94 94 226.5t-94 225.5l-225 223 104 104q10 10 10 23t-10 23l-210 210q-10 10-23 10t-23-10l-105-105-603 603q-37 37-90 37h-203l-256 128-64-64 128-256v-203q0-53 37-90l603-603-105-105q-10-10-10-23t10-23l210-210q10-10 23-10t23 10l104 104 223-225q93-94 225.5-94t226.5 94zM512 1472l576-576-192-192-576 576v192h192z\"}]}}),h.register({fa:{width:1536,height:1792,paths:[{d:\"M1536 512v839q0 48-49 62-174 52-338 52-73 0-215.5-29.5t-227.5-29.5q-164 0-370 48v338h-160v-1368q-63-25-101-81t-38-124q0-91 64-155t155-64 155 64 64 155q0 68-38 124t-101 81v68q190-44 343-44 99 0 198 15 14 2 111.5 22.5t149.5 20.5q77 0 165-18 11-2 80-21t89-19q26 0 45 19t19 45z\"}]}}),h.register({\"facebook-f\":{width:1024,height:1792,paths:[{d:\"M959 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z\"}]}}),h.register({\"facebook-official\":{width:1536,height:1792,paths:[{d:\"M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z\"}]}}),h.register({\"facebook-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-188v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-532q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z\"}]}}),h.register({facebook:{width:1024,height:1792,paths:[{d:\"M959 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z\"}]}}),h.register({\"fast-backward\":{width:1792,height:1792,paths:[{d:\"M1747 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v710q0 26-13 32t-32-13l-710-710q-9-9-13-19v678q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h128q26 0 45 19t19 45v678q4-10 13-19l710-710q19-19 32-13t13 32v710q4-10 13-19z\"}]}}),h.register({\"fast-forward\":{width:1792,height:1792,paths:[{d:\"M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-710q0-26 13-32t32 13l710 710q9 9 13 19v-678q0-26 19-45t45-19h128q26 0 45 19t19 45v1408q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-678q-4 10-13 19l-710 710q-19 19-32 13t-13-32v-710q-4 10-13 19z\"}]}}),h.register({fax:{width:1792,height:1792,paths:[{d:\"M288 384q66 0 113 47t47 113v1088q0 66-47 113t-113 47h-128q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h128zM1664 547q58 34 93 93t35 128v768q0 106-75 181t-181 75h-864q-66 0-113-47t-47-113v-1536q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v163zM928 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM928 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM928 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1536 640v-256h-160q-40 0-68-28t-28-68v-160h-640v512h896z\"}]}}),h.register({feed:{width:1408,height:1792,paths:[{d:\"M384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1467q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zM1408 1469q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z\"}]}}),h.register({female:{width:1280,height:1792,paths:[{d:\"M1280 1056q0 40-28 68t-68 28q-51 0-80-43l-227-341h-45v132l247 411q9 15 9 33 0 26-19 45t-45 19h-192v272q0 46-33 79t-79 33h-160q-46 0-79-33t-33-79v-272h-192q-26 0-45-19t-19-45q0-18 9-33l247-411v-132h-45l-227 341q-29 43-80 43-40 0-68-28t-28-68q0-29 16-53l256-384q73-107 176-107h384q103 0 176 107l256 384q16 24 16 53zM864 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({\"fighter-jet\":{width:1920,height:1792,paths:[{d:\"M1920 960q-1 32-288 96l-352 32-224 64h-64l-293 352h69q26 0 45 4.5t19 11.5-19 11.5-45 4.5h-96-160-64v-32h64v-416h-160l-192 224h-96l-32-32v-192h32v-32h128v-8l-192-24v-128l192-24v-8h-128v-32h-32v-192l32-32h96l192 224h160v-416h-64v-32h64 160 96q26 0 45 4.5t19 11.5-19 11.5-45 4.5h-69l293 352h64l224 64 352 32q128 28 200 52t80 34z\"}]}}),h.register({\"file-archive-o\":{width:1536,height:1792,paths:[{d:\"M640 384v-128h-128v128h128zM768 512v-128h-128v128h128zM640 640v-128h-128v128h128zM768 768v-128h-128v128h128zM1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-128v128h-128v-128h-512v1536h1280zM781 943l107 349q8 27 8 52 0 83-72.5 137.5t-183.5 54.5-183.5-54.5-72.5-137.5q0-25 8-52 21-63 120-396v-128h128v128h79q22 0 39 13t23 34zM640 1408q53 0 90.5-19t37.5-45-37.5-45-90.5-19-90.5 19-37.5 45 37.5 45 90.5 19z\"}]}}),h.register({\"file-audio-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM620 850q20 8 20 30v544q0 22-20 30-8 2-12 2-12 0-23-9l-166-167h-131q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h131l166-167q16-15 35-7zM1037 1539q31 0 50-24 129-159 129-363t-129-363q-16-21-43-24t-47 14q-21 17-23.5 43.5t14.5 47.5q100 123 100 282t-100 282q-17 21-14.5 47.5t23.5 42.5q18 15 40 15zM826 1391q27 0 47-20 87-93 87-219t-87-219q-18-19-45-20t-46 17-20 44.5 18 46.5q52 57 52 131t-52 131q-19 20-18 46.5t20 44.5q20 17 44 17z\"}]}}),h.register({\"file-code-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM480 768q8-11 21-12.5t24 6.5l51 38q11 8 12.5 21t-6.5 24l-182 243 182 243q8 11 6.5 24t-12.5 21l-51 38q-11 8-24 6.5t-21-12.5l-226-301q-14-19 0-38zM1282 1069q14 19 0 38l-226 301q-8 11-21 12.5t-24-6.5l-51-38q-11-8-12.5-21t6.5-24l182-243-182-243q-8-11-6.5-24t12.5-21l51-38q11-8 24-6.5t21 12.5zM662 1530q-13-2-20.5-13t-5.5-24l138-831q2-13 13-20.5t24-5.5l63 10q13 2 20.5 13t5.5 24l-138 831q-2 13-13 20.5t-24 5.5z\"}]}}),h.register({\"file-excel-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM429 1430v106h281v-106h-75l103-161q5-7 10-16.5t7.5-13.5 3.5-4h2q1 4 5 10 2 4 4.5 7.5t6 8 6.5 8.5l107 161h-76v106h291v-106h-68l-192-273 195-282h67v-107h-279v107h74l-103 159q-4 7-10 16.5t-9 13.5l-2 3h-2q-1-4-5-10-6-11-17-23l-106-159h76v-107h-290v107h68l189 272-194 283h-68z\"}]}}),h.register({\"file-image-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z\"}]}}),h.register({\"file-movie-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM768 768q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zM1260 770q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z\"}]}}),h.register({\"file-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280z\"}]}}),h.register({\"file-pdf-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM894 1071q33 26 84 56 59-7 117-7 147 0 177 49 16 22 2 52 0 1-1 2l-2 2v1q-6 38-71 38-48 0-115-20t-130-53q-221 24-392 83-153 262-242 262-15 0-28-7l-24-12q-1-1-6-5-10-10-6-36 9-40 56-91.5t132-96.5q14-9 23 6 2 2 2 4 52-85 107-197 68-136 104-262-24-82-30.5-159.5t6.5-127.5q11-40 42-40h21 1q23 0 35 15 18 21 9 68-2 6-4 8 1 3 1 8v30q-2 123-14 192 55 164 146 238zM318 1482q52-24 137-158-51 40-87.5 84t-49.5 74zM716 562q-15 42-2 132 1-7 7-44 0-3 7-43 1-4 4-8-1-1-1-2-1-2-1-3-1-22-13-36 0 1-1 2v2zM592 1223q135-54 284-81-2-1-13-9.5t-16-13.5q-76-67-127-176-27 86-83 197-30 56-45 83zM1238 1207q-24-24-140-24 76 28 124 28 14 0 18-1 0-1-2-3z\"}]}}),h.register({\"file-photo-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z\"}]}}),h.register({\"file-picture-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z\"}]}}),h.register({\"file-powerpoint-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM416 1430v106h327v-106h-93v-167h137q76 0 118-15 67-23 106.5-87t39.5-146q0-81-37-141t-100-87q-48-19-130-19h-368v107h92v555h-92zM769 1150h-119v-268h120q52 0 83 18 56 33 56 115 0 89-62 120-31 15-78 15z\"}]}}),h.register({\"file-sound-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM620 850q20 8 20 30v544q0 22-20 30-8 2-12 2-12 0-23-9l-166-167h-131q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h131l166-167q16-15 35-7zM1037 1539q31 0 50-24 129-159 129-363t-129-363q-16-21-43-24t-47 14q-21 17-23.5 43.5t14.5 47.5q100 123 100 282t-100 282q-17 21-14.5 47.5t23.5 42.5q18 15 40 15zM826 1391q27 0 47-20 87-93 87-219t-87-219q-18-19-45-20t-46 17-20 44.5 18 46.5q52 57 52 131t-52 131q-19 20-18 46.5t20 44.5q20 17 44 17z\"}]}}),h.register({\"file-text-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM384 800q0-14 9-23t23-9h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64zM1120 1024q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704zM1120 1280q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704z\"}]}}),h.register({\"file-text\":{width:1536,height:1792,paths:[{d:\"M1468 476q14 14 28 36h-472v-472q22 14 36 28zM992 640h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544q0 40 28 68t68 28zM1152 1376v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1152 1120v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1152 864v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23z\"}]}}),h.register({\"file-video-o\":{width:1536,height:1792,paths:[{\nd:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM768 768q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zM1260 770q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z\"}]}}),h.register({\"file-word-o\":{width:1536,height:1792,paths:[{d:\"M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM233 768v107h70l164 661h159l128-485q7-20 10-46 2-16 2-24h4l3 24q1 3 3.5 20t5.5 26l128 485h159l164-661h70v-107h-300v107h90l-99 438q-5 20-7 46l-2 21h-4q0-3-0.5-6.5t-1.5-8-1-6.5q-1-5-4-21t-5-25l-144-545h-114l-144 545q-2 9-4.5 24.5t-3.5 21.5l-4 21h-4l-2-21q-2-26-7-46l-99-438h90v-107h-300z\"}]}}),h.register({\"file-zip-o\":{width:1536,height:1792,paths:[{d:\"M640 384v-128h-128v128h128zM768 512v-128h-128v128h128zM640 640v-128h-128v128h128zM768 768v-128h-128v128h128zM1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-128v128h-128v-128h-512v1536h1280zM781 943l107 349q8 27 8 52 0 83-72.5 137.5t-183.5 54.5-183.5-54.5-72.5-137.5q0-25 8-52 21-63 120-396v-128h128v128h79q22 0 39 13t23 34zM640 1408q53 0 90.5-19t37.5-45-37.5-45-90.5-19-90.5 19-37.5 45 37.5 45 90.5 19z\"}]}}),h.register({file:{width:1536,height:1792,paths:[{d:\"M1024 512v-472q22 14 36 28l408 408q14 14 28 36h-472zM896 544q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z\"}]}}),h.register({\"files-o\":{width:1792,height:1792,paths:[{d:\"M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zM1152 597l-299 299h299v-299zM512 213l-299 299h299v-299zM708 860l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zM1664 1664v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z\"}]}}),h.register({film:{width:1920,height:1792,paths:[{d:\"M384 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM384 1216v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM384 832v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1408 1600v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zM384 448v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1408 832v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zM1792 1216v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 832v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 448v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1920 288v1344q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1344q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({filter:{width:1408,height:1792,paths:[{d:\"M1403 295q17 41-14 70l-493 493v742q0 42-39 59-13 5-25 5-27 0-45-19l-256-256q-19-19-19-45v-486l-493-493q-31-29-14-70 17-39 59-39h1280q42 0 59 39z\"}]}}),h.register({\"fire-extinguisher\":{width:1408,height:1792,paths:[{d:\"M512 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 160v320q0 16-12 25-8 7-20 7-4 0-7-1l-448-96q-11-2-18-11t-7-20h-256v102q111 23 183.5 111t72.5 203v800q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-800q0-106 62.5-190.5t161.5-114.5v-111h-32q-59 0-115 23.5t-91.5 53-66 66.5-40.5 53.5-14 24.5q-17 35-57 35-16 0-29-7-23-12-31.5-37t3.5-49q5-10 14.5-26t37.5-53.5 60.5-70 85-67 108.5-52.5q-25-42-25-86 0-66 47-113t113-47 113 47 47 113q0 33-14 64h302q0-11 7-20t18-11l448-96q3-1 7-1 12 0 20 7 12 9 12 25z\"}]}}),h.register({fire:{width:1408,height:1792,paths:[{d:\"M1408 1696v64q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1152 640q0 78-24.5 144t-64 112.5-87.5 88-96 77.5-87.5 72-64 81.5-24.5 96.5q0 96 67 224l-4-1 1 1q-90-41-160-83t-138.5-100-113.5-122.5-72.5-150.5-27.5-184q0-78 24.5-144t64-112.5 87.5-88 96-77.5 87.5-72 64-81.5 24.5-96.5q0-94-66-224l3 1-1-1q90 41 160 83t138.5 100 113.5 122.5 72.5 150.5 27.5 184z\"}]}}),h.register({firefox:{width:1792,height:1792,paths:[{d:\"M903 1792q-283 0-504.5-150.5t-329.5-398.5q-58-131-67-301t26-332.5 111-312 179-242.5l-11 281q11-14 68-15.5t70 15.5q42-81 160.5-138t234.5-59q-54 45-119.5 148.5t-58.5 163.5q25 8 62.5 13.5t63 7.5 68 4 50.5 3q15 5 9.5 45.5t-30.5 75.5q-5 7-16.5 18.5t-56.5 35.5-101 34l15 189-139-67q-18 43-7.5 81.5t36 66.5 65.5 41.5 81 6.5q51-9 98-34.5t83.5-45 73.5-17.5q61 4 89.5 33t19.5 65q-1 2-2.5 5.5t-8.5 12.5-18 15.5-31.5 10.5-46.5 1q-60 95-144.5 135.5t-209.5 29.5q74 61 162.5 82.5t168.5 6 154.5-52 128-87.5 80.5-104q43-91 39-192.5t-37.5-188.5-78.5-125q87 38 137 79.5t77 112.5q15-170-57.5-343t-209.5-284q265 77 412 279.5t151 517.5q2 127-40.5 255t-123.5 238-189 196-247.5 135.5-288.5 49.5z\"}]}}),h.register({\"first-order\":{width:1536,height:1792,paths:[{d:\"M1322 896q0 45-5 76l-236-14 224 78q-19 73-58 141l-214-103 177 158q-44 61-107 108l-157-178 103 215q-61 37-140 59l-79-228 14 240q-38 6-76 6t-76-6l14-238-78 226q-74-19-140-59l103-215-157 178q-59-43-108-108l178-158-214 104q-39-69-58-141l224-79-237 14q-5-42-5-76 0-35 5-77l238 14-225-79q19-73 58-140l214 104-177-159q46-61 107-108l158 178-103-215q67-39 140-58l77 224-13-236q36-6 75-6 38 0 76 6l-14 237 78-225q74 19 140 59l-103 214 158-178q61 47 107 108l-177 159 213-104q37 62 58 141l-224 78 237-14q5 31 5 77zM1352 896q0-160-78.5-295.5t-213-214-292.5-78.5q-119 0-227 46.5t-186.5 125-124.5 187.5-46 229q0 119 46 228t124.5 187.5 186.5 125 227 46.5q158 0 292.5-78.5t213-214 78.5-294.5zM1425 513v766l-657 383-657-383v-766l657-383zM768 1719l708-412v-823l-708-411-708 411v823zM1536 448v896l-768 448-768-448v-896l768-448z\"}]}}),h.register({\"flag-checkered\":{width:1792,height:1792,paths:[{d:\"M832 1000v-192q-181 16-384 117v185q205-96 384-110zM832 582v-197q-172 8-384 126v189q215-111 384-118zM1664 1045v-184q-235 116-384 71v-224q-20-6-39-15-5-3-33-17t-34.5-17-31.5-15-34.5-15.5-32.5-13-36-12.5-35-8.5-39.5-7.5-39.5-4-44-2q-23 0-49 3v222h19q102 0 192.5 29t197.5 82q19 9 39 15v188q42 17 91 17 120 0 293-92zM1664 618v-189q-169 91-306 91-45 0-78-8v196q148 42 384-90zM320 256q0 35-17.5 64t-46.5 46v1266q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-1266q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 39-35 57-10 5-17 9-218 116-369 116-88 0-158-35l-28-14q-64-33-99-48t-91-29-114-14q-102 0-235.5 44t-228.5 102q-15 9-33 9-16 0-32-8-32-19-32-56v-742q0-35 31-55 35-21 78.5-42.5t114-52 152.5-49.5 155-19q112 0 209 31t209 86q38 19 89 19 122 0 310-112 22-12 31-17 31-16 62 2 31 20 31 55z\"}]}}),h.register({\"flag-o\":{width:1792,height:1792,paths:[{d:\"M1664 1045v-616q-169 91-306 91-82 0-145-32-100-49-184-76.5t-178-27.5q-173 0-403 127v599q245-113 433-113 55 0 103.5 7.5t98 26 77 31 82.5 39.5l28 14q44 22 101 22 120 0 293-92zM320 256q0 35-17.5 64t-46.5 46v1266q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-1266q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 39-35 57-10 5-17 9-218 116-369 116-88 0-158-35l-28-14q-64-33-99-48t-91-29-114-14q-102 0-235.5 44t-228.5 102q-15 9-33 9-16 0-32-8-32-19-32-56v-742q0-35 31-55 35-21 78.5-42.5t114-52 152.5-49.5 155-19q112 0 209 31t209 86q38 19 89 19 122 0 310-112 22-12 31-17 31-16 62 2 31 20 31 55z\"}]}}),h.register({flag:{width:1792,height:1792,paths:[{d:\"M320 256q0 72-64 110v1266q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-1266q-64-38-64-110 0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 25-12.5 38.5t-39.5 27.5q-215 116-369 116-61 0-123.5-22t-108.5-48-115.5-48-142.5-22q-192 0-464 146-17 9-33 9-26 0-45-19t-19-45v-742q0-32 31-55 21-14 79-43 236-120 421-120 107 0 200 29t219 88q38 19 88 19 54 0 117.5-21t110-47 88-47 54.5-21q26 0 45 19t19 45z\"}]}}),h.register({flash:{width:896,height:1792,paths:[{d:\"M885 566q18 20 7 44l-540 1157q-13 25-42 25-4 0-14-2-17-5-25.5-19t-4.5-30l197-808-406 101q-4 1-12 1-18 0-31-11-18-15-13-39l201-825q4-14 16-23t28-9h328q19 0 32 12.5t13 29.5q0 8-5 18l-171 463 396-98q8-2 12-2 19 0 34 15z\"}]}}),h.register({flask:{width:1664,height:1792,paths:[{d:\"M1527 1448q56 89 21.5 152.5t-140.5 63.5h-1152q-106 0-140.5-63.5t21.5-152.5l503-793v-399h-64q-26 0-45-19t-19-45 19-45 45-19h512q26 0 45 19t19 45-19 45-45 19h-64v399zM748 723l-272 429h712l-272-429-20-31v-37-399h-128v399 37z\"}]}}),h.register({flickr:{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM698 896q0-88-62-150t-150-62-150 62-62 150 62 150 150 62 150-62 62-150zM1262 896q0-88-62-150t-150-62-150 62-62 150 62 150 150 62 150-62 62-150z\"}]}}),h.register({\"floppy-o\":{width:1536,height:1792,paths:[{d:\"M384 1536h768v-384h-768v384zM1280 1536h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zM896 608v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zM1536 640v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"}]}}),h.register({\"folder-o\":{width:1664,height:1792,paths:[{d:\"M1536 1312v-704q0-40-28-68t-68-28h-704q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v960q0 40 28 68t68 28h1216q40 0 68-28t28-68zM1664 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z\"}]}}),h.register({\"folder-open-o\":{width:1920,height:1792,paths:[{d:\"M1781 931q0-35-53-35h-1088q-40 0-85.5 21.5t-71.5 52.5l-294 363q-18 24-18 40 0 35 53 35h1088q40 0 86-22t71-53l294-363q18-22 18-39zM640 768h768v-160q0-40-28-68t-68-28h-576q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v853l256-315q44-53 116-87.5t140-34.5zM1909 931q0 62-46 120l-295 363q-43 53-116 87.5t-140 34.5h-1088q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158v160h192q54 0 99 24.5t67 70.5q15 32 15 68z\"}]}}),h.register({\"folder-open\":{width:1920,height:1792,paths:[{d:\"M1879 952q0 31-31 66l-336 396q-43 51-120.5 86.5t-143.5 35.5h-1088q-34 0-60.5-13t-26.5-43q0-31 31-66l336-396q43-51 120.5-86.5t143.5-35.5h1088q34 0 60.5 13t26.5 43zM1536 608v160h-832q-94 0-197 47.5t-164 119.5l-337 396-5 6q0-4-0.5-12.5t-0.5-12.5v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158z\"}]}}),h.register({folder:{width:1664,height:1792,paths:[{d:\"M1664 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z\"}]}}),h.register({\"font-awesome\":{width:1536,height:1792,paths:[{d:\"M1536 512v839q0 48-49 62-174 52-338 52-73 0-215.5-29.5t-227.5-29.5q-164 0-370 48v338h-160v-1368q-63-25-101-81t-38-124q0-91 64-155t155-64 155 64 64 155q0 68-38 124t-101 81v68q190-44 343-44 99 0 198 15 14 2 111.5 22.5t149.5 20.5q77 0 165-18 11-2 80-21t89-19q26 0 45 19t19 45z\"}]}}),h.register({font:{width:1664,height:1792,paths:[{d:\"M725 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zM0 1664l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h75 53q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-0.5 13.5t-0.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\"}]}}),h.register({fonticons:{width:1536,height:1792,paths:[{d:\"M0 128h1536v1536h-1536v-1536zM908 448l-12 33 75 83-31 114 25 25 107-57 107 57 25-25-31-114 75-83-12-33h-95l-53-96h-32l-53 96h-95zM641 611q32 0 44.5 16t11.5 63l174-21q0-55-17.5-92.5t-50.5-56-69-25.5-85-7q-133 0-199 57.5t-66 182.5v72h-96v128h76q20 0 20 8v382q0 14-5 20t-18 7l-73 7v88h448v-86l-149-14q-6-1-8.5-1.5t-3.5-2.5-0.5-4 1-7 0.5-10v-387h191l38-128h-231q-6 0-2-6t4-9v-80q0-27 1.5-40.5t7.5-28 19.5-20 36.5-5.5zM1248 1440v-86l-54-9q-7-1-9.5-2.5t-2.5-3 1-7.5 1-12v-520h-275l-23 101 83 22q23 7 23 27v370q0 14-6 18.5t-20 6.5l-70 9v86h352z\"}]}}),h.register({\"fort-awesome\":{width:1792,height:1792,paths:[{d:\"M640 1008v-224q0-16-16-16h-96q-16 0-16 16v224q0 16 16 16h96q16 0 16-16zM1152 1008v-224q0-16-16-16h-96q-16 0-16 16v224q0 16 16 16h96q16 0 16-16zM1664 1040v752h-640v-320q0-80-56-136t-136-56-136 56-56 136v320h-640v-752q0-16 16-16h96q16 0 16 16v112h128v-624q0-16 16-16h96q16 0 16 16v112h128v-112q0-16 16-16h96q16 0 16 16v112h128v-112q0-6 2.5-9.5t8.5-5 9.5-2 11.5 0 9 0.5v-391q-32-15-32-50 0-23 16.5-39t38.5-16 38.5 16 16.5 39q0 35-32 50v17q45-10 83-10 21 0 59.5 7.5t54.5 7.5q17 0 47-7.5t37-7.5q16 0 16 16v210q0 15-35 21.5t-62 6.5q-18 0-54.5-7.5t-55.5-7.5q-40 0-90 12v133q1 0 9-0.5t11.5 0 9.5 2 8.5 5 2.5 9.5v112h128v-112q0-16 16-16h96q16 0 16 16v112h128v-112q0-16 16-16h96q16 0 16 16v624h128v-112q0-16 16-16h96q16 0 16 16z\"}]}}),h.register({forumbee:{width:1536,height:1792,paths:[{d:\"M934 150q-317 121-556 362.5t-358 560.5q-20-89-20-176 0-208 102.5-384.5t278.5-279 384-102.5q82 0 169 19zM1203 269q93 65 164 155-389 113-674.5 400.5t-396.5 676.5q-93-72-155-162 112-386 395-671t667-399zM470 1603q115-356 379.5-622t619.5-384q40 92 54 195-292 120-516 345t-343 518q-103-14-194-52zM1536 1661q-193-50-367-115-135 84-290 107 109-205 274-370.5t369-275.5q-21 152-101 284 65 175 115 370z\"}]}}),h.register({forward:{width:1664,height:1792,paths:[{d:\"M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-710q0-26 13-32t32 13l710 710q19 19 19 45t-19 45l-710 710q-19 19-32 13t-13-32v-710q-4 10-13 19z\"}]}}),h.register({foursquare:{width:1280,height:1792,paths:[{d:\"M1000 434l37-194q5-23-9-40t-35-17h-712q-23 0-38.5 17t-15.5 37v1101q0 7 6 1l291-352q23-26 38-33.5t48-7.5h239q22 0 37-14.5t18-29.5q24-130 37-191 4-21-11.5-40t-36.5-19h-294q-29 0-48-19t-19-48v-42q0-29 19-47.5t48-18.5h346q18 0 35-13.5t20-29.5zM1227 212q-15 73-53.5 266.5t-69.5 350-35 173.5q-6 22-9 32.5t-14 32.5-24.5 33-38.5 21-58 10h-271q-13 0-22 10-8 9-426 494-22 25-58.5 28.5t-48.5-5.5q-55-22-55-98v-1410q0-55 38-102.5t120-47.5h888q95 0 127 53t10 159zM1227 212l-158 790q4-17 35-173.5t69.5-350 53.5-266.5z\"}]}}),h.register({\"free-code-camp\":{width:2304,height:1792,paths:[{d:\"M453 1637q0 21-16 37.5t-37 16.5q-1 0-13-3-63-15-162-140-225-284-225-676 0-341 213-614 39-51 95-103.5t94-52.5q19 0 35 13.5t16 32.5q0 27-63 90-98 102-147 184-119 199-119 449 0 281 123 491 50 85 136 173 2 3 14.5 16t19.5 21 17 20.5 14.5 23.5 4.5 21zM1796 1503q0 29-17.5 48.5t-46.5 19.5h-1081q-26 0-45-19t-19-45q0-29 17.5-48.5t46.5-19.5h1081q26 0 45 19t19 45zM1581 892q0 134-67 233-25 38-69.5 78.5t-83.5 60.5q-16 10-27 10-7 0-15-6t-8-12q0-9 19-30t42-46 42-67.5 19-88.5q0-76-35-130-29-42-46-42-3 0-3 5 0 12 7.5 35.5t7.5 36.5q0 22-21.5 35t-44.5 13q-66 0-66-76 0-15 1.5-44t1.5-44q0-25-10-46-13-25-42-53.5t-51-28.5q-5 0-7 0.5t-3.5 2.5-1.5 6q0 2 16 26t16 54q0 37-19 68t-46 54-53.5 46-45.5 54-19 68q0 98 42 160 29 43 79 63 16 5 17 10 1 2 1 5 0 16-18 16-6 0-33-11-119-43-195-139.5t-76-218.5q0-55 24.5-115.5t60-115 70.5-108.5 59.5-113.5 24.5-111.5q0-53-25-94-29-48-56-64-19-9-19-21 0-20 41-20 50 0 110 29 41 19 71 44.5t49.5 51 33.5 62.5 22 69 16 80q0 1 3 17.5t4.5 25 5.5 25 9 27 11 21.5 14.5 16.5 18.5 5.5q23 0 37-14t14-37q0-25-20-67t-20-52 10-10q27 0 93 70 72 76 102.5 156t30.5 186zM2304 921q0 274-138 503-19 32-48 72t-68 86.5-81 77-74 30.5q-16 0-31-15.5t-15-31.5q0-15 29-50.5t68.5-77 48.5-52.5q183-230 183-531 0-131-20.5-235t-72.5-211q-58-119-163-228-2-3-13-13.5t-16.5-16.5-15-17.5-15-20-9.5-18.5-4-19q0-19 16-35.5t35-16.5q70 0 196 169 98 131 146 273t60 314q2 42 2 64z\"}]}}),h.register({\"frown-o\":{width:1536,height:1792,paths:[{d:\"M1134 1229q8 25-4 48.5t-37 31.5-49-4-32-38q-25-80-92.5-129.5t-151.5-49.5-151.5 49.5-92.5 129.5q-8 26-31.5 38t-48.5 4q-26-8-38-31.5t-4-48.5q37-121 138-195t228-74 228 74 138 195zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"futbol-o\":{width:1792,height:1792,paths:[{d:\"M609 816l287-208 287 208-109 336h-355zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM1515 1350q149-203 149-454v-3l-102 89-240-224 63-323 134 12q-150-206-389-282l53 124-287 159-287-159 53-124q-239 76-389 282l135-12 62 323-240 224-102-89v3q0 251 149 454l30-132 326 40 139 298-116 69q117 39 240 39t240-39l-116-69 139-298 326-40z\"}]}}),h.register({gamepad:{width:1920,height:1792,paths:[{d:\"M832 1088v-128q0-14-9-23t-23-9h-192v-192q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v192h-192q-14 0-23 9t-9 23v128q0 14 9 23t23 9h192v192q0 14 9 23t23 9h128q14 0 23-9t9-23v-192h192q14 0 23-9t9-23zM1408 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1920 1024q0 212-150 362t-362 150q-192 0-338-128h-220q-146 128-338 128-212 0-362-150t-150-362 150-362 362-150h896q212 0 362 150t150 362z\"}]}}),h.register({gavel:{width:1792,height:1792,paths:[{d:\"M1771 1536q0 53-37 90l-107 108q-39 37-91 37-53 0-90-37l-363-364q-38-36-38-90 0-53 43-96l-256-256-126 126q-14 14-34 14t-34-14q2 2 12.5 12t12.5 13 10 11.5 10 13.5 6 13.5 5.5 16.5 1.5 18q0 38-28 68-3 3-16.5 18t-19 20.5-18.5 16.5-22 15.5-22 9-26 4.5q-40 0-68-28l-408-408q-28-28-28-68 0-13 4.5-26t9-22 15.5-22 16.5-18.5 20.5-19 18-16.5q30-28 68-28 10 0 18 1.5t16.5 5.5 13.5 6 13.5 10 11.5 10 13 12.5 12 12.5q-14-14-14-34t14-34l348-348q14-14 34-14t34 14q-2-2-12.5-12t-12.5-13-10-11.5-10-13.5-6-13.5-5.5-16.5-1.5-18q0-38 28-68 3-3 16.5-18t19-20.5 18.5-16.5 22-15.5 22-9 26-4.5q40 0 68 28l408 408q28 28 28 68 0 13-4.5 26t-9 22-15.5 22-16.5 18.5-20.5 19-18 16.5q-30 28-68 28-10 0-18-1.5t-16.5-5.5-13.5-6-13.5-10-11.5-10-13-12.5-12-12.5q14 14 14 34t-14 34l-126 126 256 256q43-43 96-43 52 0 91 37l363 363q37 39 37 91z\"}]}}),h.register({gbp:{width:1024,height:1792,paths:[{d:\"M1020 1137v367q0 14-9 23t-23 9h-956q-14 0-23-9t-9-23v-150q0-13 9.5-22.5t22.5-9.5h97v-383h-95q-14 0-23-9.5t-9-22.5v-131q0-14 9-23t23-9h95v-223q0-171 123.5-282t314.5-111q185 0 335 125 9 8 10 20.5t-7 22.5l-103 127q-9 11-22 12-13 2-23-7-5-5-26-19t-69-32-93-18q-85 0-137 47t-52 123v215h305q13 0 22.5 9t9.5 23v131q0 13-9.5 22.5t-22.5 9.5h-305v379h414v-181q0-13 9-22.5t23-9.5h162q14 0 23 9.5t9 22.5z\"}]}}),h.register({ge:{width:1792,height:1792,paths:[{d:\"M874 1638v66q-208-6-385-109.5t-283-275.5l58-34q29 49 73 99l65-57q148 168 368 212l-17 86q65 12 121 13zM276 1108l-83 28q22 60 49 112l-57 33q-98-180-98-385t98-385l57 33q-30 56-49 112l82 28q-35 100-35 212 0 109 36 212zM1528 1285l58 34q-106 172-283 275.5t-385 109.5v-66q56-1 121-13l-17-86q220-44 368-212l65 57q44-50 73-99zM1377 731l-233 80q14 42 14 85t-14 85l232 80q-31 92-98 169l-185-162q-57 67-147 85l48 241q-52 10-98 10t-98-10l48-241q-90-18-147-85l-185 162q-67-77-98-169l232-80q-14-42-14-85t14-85l-233-80q33-93 99-169l185 162q59-68 147-86l-48-240q44-10 98-10t98 10l-48 240q88 18 147 86l185-162q66 76 99 169zM874 88v66q-65 2-121 13l17 86q-220 42-368 211l-65-56q-38 42-73 98l-57-33q106-172 282-275.5t385-109.5zM1705 896q0 205-98 385l-57-33q27-52 49-112l-83-28q36-103 36-212 0-112-35-212l82-28q-19-56-49-112l57-33q98 180 98 385zM1585 473l-57 33q-35-56-73-98l-65 56q-148-169-368-211l17-86q-56-11-121-13v-66q209 6 385 109.5t282 275.5zM1748 896q0-173-67.5-331t-181.5-272-272-181.5-331-67.5-331 67.5-272 181.5-181.5 272-67.5 331 67.5 331 181.5 272 272 181.5 331 67.5 331-67.5 272-181.5 181.5-272 67.5-331zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({gear:{width:1536,height:1792,paths:[{d:\"M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1536 787v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z\"}]}}),h.register({gears:{width:1920,height:1792,paths:[{d:\"M896 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1664 1408q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1664 384q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1280 805v185q0 10-7 19.5t-16 10.5l-155 24q-11 35-32 76 34 48 90 115 7 11 7 20 0 12-7 19-23 30-82.5 89.5t-78.5 59.5q-11 0-21-7l-115-90q-37 19-77 31-11 108-23 155-7 24-30 24h-186q-11 0-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118 89q-7 7-20 7-11 0-21-8-144-133-144-160 0-9 7-19 10-14 41-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5t-7-19.5v-185q0-10 7-19.5t16-10.5l155-24q11-35 32-76-34-48-90-115-7-11-7-20 0-12 7-20 22-30 82-89t79-59q11 0 21 7l115 90q34-18 77-32 11-108 23-154 7-24 30-24h186q11 0 20 7.5t10 17.5l23 153q34 10 75 31l118-89q8-7 20-7 11 0 21 8 144 133 144 160 0 8-7 19-12 16-42 54t-45 60q23 48 34 82l152 23q10 2 17 10.5t7 19.5zM1920 1338v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31zM1920 314v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31z\"}]}}),h.register({genderless:{width:1280,height:1792,paths:[{d:\"M1024 960q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1152 960q0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5z\"}]}}),h.register({\"get-pocket\":{width:1720,height:1792,paths:[{d:\"M1565 128q65 0 110 45.5t45 110.5v519q0 176-68 336t-182.5 275-274 182.5-334.5 67.5q-176 0-335.5-67.5t-274.5-182.5-183-275-68-336v-519q0-64 46-110t110-46h1409zM861 1192q47 0 82-33l404-388q37-35 37-85 0-49-34.5-83.5t-83.5-34.5q-47 0-82 33l-323 310-323-310q-35-33-81-33-49 0-83.5 34.5t-34.5 83.5q0 51 36 85l405 388q33 33 81 33z\"}]}}),h.register({\"gg-circle\":{width:1792,height:1792,paths:[{d:\"M717 1354l271-271-279-279-88 88 192 191-96 96-279-279 279-279 40 40 87-87-127-128-454 454zM1075 1346l454-454-454-454-271 271 279 279 88-88-192-191 96-96 279 279-279 279-40-40-87 88zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({gg:{width:2048,height:1792,paths:[{d:\"M736 800l384 384-384 384-672-672 672-672 168 168-96 96-72-72-480 480 480 480 193-193-289-287zM1312 224l672 672-672 672-168-168 96-96 72 72 480-480-480-480-193 193 289 287-96 96-384-384z\"}]}}),h.register({gift:{width:1536,height:1792,paths:[{d:\"M928 1356v-56-468-192h-320v192 468 56q0 25 18 38.5t46 13.5h192q28 0 46-13.5t18-38.5zM472 512h195l-126-161q-26-31-69-31-40 0-68 28t-28 68 28 68 68 28zM1160 416q0-40-28-68t-68-28q-43 0-69 31l-125 161h194q40 0 68-28t28-68zM1536 672v320q0 14-9 23t-23 9h-96v416q0 40-28 68t-68 28h-1088q-40 0-68-28t-28-68v-416h-96q-14 0-23-9t-9-23v-320q0-14 9-23t23-9h440q-93 0-158.5-65.5t-65.5-158.5 65.5-158.5 158.5-65.5q107 0 168 77l128 165 128-165q61-77 168-77 93 0 158.5 65.5t65.5 158.5-65.5 158.5-158.5 65.5h440q14 0 23 9t9 23z\"}]}}),h.register({\"git-square\":{width:1536,height:1792,paths:[{d:\"M582 1308q0 66-93 66-107 0-107-63 0-64 98-64 102 0 102 61zM546 842q0 85-74 85-77 0-77-84 0-90 77-90 36 0 55 25.5t19 63.5zM712 767v-125q-78 29-135 29-50-29-110-29-86 0-145 57t-59 143q0 50 29.5 102t73.5 67v3q-38 17-38 85 0 53 41 77v3q-113 37-113 139 0 45 20 78.5t54 51 72 25.5 81 8q224 0 224-188 0-67-48-99t-126-46q-27-5-51.5-20.5t-24.5-39.5q0-44 49-52 77-15 122-70t45-134q0-24-10-52 37-9 49-13zM771 1186h137q-2-27-2-82v-387q0-46 2-69h-137q3 23 3 71v392q0 50-3 75zM1280 1170v-121q-30 21-68 21-53 0-53-82v-225h52q9 0 26.5 1t26.5 1v-117h-105q0-82 3-102h-140q4 24 4 55v47h-60v117q36-3 37-3 3 0 11 0.5t12 0.5v2h-2v217q0 37 2.5 64t11.5 56.5 24.5 48.5 43.5 31 66 12q64 0 108-24zM924 464q0-36-24-63.5t-60-27.5-60.5 27-24.5 64q0 36 25 62.5t60 26.5 59.5-27 24.5-62zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({git:{width:1792,height:1792,paths:[{d:\"M595 1514q0-100-165-100-158 0-158 104 0 101 172 101 151 0 151-105zM536 759q0-61-30-102t-89-41q-124 0-124 145 0 135 124 135 119 0 119-137zM805 435v202q-36 12-79 22 16 43 16 84 0 127-73 216.5t-197 112.5q-40 8-59.5 27t-19.5 58q0 31 22.5 51.5t58 32 78.5 22 86 25.5 78.5 37.5 58 64 22.5 98.5q0 304-363 304-69 0-130-12.5t-116-41-87.5-82-32.5-127.5q0-165 182-225v-4q-67-41-67-126 0-109 63-137v-4q-72-24-119.5-108.5t-47.5-165.5q0-139 95-231.5t235-92.5q96 0 178 47 98 0 218-47zM1123 1316h-222q4-45 4-134v-609q0-94-4-128h222q-4 33-4 124v613q0 89 4 134zM1724 1094v196q-71 39-174 39-62 0-107-20t-70-50-39.5-78-18.5-92-4-103v-351h2v-4q-7 0-19-1t-18-1q-21 0-59 6v-190h96v-76q0-54-6-89h227q-6 41-6 165h171v190q-15 0-43.5-2t-42.5-2h-85v365q0 131 87 131 61 0 109-33zM1148 147q0 58-39 101.5t-96 43.5q-58 0-98-43.5t-40-101.5q0-59 39.5-103t98.5-44q58 0 96.5 44.5t38.5 102.5z\"}]}}),h.register({\"github-alt\":{width:1664,height:1792,paths:[{d:\"M640 1216q0 40-12.5 82t-43 76-72.5 34-72.5-34-43-76-12.5-82 12.5-82 43-76 72.5-34 72.5 34 43 76 12.5 82zM1280 1216q0 40-12.5 82t-43 76-72.5 34-72.5-34-43-76-12.5-82 12.5-82 43-76 72.5-34 72.5 34 43 76 12.5 82zM1440 1216q0-120-69-204t-187-84q-41 0-195 21-71 11-157 11t-157-11q-152-21-195-21-118 0-187 84t-69 204q0 88 32 153.5t81 103 122 60 140 29.5 149 7h168q82 0 149-7t140-29.5 122-60 81-103 32-153.5zM1664 1040q0 207-61 331-38 77-105.5 133t-141 86-170 47.5-171.5 22-167 4.5q-78 0-142-3t-147.5-12.5-152.5-30-137-51.5-121-81-86-115q-62-123-62-331 0-237 136-396-27-82-27-170 0-116 51-218 108 0 190 39.5t189 123.5q147-35 309-35 148 0 280 32 105-82 187-121t189-39q51 102 51 218 0 87-27 168 136 160 136 398z\"}]}}),h.register({\"github-square\":{width:1536,height:1792,paths:[{d:\"M519 1200q4-6-3-13-9-7-14-2-4 6 3 13 9 7 14 2zM491 1159q-5-7-12-4-6 4 0 12 7 8 12 5 6-4 0-13zM450 1119q2-4-5-8-7-2-8 2-3 5 4 8 8 2 9-2zM471 1142q2-1 1.5-4.5t-3.5-5.5q-6-7-10-3t1 11q6 6 11 2zM557 1217q2-7-9-11-9-3-13 4-2 7 9 11 9 3 13-4zM599 1220q0-8-12-8-10 0-10 8t11 8 11-8zM638 1213q-2-7-13-5t-9 9q2 8 12 6t10-10zM1280 896q0-212-150-362t-362-150-362 150-150 362q0 167 98 300.5t252 185.5q18 3 26.5-5t8.5-20q0-52-1-95-6 1-15.5 2.5t-35.5 2-48-4-43.5-20-29.5-41.5q-23-59-57-74-2-1-4.5-3.5l-8-8t-7-9.5 4-7.5 19.5-3.5q6 0 15 2t30 15.5 33 35.5q16 28 37.5 42t43.5 14 38-3.5 30-9.5q7-47 33-69-49-6-86-18.5t-73-39-55.5-76-19.5-119.5q0-79 53-137-24-62 5-136 19-6 54.5 7.5t60.5 29.5l26 16q58-17 128-17t128 17q11-7 28.5-18t55.5-26 57-9q29 74 5 136 53 58 53 137 0 57-14 100.5t-35.5 70-53.5 44.5-62.5 26-68.5 12q35 31 35 95 0 40-0.5 89t-0.5 51q0 12 8.5 20t26.5 5q154-52 252-185.5t98-300.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({github:{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5q0 251-146.5 451.5t-378.5 277.5q-27 5-40-7t-13-30q0-3 0.5-76.5t0.5-134.5q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-119-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-85-13.5q-45 113-8 204-79 87-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-39 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 0.5 88.5t0.5 54.5q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103zM291 1231q3-7-7-12-10-3-13 2-3 7 7 12 9 6 13-2zM322 1265q7-5-2-16-10-9-16-3-7 5 2 16 10 10 16 3zM352 1310q9-7 0-19-8-13-17-6-9 5 0 18t17 7zM394 1352q8-8-4-19-12-12-20-3-9 8 4 19 12 12 20 3zM451 1377q3-11-13-16-15-4-19 7t13 15q15 6 19-6zM514 1382q0-13-17-11-16 0-16 11 0 13 17 11 16 0 16-11zM572 1372q-2-11-18-9-16 3-14 15t18 8 14-14z\"}]}}),h.register({gitlab:{width:1792,height:1792,paths:[{d:\"M104 706l792 1015-868-630q-18-13-25-34.5t0-42.5l101-308v0zM566 706h660l-330 1015v0zM368 94l198 612h-462l198-612q8-23 33-23t33 23zM1688 706l101 308q7 21 0 42.5t-25 34.5l-868 630 792-1015v0zM1688 706h-462l198-612q8-23 33-23t33 23z\"}]}}),h.register({gittip:{width:1536,height:1792,paths:[{d:\"M773 1302l350-473q16-22 24.5-59t-6-85-61.5-79q-40-26-83-25.5t-73.5 17.5-54.5 45q-36 40-96 40-59 0-95-40-24-28-54.5-45t-73.5-17.5-84 25.5q-46 31-60.5 79t-6 85 24.5 59zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({glass:{width:1792,height:1792,paths:[{d:\"M1699 186q0 35-43 78l-632 632v768h320q26 0 45 19t19 45-19 45-45 19h-896q-26 0-45-19t-19-45 19-45 45-19h320v-768l-632-632q-43-43-43-78 0-23 18-36.5t38-17.5 43-4h1408q23 0 43 4t38 17.5 18 36.5z\"}]}}),h.register({\"glide-g\":{width:1535,height:1792,paths:[{d:\"M744 305q0-24-2-38.5t-8.5-30-21-23-37.5-7.5q-39 0-78 23-105 58-159 190.5t-54 269.5q0 44 8.5 85.5t26.5 80.5 52.5 62.5 81.5 23.5q4 0 18 0.5t20 0 16-3 15-8.5 7-16q16-77 48-231.5t48-231.5q19-91 19-146zM1498 961q0 7-7.5 13.5t-15.5 6.5l-6-1q-22-3-62-11t-72-12.5-63-4.5q-167 0-351 93-15 8-21 27-10 36-24.5 105.5t-22.5 100.5q-23 91-70 179.5t-112.5 164.5-154.5 123-185 47q-135 0-214.5-83.5t-79.5-219.5q0-53 19.5-117t63-116.5 97.5-52.5q38 0 120 33.5t83 61.5q0 1-16.5 12.5t-39.5 31-46 44.5-39 61-16 74q0 33 16.5 53t48.5 20q45 0 85-31.5t66.5-78 48-105.5 32.5-107 16-90v-9q0-2-3.5-3.5t-8.5-1.5h-10t-10 0.5-6 0.5q-227 0-352-122.5t-125-348.5q0-108 34.5-221t96-210 156-167.5 204.5-89.5q52-9 106-9 374 0 374 360 0 98-38 273t-43 211l3 3q101-57 182.5-88t167.5-31q22 0 53 13 19 7 80 102.5t61 116.5z\"}]}}),h.register({glide:{width:1536,height:1792,paths:[{\nd:\"M866 515q0 27-13 94-11 50-31.5 150t-30.5 150q-2 11-4.5 12.5t-13.5 2.5q-20 2-31 2-58 0-84-49.5t-26-113.5q0-88 35-174t103-124q28-14 51-14 28 0 36.5 16.5t8.5 47.5zM1352 939q0-14-39-75.5t-52-66.5q-21-8-34-8-91 0-226 77l-2-2q3-22 27.5-135t24.5-178q0-233-242-233-24 0-68 6-94 17-168.5 89.5t-111.5 166.5-37 189q0 146 80.5 225t227.5 79q25 0 25 3t-1 5q-4 34-26 117-14 52-51.5 101t-82.5 49q-42 0-42-47 0-24 10.5-47.5t25-39.5 29.5-28.5 26-20 11-8.5q0-3-7-10-24-22-58.5-36.5t-65.5-14.5q-35 0-63.5 34t-41 75-12.5 75q0 88 51.5 142t138.5 54q82 0 155-53t117.5-126 65.5-153q6-22 15.5-66.5t14.5-66.5q3-12 14-18 118-60 227-60 48 0 127 18 1 1 4 1 5 0 9.5-4.5t4.5-8.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({globe:{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1042 649q-2 1-9.5 9.5t-13.5 9.5q2 0 4.5-5t5-11 3.5-7q6-7 22-15 14-6 52-12 34-8 51 11-2-2 9.5-13t14.5-12q3-2 15-4.5t15-7.5l2-22q-12 1-17.5-7t-6.5-21q0 2-6 8 0-7-4.5-8t-11.5 1-9 1q-10-3-15-7.5t-8-16.5-4-15q-2-5-9.5-11t-9.5-10q-1-2-2.5-5.5t-3-6.5-4-5.5-5.5-2.5-7 5-7.5 10-4.5 5q-3-2-6-1.5t-4.5 1-4.5 3-5 3.5q-3 2-8.5 3t-8.5 2q15-5-1-11-10-4-16-3 9-4 7.5-12t-8.5-14h5q-1-4-8.5-8.5t-17.5-8.5-13-6q-8-5-34-9.5t-33-0.5q-5 6-4.5 10.5t4 14 3.5 12.5q1 6-5.5 13t-6.5 12q0 7 14 15.5t10 21.5q-3 8-16 16t-16 12q-5 8-1.5 18.5t10.5 16.5q2 2 1.5 4t-3.5 4.5-5.5 4-6.5 3.5l-3 2q-11 5-20.5-6t-13.5-26q-7-25-16-30-23-8-29 1-5-13-41-26-25-9-58-4 6-1 0-15-7-15-19-12 3-6 4-17.5t1-13.5q3-13 12-23 1-1 7-8.5t9.5-13.5 0.5-6q35 4 50-11 5-5 11.5-17t10.5-17q9-6 14-5.5t14.5 5.5 14.5 5q14 1 15.5-11t-7.5-20q12 1 3-17-4-7-8-9-12-4-27 5-8 4 2 8-1-1-9.5 10.5t-16.5 17.5-16-5q-1-1-5.5-13.5t-9.5-13.5q-8 0-16 15 3-8-11-15t-24-8q19-12-8-27-7-4-20.5-5t-19.5 4q-5 7-5.5 11.5t5 8 10.5 5.5 11.5 4 8.5 3q14 10 8 14-2 1-8.5 3.5t-11.5 4.5-6 4q-3 4 0 14t-2 14q-5-5-9-17.5t-7-16.5q7 9-25 6l-10-1q-4 0-16 2t-20.5 1-13.5-8q-4-8 0-20 1-4 4-2-4-3-11-9.5t-10-8.5q-46 15-94 41 6 1 12-1 5-2 13-6.5t10-5.5q34-14 42-7l5-5q14 16 20 25-7-4-30-1-20 6-22 12 7 12 5 18-4-3-11.5-10t-14.5-11-15-5q-16 0-22 1-146 80-235 222 7 7 12 8 4 1 5 9t2.5 11 11.5-3q9 8 3 19 1-1 44 27 19 17 21 21 3 11-10 18-1-2-9-9t-9-4q-3 5 0.5 18.5t10.5 12.5q-7 0-9.5 16t-2.5 35.5-1 23.5l2 1q-3 12 5.5 34.5t21.5 19.5q-13 3 20 43 6 8 8 9 3 2 12 7.5t15 10 10 10.5q4 5 10 22.5t14 23.5q-2 6 9.5 20t10.5 23q-1 0-2.5 1t-2.5 1q3 7 15.5 14t15.5 13q1 3 2 10t3 11 8 2q2-20-24-62-15-25-17-29-3-5-5.5-15.5t-4.5-14.5q2 0 6 1.5t8.5 3.5 7.5 4 2 3q-3 7 2 17.5t12 18.5 17 19 12 13q6 6 14 19.5t0 13.5q9 0 20 10.5t17 19.5q5 8 8 26t5 24q2 7 8.5 13.5t12.5 9.5l16 8t13 7q5 2 18.5 10.5t21.5 11.5q10 4 16 4t14.5-2.5 13.5-3.5q15-2 29 15t21 21q36 19 55 11-2 1 0.5 7.5t8 15.5 9 14.5 5.5 8.5q5 6 18 15t18 15q6-4 7-9-3 8 7 20t18 10q14-3 14-32-31 15-49-18 0-1-2.5-5.5t-4-8.5-2.5-8.5 0-7.5 5-3q9 0 10-3.5t-2-12.5-4-13q-1-8-11-20t-12-15q-5 9-16 8t-16-9q0 1-1.5 5.5t-1.5 6.5q-13 0-15-1 1-3 2.5-17.5t3.5-22.5q1-4 5.5-12t7.5-14.5 4-12.5-4.5-9.5-17.5-2.5q-19 1-26 20-1 3-3 10.5t-5 11.5-9 7q-7 3-24 2t-24-5q-13-8-22.5-29t-9.5-37q0-10 2.5-26.5t3-25-5.5-24.5q3-2 9-9.5t10-10.5q2-1 4.5-1.5t4.5 0 4-1.5 3-6q-1-1-4-3-3-3-4-3 7 3 28.5-1.5t27.5 1.5q15 11 22-2 0-1-2.5-9.5t-0.5-13.5q5 27 29 9 3 3 15.5 5t17.5 5q3 2 7 5.5t5.5 4.5 5-0.5 8.5-6.5q10 14 12 24 11 40 19 44 7 3 11 2t4.5-9.5 0-14-1.5-12.5l-1-8v-18l-1-8q-15-3-18.5-12t1.5-18.5 15-18.5q1-1 8-3.5t15.5-6.5 12.5-8q21-19 15-35 7 0 11-9-1 0-5-3t-7.5-5-4.5-2q9-5 2-16 5-3 7.5-11t7.5-10q9 12 21 2 8-8 1-16 5-7 20.5-10.5t18.5-9.5q7 2 8-2t1-12 3-12q4-5 15-9t13-5l17-11q3-4 0-4 18 2 31-11 10-11-6-20 3-6-3-9.5t-15-5.5q3-1 11.5-0.5t10.5-1.5q15-10-7-16-17-5-43 12zM879 1526q206-36 351-189-3-3-12.5-4.5t-12.5-3.5q-18-7-24-8 1-7-2.5-13t-8-9-12.5-8-11-7q-2-2-7-6t-7-5.5-7.5-4.5-8.5-2-10 1l-3 1q-3 1-5.5 2.5t-5.5 3-4 3 0 2.5q-21-17-36-22-5-1-11-5.5t-10.5-7-10-1.5-11.5 7q-5 5-6 15t-2 13q-7-5 0-17.5t2-18.5q-3-6-10.5-4.5t-12 4.5-11.5 8.5-9 6.5-8.5 5.5-8.5 7.5q-3 4-6 12t-5 11q-2-4-11.5-6.5t-9.5-5.5q2 10 4 35t5 38q7 31-12 48-27 25-29 40-4 22 12 26 0 7-8 20.5t-7 21.5q0 6 2 16z\"}]}}),h.register({\"google-plus-circle\":{width:1536,height:1792,paths:[{d:\"M917 905q0-33-6-64h-362v132h217q-12 76-74.5 120.5t-142.5 44.5q-99 0-169-71.5t-70-170.5 70-170.5 169-71.5q93 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"google-plus-official\":{width:1536,height:1792,paths:[{d:\"M917 905q0-33-6-64h-362v132h217q-12 76-74.5 120.5t-142.5 44.5q-99 0-169-71.5t-70-170.5 70-170.5 169-71.5q93 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"google-plus-square\":{width:1536,height:1792,paths:[{d:\"M917 905q0-26-6-64h-362v132h217q-3 24-16.5 50t-37.5 53-66.5 44.5-96.5 17.5q-99 0-169-71t-70-171 70-171 169-71q92 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"google-plus\":{width:2304,height:1792,paths:[{d:\"M1437 913q0 208-87 370.5t-248 254-369 91.5q-149 0-285-58t-234-156-156-234-58-285 58-285 156-234 234-156 285-58q286 0 491 192l-199 191q-117-113-292-113-123 0-227.5 62t-165.5 168.5-61 232.5 61 232.5 165.5 168.5 227.5 62q83 0 152.5-23t114.5-57.5 78.5-78.5 49-83 21.5-74h-416v-252h692q12 63 12 122zM2304 791v210h-209v209h-210v-209h-209v-210h209v-209h210v209h209z\"}]}}),h.register({\"google-wallet\":{width:1792,height:1792,paths:[{d:\"M441 672q33 0 52 26 266 364 362 774h-446q-127-441-367-749-12-16-3-33.5t29-17.5h373zM1000 1029q-49 199-125 393-79-310-256-594 40-221 44-449 211 340 337 650zM1099 320q235 324 384.5 698.5t184.5 773.5h-451q-41-665-553-1472h435zM1792 896q0 424-101 812-67-560-359-1083-25-301-106-584-4-16 5.5-28.5t25.5-12.5h359q21 0 38.5 13t22.5 33q115 409 115 850z\"}]}}),h.register({google:{width:1536,height:1792,paths:[{d:\"M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z\"}]}}),h.register({\"graduation-cap\":{width:2304,height:1792,paths:[{d:\"M1774 836l18 316q4 69-82 128t-235 93.5-323 34.5-323-34.5-235-93.5-82-128l18-316 574 181q22 7 48 7t48-7zM2304 512q0 23-22 31l-1120 352q-4 1-10 1t-10-1l-652-206q-43 34-71 111.5t-34 178.5q63 36 63 109 0 69-58 107l58 433q2 14-8 25-9 11-24 11h-192q-15 0-24-11-10-11-8-25l58-433q-58-38-58-107 0-73 65-111 11-207 98-330l-333-104q-22-8-22-31t22-31l1120-352q4-1 10-1t10 1l1120 352q22 8 22 31z\"}]}}),h.register({gratipay:{width:1536,height:1792,paths:[{d:\"M773 1302l350-473q16-22 24.5-59t-6-85-61.5-79q-40-26-83-25.5t-73.5 17.5-54.5 45q-36 40-96 40-59 0-95-40-24-28-54.5-45t-73.5-17.5-84 25.5q-46 31-60.5 79t-6 85 24.5 59zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({grav:{width:1794,height:1792,paths:[{d:\"M1291 476q-15-17-35-8.5t-26 28.5 5 38q14 17 40 14.5t34-20.5-18-52zM895 722q-8 8-19.5 8t-18.5-8q-8-8-8-19t8-18q7-8 18.5-8t19.5 8q7 7 7 18t-7 19zM1060 796l-35 35q-12 13-29.5 13t-30.5-13l-38-38q-12-13-12-30t12-30l35-35q12-12 29.5-12t30.5 12l38 39q12 12 12 29.5t-12 29.5zM951 666q-7 8-18.5 8t-19.5-8q-7-8-7-19t7-19q8-8 19-8t19 8 8 19-8 19zM1354 568q-34 64-107.5 85.5t-127.5-16.5q-38-28-61-66.5t-21-87.5 39-92 75.5-53 70.5 5 70 51q2 2 13 12.5t14.5 13.5 13 13.5 12.5 15.5 10 15.5 8.5 18 4 18.5 1 21-5 22-9.5 24zM1555 1050q3-20-8.5-34.5t-27.5-21.5-33-17-23-20q-40-71-84-98.5t-113-11.5q19-13 40-18.5t33-4.5l12 1q2-45-34-90 6-20 6.5-40.5t-2.5-30.5l-3-10q43-24 71-65t34-91q10-84-43-150.5t-137-76.5q-60-7-114 18.5t-82 74.5q-30 51-33.5 101t14.5 87 43.5 64 56.5 42q-45-4-88-36t-57-88q-28-108 32-222-16-21-29-32-50 0-89 19 19-24 42-37t36-14l13-1q0-50-13-78-10-21-32.5-28.5t-47 3.5-37.5 40q2-4 4-7-7 28-6.5 75.5t19 117 48.5 122.5q-25 14-47 36-35 16-85.5 70.5t-84.5 101.5l-33 46q-90 34-181 125.5t-75 162.5q1 16 11 27-15 12-30 30-21 25-21 54t21.5 40 63.5-6q41-19 77-49.5t55-60.5q-2-2-6.5-5t-20.5-7.5-33-3.5q23-5 51-12.5t40-10 27.5-6 26-4 23.5-0.5q14 7 22-34 7-37 7-90 0-102-40-150 106 103 101 219-1 29-15 50t-27 27l-13 6q-4 7-19 32t-26 45.5-26.5 52-25 61-17 63-6.5 66.5 10 63q-35-54-37-80-22 24-34.5 39t-33.5 42-30.5 46-16.5 41-0.5 38 25.5 27q45 25 144-64t190.5-221.5 122.5-228.5q86-52 145-115.5t86-119.5q47 93 154 178 104 83 167 80 39-2 46-43zM1794 896q0 182-71 348t-191 286-286.5 191-348.5 71-348.5-71-286.5-191-191-286-71-348 71-348 191-286 286.5-191 348.5-71 348.5 71 286.5 191 191 286 71 348z\"}]}}),h.register({group:{width:1920,height:1792,paths:[{d:\"M593 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zM1664 1533q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zM640 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1344 640q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1920 865q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zM1792 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z\"}]}}),h.register({\"h-square\":{width:1536,height:1792,paths:[{d:\"M1280 1344v-896q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-512v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v896q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h512v320q0 26 19 45t45 19h128q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"hacker-news\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"hand-grab-o\":{width:1536,height:1792,paths:[{d:\"M768 384q-53 0-90.5 37.5t-37.5 90.5v128h-32v-93q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v429l-32-30v-172q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v224q0 47 35 82l310 296q39 39 39 102 0 26 19 45t45 19h640q26 0 45-19t19-45v-25q0-41 10-77l108-436q10-36 10-77v-246q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v32h-32v-125q0-40-25-72.5t-64-40.5q-14-2-23-2-46 0-79 33t-33 79v128h-32v-122q0-51-32.5-89.5t-82.5-43.5q-5-1-13-1zM768 256q84 0 149 50 57-34 123-34 59 0 111 27t86 76q27-7 59-7 100 0 170 71.5t70 171.5v246q0 51-13 108l-109 436q-6 24-6 71 0 80-56 136t-136 56h-640q-84 0-138-58.5t-54-142.5l-308-296q-76-73-76-175v-224q0-99 70.5-169.5t169.5-70.5q11 0 16 1 6-95 75.5-160t164.5-65q52 0 98 21 72-69 174-69z\"}]}}),h.register({\"hand-lizard-o\":{width:2048,height:1792,paths:[{d:\"M1151 0q61 0 116 28t91 77l572 781q118 159 118 359v355q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-177l-286-143h-546q-80 0-136-56t-56-136v-32q0-119 84.5-203.5t203.5-84.5h420l42-128h-686q-100 0-173.5-67.5t-81.5-166.5q-65-79-65-182v-32q0-80 56-136t136-56h959zM1920 1600v-355q0-157-93-284l-573-781q-39-52-103-52h-959q-26 0-45 19t-19 45q0 32 1.5 49.5t9.5 40.5 25 43q10-31 35.5-50t56.5-19h832v32h-832q-26 0-45 19t-19 45q0 44 3 58 8 44 44 73t81 29h640 91q40 0 68 28t28 68q0 15-5 30l-64 192q-10 29-35 47.5t-56 18.5h-443q-66 0-113 47t-47 113v32q0 26 19 45t45 19h561q16 0 29 7l317 158q24 13 38.5 36t14.5 50v197q0 26 19 45t45 19h384q26 0 45-19t19-45z\"}]}}),h.register({\"hand-o-down\":{width:1536,height:1792,paths:[{d:\"M1408 960q0-84-32-183t-64-194-32-167v-32h-640v32q0 35-12 67.5t-37 62.5-46 50-54 49q-9 8-14 12-81 72-145 112-22 14-68 38-3 1-22.5 10.5t-36 18.5-35.5 20-30.5 21.5-11.5 18.5q0 71 30.5 115.5t97.5 44.5q43 0 84.5-15t68-33 55-33 48.5-15v576q0 50 38.5 89t89.5 39q52 0 90-38t38-90v-331q46 35 103 35 69 0 119-53 32 18 69 18t73.5-17.5 52.5-47.5q24 4 56 4 85 0 126-48.5t41-135.5zM1280 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 956q0 142-77.5 230t-217.5 87l-5-1q-76 61-178 61-22 0-43-3-54 30-119 37v169q0 105-76 180.5t-181 75.5q-103 0-179-76t-76-180v-374q-54 22-128 22-121 0-188.5-81.5t-67.5-206.5q0-38 17.5-69.5t49.5-55 63-40.5 72-37 62-33q55-35 129-100 3-2 17-14t21.5-19 21.5-20.5 22.5-24 18-22.5 14-23.5 4.5-21.5v-288q0-53 37.5-90.5t90.5-37.5h640q53 0 90.5 37.5t37.5 90.5v288q0 59 59 223 69 190 69 317z\"}]}}),h.register({\"hand-o-left\":{width:1792,height:1792,paths:[{d:\"M1376 1408h32v-640h-32q-35 0-67.5-12t-62.5-37-50-46-49-54q-8-9-12-14-72-81-112-145-14-22-38-68-1-3-10.5-22.5t-18.5-36-20-35.5-21.5-30.5-18.5-11.5q-71 0-115.5 30.5t-44.5 97.5q0 43 15 84.5t33 68 33 55 15 48.5h-576q-50 0-89 38.5t-39 89.5q0 52 38 90t90 38h331q-15 17-25 47.5t-10 55.5q0 69 53 119-18 32-18 69t17.5 73.5 47.5 52.5q-4 24-4 56 0 85 48.5 126t135.5 41q84 0 183-32t194-64 167-32zM1664 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1792 768v640q0 53-37.5 90.5t-90.5 37.5h-288q-59 0-223 59-190 69-317 69-142 0-230-77.5t-87-217.5l1-5q-61-76-61-178 0-22 3-43-33-57-37-119h-169q-105 0-180.5-76t-75.5-181q0-103 76-179t180-76h374q-22-60-22-128 0-122 81.5-189t206.5-67q38 0 69.5 17.5t55 49.5 40.5 63 37 72 33 62q35 55 100 129 2 3 14 17t19 21.5 20.5 21.5 24 22.5 22.5 18 23.5 14 21.5 4.5h288q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({\"hand-o-right\":{width:1792,height:1792,paths:[{d:\"M256 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 768q0-51-39-89.5t-89-38.5h-576q0-20 15-48.5t33-55 33-68 15-84.5q0-67-44.5-97.5t-115.5-30.5q-24 0-90 139-24 44-37 65-40 64-112 145-71 81-101 106-69 57-140 57h-32v640h32q72 0 167 32t193.5 64 179.5 32q189 0 189-167 0-26-5-56 30-16 47.5-52.5t17.5-73.5-18-69q53-50 53-119 0-25-10-55.5t-25-47.5h331q52 0 90-38t38-90zM1792 767q0 105-75.5 181t-180.5 76h-169q-4 62-37 119 3 21 3 43 0 101-60 178 1 139-85 219.5t-227 80.5q-133 0-322-69-164-59-223-59h-288q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h288q10 0 21.5-4.5t23.5-14 22.5-18 24-22.5 20.5-21.5 19-21.5 14-17q65-74 100-129 13-21 33-62t37-72 40.5-63 55-49.5 69.5-17.5q125 0 206.5 67t81.5 189q0 68-22 128h374q104 0 180 76t76 179z\"}]}}),h.register({\"hand-o-up\":{width:1536,height:1792,paths:[{d:\"M1280 1600q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 836q0-189-167-189-26 0-56 5-16-30-52.5-47.5t-73.5-17.5-69 18q-50-53-119-53-25 0-55.5 10t-47.5 25v-331q0-52-38-90t-90-38q-51 0-89.5 39t-38.5 89v576q-20 0-48.5-15t-55-33-68-33-84.5-15q-67 0-97.5 44.5t-30.5 115.5q0 24 139 90 44 24 65 37 64 40 145 112 81 71 106 101 57 69 57 140v32h640v-32q0-72 32-167t64-193.5 32-179.5zM1536 831q0 133-69 322-59 164-59 223v288q0 53-37.5 90.5t-90.5 37.5h-640q-53 0-90.5-37.5t-37.5-90.5v-288q0-10-4.5-21.5t-14-23.5-18-22.5-22.5-24-21.5-20.5-21.5-19-17-14q-74-65-129-100-21-13-62-33t-72-37-63-40.5-49.5-55-17.5-69.5q0-125 67-206.5t189-81.5q68 0 128 22v-374q0-104 76-180t179-76q105 0 181 75.5t76 180.5v169q62 4 119 37 21-3 43-3 101 0 178 60 139-1 219.5 85t80.5 227z\"}]}}),h.register({\"hand-paper-o\":{width:1792,height:1792,paths:[{d:\"M880 128q-46 0-79 33t-33 79v656h-32v-528q0-46-33-79t-79-33-79 33-33 79v528 256l-154-205q-38-51-102-51-53 0-90.5 37.5t-37.5 90.5q0 43 26 77l384 512q38 51 102 51h688q34 0 61-22t34-56l76-405q5-32 5-59v-498q0-46-33-79t-79-33-79 33-33 79v272h-32v-528q0-46-33-79t-79-33-79 33-33 79v528h-32v-656q0-46-33-79t-79-33zM880 0q68 0 125.5 35.5t88.5 96.5q19-4 42-4 99 0 169.5 70.5t70.5 169.5v17q105-6 180.5 64t75.5 175v498q0 40-8 83l-76 404q-14 79-76.5 131t-143.5 52h-688q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-106 75-181t181-75q78 0 128 34v-434q0-99 70.5-169.5t169.5-70.5q23 0 42 4 31-61 88.5-96.5t125.5-35.5z\"}]}}),h.register({\"hand-peace-o\":{width:1536,height:1792,paths:[{d:\"M1288 647q60 0 107 23 141 63 141 226v177q0 94-23 186l-85 339q-21 86-90.5 140t-157.5 54h-668q-106 0-181-75t-75-181v-401l-239-628q-17-45-17-91 0-106 75-181t181-75q80 0 145.5 45.5t93.5 119.5l17 44v-113q0-106 75-181t181-75 181 75 75 181v261q27-5 48-5 69 0 127.5 36.5t88.5 98.5zM1072 640q-33 0-60.5 18t-41.5 48l-74 163-71 155h55q50 0 90 31.5t50 80.5l154-338q10-20 10-46 0-46-33-79t-79-33zM1293 775q-22 0-40.5 8t-29 16-23.5 29.5-17 30.5-17 37l-132 290q-10 20-10 46 0 46 33 79t79 33q33 0 60.5-18t41.5-48l160-352q9-18 9-38 0-50-32-81.5t-82-31.5zM128 416q0 22 8 46l248 650v69l102-111q43-46 106-46h198l106-233v-535q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5v640h-64l-200-526q-14-37-47-59.5t-73-22.5q-53 0-90.5 37.5t-37.5 90.5zM1180 1664q44 0 78.5-27t45.5-70l85-339q19-73 19-155v-91l-141 310q-17 38-53 61t-78 23q-53 0-93.5-34.5t-48.5-86.5q-44 57-114 57h-208v-32h208q46 0 81-33t35-79-31-79-77-33h-296q-49 0-82 36l-126 136v308q0 53 37.5 90.5t90.5 37.5h668z\"}]}}),h.register({\"hand-pointer-o\":{width:1792,height:1792,paths:[{d:\"M640 128q-53 0-90.5 37.5t-37.5 90.5v512 384l-151-202q-41-54-107-54-52 0-89 38t-37 90q0 43 26 77l384 512q38 51 102 51h718q22 0 39.5-13.5t22.5-34.5l92-368q24-96 24-194v-217q0-41-28-71t-68-30-68 28-28 68h-32v-61q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v64h-32v-90q0-55-37-94.5t-91-39.5q-53 0-90.5 37.5t-37.5 90.5v96h-32v-570q0-55-37-94.5t-91-39.5zM640 0q107 0 181.5 77.5t74.5 184.5v220q22-2 32-2 99 0 173 69 47-21 99-21 113 0 184 87 27-7 56-7 94 0 159 67.5t65 161.5v217q0 116-28 225l-92 368q-16 64-68 104.5t-118 40.5h-718q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-105 74.5-180.5t179.5-75.5q71 0 130 35v-547q0-106 75-181t181-75zM768 1408v-384h-32v384h32zM1024 1408v-384h-32v384h32zM1280 1408v-384h-32v384h32z\"}]}}),h.register({\"hand-rock-o\":{width:1536,height:1792,paths:[{d:\"M768 384q-53 0-90.5 37.5t-37.5 90.5v128h-32v-93q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v429l-32-30v-172q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v224q0 47 35 82l310 296q39 39 39 102 0 26 19 45t45 19h640q26 0 45-19t19-45v-25q0-41 10-77l108-436q10-36 10-77v-246q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v32h-32v-125q0-40-25-72.5t-64-40.5q-14-2-23-2-46 0-79 33t-33 79v128h-32v-122q0-51-32.5-89.5t-82.5-43.5q-5-1-13-1zM768 256q84 0 149 50 57-34 123-34 59 0 111 27t86 76q27-7 59-7 100 0 170 71.5t70 171.5v246q0 51-13 108l-109 436q-6 24-6 71 0 80-56 136t-136 56h-640q-84 0-138-58.5t-54-142.5l-308-296q-76-73-76-175v-224q0-99 70.5-169.5t169.5-70.5q11 0 16 1 6-95 75.5-160t164.5-65q52 0 98 21 72-69 174-69z\"}]}}),h.register({\"hand-scissors-o\":{width:1792,height:1792,paths:[{d:\"M1073 1664h-177q-163 0-226-141-23-49-23-102v-5q-62-30-98.5-88.5t-36.5-127.5q0-38 5-48h-261q-106 0-181-75t-75-181 75-181 181-75h113l-44-17q-74-28-119.5-93.5t-45.5-145.5q0-106 75-181t181-75q46 0 91 17l628 239h401q106 0 181 75t75 181v668q0 88-54 157.5t-140 90.5l-339 85q-92 23-186 23zM1024 953l-155 71-163 74q-30 14-48 41.5t-18 60.5q0 46 33 79t79 33q26 0 46-10l338-154q-49-10-80.5-50t-31.5-90v-55zM1344 1264q0-46-33-79t-79-33q-26 0-46 10l-290 132q-28 13-37 17t-30.5 17-29.5 23.5-16 29-8 40.5q0 50 31.5 82t81.5 32q20 0 38-9l352-160q30-14 48-41.5t18-60.5zM1112 512l-650-248q-24-8-46-8-53 0-90.5 37.5t-37.5 90.5q0 40 22.5 73t59.5 47l526 200v64h-640q-53 0-90.5 37.5t-37.5 90.5 37.5 90.5 90.5 37.5h535l233-106v-198q0-63 46-106l111-102h-69zM1073 1536q82 0 155-19l339-85q43-11 70-45.5t27-78.5v-668q0-53-37.5-90.5t-90.5-37.5h-308l-136 126q-36 33-36 82v296q0 46 33 77t79 31 79-35 33-81v-208h32v208q0 70-57 114 52 8 86.5 48.5t34.5 93.5q0 42-23 78t-61 53l-310 141h91z\"}]}}),h.register({\"hand-spock-o\":{width:2048,height:1792,paths:[{d:\"M459 1792q-77 0-137.5-47.5t-79.5-122.5l-101-401q-13-57-13-108 0-45-5-67l-116-477q-7-27-7-57 0-93 62-161t155-78q17-85 82.5-139t152.5-54q83 0 148 51.5t85 132.5l83 348 103-428q20-81 85-132.5t148-51.5q89 0 155.5 57.5t80.5 144.5q92 10 152 79t60 162q0 24-7 59l-123 512q10-7 37.5-28.5t38.5-29.5 35-23 41-20.5 41.5-11 49.5-5.5q105 0 180 74t75 179q0 62-28.5 118t-78.5 94l-507 380q-68 51-153 51h-694zM1104 128q-38 0-68.5 24t-39.5 62l-164 682h-127l-145-602q-9-38-39.5-62t-68.5-24q-48 0-80 33t-32 80q0 15 3 28l132 547h-26l-99-408q-9-37-40-62.5t-69-25.5q-47 0-80 33t-33 79q0 14 3 26l116 478q7 28 9 86t10 88l100 401q8 32 34 52.5t59 20.5h694q42 0 76-26l507-379q56-43 56-110 0-52-37.5-88.5t-89.5-36.5q-43 0-77 26l-307 230v-227q0-4 32-138t68-282 39-161q4-18 4-29 0-47-32-81t-79-34q-39 0-69.5 24t-39.5 62l-116 482h-26l150-624q3-14 3-28 0-48-31.5-82t-79.5-34z\"}]}}),h.register({\"hand-stop-o\":{width:1792,height:1792,paths:[{d:\"M880 128q-46 0-79 33t-33 79v656h-32v-528q0-46-33-79t-79-33-79 33-33 79v528 256l-154-205q-38-51-102-51-53 0-90.5 37.5t-37.5 90.5q0 43 26 77l384 512q38 51 102 51h688q34 0 61-22t34-56l76-405q5-32 5-59v-498q0-46-33-79t-79-33-79 33-33 79v272h-32v-528q0-46-33-79t-79-33-79 33-33 79v528h-32v-656q0-46-33-79t-79-33zM880 0q68 0 125.5 35.5t88.5 96.5q19-4 42-4 99 0 169.5 70.5t70.5 169.5v17q105-6 180.5 64t75.5 175v498q0 40-8 83l-76 404q-14 79-76.5 131t-143.5 52h-688q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-106 75-181t181-75q78 0 128 34v-434q0-99 70.5-169.5t169.5-70.5q23 0 42 4 31-61 88.5-96.5t125.5-35.5z\"}]}}),h.register({\"handshake-o\":{width:2304,height:1792,paths:[{d:\"M192 1152q40 0 56-32t0-64-56-32-56 32 0 64 56 32zM1665 1094q-10-13-38.5-50t-41.5-54-38-49-42.5-53-40.5-47-45-49l-125 140q-83 94-208.5 92t-205.5-98q-57-69-56.5-158t58.5-157l177-206q-22-11-51-16.5t-47.5-6-56.5 0.5-49 1q-92 0-158 66l-158 158h-155v544q5 0 21-0.5t22 0 19.5 2 20.5 4.5 17.5 8.5 18.5 13.5l297 292q115 111 227 111 78 0 125-47 57 20 112.5-8t72.5-85q74 6 127-44 20-18 36-45.5t14-50.5q10 10 43 10 43 0 77-21t49.5-53 12-71.5-30.5-73.5zM1824 1152h96v-512h-93l-157-180q-66-76-169-76h-167q-89 0-146 67l-209 243q-28 33-28 75t27 75q43 51 110 52t111-49l193-218q25-23 53.5-21.5t47 27 8.5 56.5q16 19 56 63t60 68q29 36 82.5 105.5t64.5 84.5q52 66 60 140zM2112 1152q40 0 56-32t0-64-56-32-56 32 0 64 56 32zM2304 576v640q0 26-19 45t-45 19h-434q-27 65-82 106.5t-125 51.5q-33 48-80.5 81.5t-102.5 45.5q-42 53-104.5 81.5t-128.5 24.5q-60 34-126 39.5t-127.5-14-117-53.5-103.5-81l-287-282h-358q-26 0-45-19t-19-45v-672q0-26 19-45t45-19h421q14-14 47-48t47.5-48 44-40 50.5-37.5 51-25.5 62-19.5 68-5.5h117q99 0 181 56 82-56 181-56h167q35 0 67 6t56.5 14.5 51.5 26.5 44.5 31 43 39.5 39 42 41 48 41.5 48.5h355q26 0 45 19t19 45z\"}]}}),h.register({\"hard-of-hearing\":{width:1792,height:1792,paths:[{d:\"M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z\"}]}}),h.register({hashtag:{width:1792,height:1792,paths:[{d:\"M991 1024l64-256h-254l-64 256h254zM1759 520l-56 224q-7 24-31 24h-327l-64 256h311q15 0 25 12 10 14 6 28l-56 224q-5 24-31 24h-327l-81 328q-7 24-31 24h-224q-16 0-26-12-9-12-6-28l78-312h-254l-81 328q-7 24-31 24h-225q-15 0-25-12-9-12-6-28l78-312h-311q-15 0-25-12-9-12-6-28l56-224q7-24 31-24h327l64-256h-311q-15 0-25-12-10-14-6-28l56-224q5-24 31-24h327l81-328q7-24 32-24h224q15 0 25 12 9 12 6 28l-78 312h254l81-328q7-24 32-24h224q15 0 25 12 9 12 6 28l-78 312h311q15 0 25 12 9 12 6 28z\"}]}}),h.register({\"hdd-o\":{width:1536,height:1792,paths:[{d:\"M1040 1216q0 33-23.5 56.5t-56.5 23.5-56.5-23.5-23.5-56.5 23.5-56.5 56.5-23.5 56.5 23.5 23.5 56.5zM1296 1216q0 33-23.5 56.5t-56.5 23.5-56.5-23.5-23.5-56.5 23.5-56.5 56.5-23.5 56.5 23.5 23.5 56.5zM1408 1376v-320q0-13-9.5-22.5t-22.5-9.5h-1216q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5-9.5t9.5-22.5zM178 896h1180l-157-482q-4-13-16-21.5t-26-8.5h-782q-14 0-26 8.5t-16 21.5zM1536 1056v320q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-320q0-25 16-75l197-606q17-53 63-86t101-33h782q55 0 101 33t63 86l197 606q16 50 16 75z\"}]}}),h.register({header:{width:1792,height:1792,paths:[{d:\"M1682 1664q-44 0-132.5-3.5t-133.5-3.5q-44 0-132 3.5t-132 3.5q-24 0-37-20.5t-13-45.5q0-31 17-46t39-17 51-7 45-15q33-21 33-140l-1-391q0-21-1-31-13-4-50-4h-675q-38 0-51 4-1 10-1 31l-1 371q0 142 37 164 16 10 48 13t57 3.5 45 15 20 45.5q0 26-12.5 48t-36.5 22q-47 0-139.5-3.5t-138.5-3.5q-43 0-128 3.5t-127 3.5q-23 0-35.5-21t-12.5-45q0-30 15.5-45t36-17.5 47.5-7.5 42-15q33-23 33-143l-1-57v-813q0-3 0.5-26t0-36.5-1.5-38.5-3.5-42-6.5-36.5-11-31.5-16-18q-15-10-45-12t-53-2-41-14-18-45q0-26 12-48t36-22q46 0 138.5 3.5t138.5 3.5q42 0 126.5-3.5t126.5-3.5q25 0 37.5 22t12.5 48q0 30-17 43.5t-38.5 14.5-49.5 4-43 13q-35 21-35 160l1 320q0 21 1 32 13 3 39 3h699q25 0 38-3 1-11 1-32l1-320q0-139-35-160-18-11-58.5-12.5t-66-13-25.5-49.5q0-26 12.5-48t37.5-22q44 0 132 3.5t132 3.5q43 0 129-3.5t129-3.5q25 0 37.5 22t12.5 48q0 30-17.5 44t-40 14.5-51.5 3-44 12.5q-35 23-35 161l1 943q0 119 34 140 16 10 46 13.5t53.5 4.5 41.5 15.5 18 44.5q0 26-12 48t-36 22z\"}]}}),h.register({headphones:{width:1664,height:1792,paths:[{d:\"M1664 886q0 166-60 314l-20 49-185 33q-22 83-90.5 136.5t-156.5 53.5v32q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23v32q71 0 130 35.5t93 95.5l68-12q29-95 29-193 0-148-88-279t-236.5-209-315.5-78-315.5 78-236.5 209-88 279q0 98 29 193l68 12q34-60 93-95.5t130-35.5v-32q0-14 9-23t23-9h64q14 0 23 9t9 23v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-32q-88 0-156.5-53.5t-90.5-136.5l-185-33-20-49q-60-148-60-314 0-151 67-291t179-242.5 266-163.5 320-61 320 61 266 163.5 179 242.5 67 291z\"}]}}),h.register({\"heart-o\":{width:1792,height:1792,paths:[{d:\"M1664 596q0-81-21.5-143t-55-98.5-81.5-59.5-94-31-98-8-112 25.5-110.5 64-86.5 72-60 61.5q-18 22-49 22t-49-22q-24-28-60-61.5t-86.5-72-110.5-64-112-25.5-98 8-94 31-81.5 59.5-55 98.5-21.5 143q0 168 187 355l581 560 580-559q188-188 188-356zM1792 596q0 221-229 450l-623 600q-18 18-44 18t-44-18l-624-602q-10-8-27.5-26t-55.5-65.5-68-97.5-53.5-121-23.5-138q0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344z\"}]}}),h.register({heart:{width:1792,height:1792,paths:[{d:\"M896 1664q-26 0-44-18l-624-602q-10-8-27.5-26t-55.5-65.5-68-97.5-53.5-121-23.5-138q0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344q0 221-229 450l-623 600q-18 18-44 18z\"}]}}),h.register({heartbeat:{width:1792,height:1792,paths:[{d:\"M1280 1024h305q-5 6-10 10.5t-9 7.5l-3 4-623 600q-18 18-44 18t-44-18l-624-602q-5-2-21-20h369q22 0 39.5-13.5t22.5-34.5l70-281 190 667q6 20 23 33t39 13q21 0 38-13t23-33l146-485 56 112q18 35 57 35zM1792 596q0 145-103 300h-369l-111-221q-8-17-25.5-27t-36.5-8q-45 5-56 46l-129 430-196-686q-6-20-23.5-33t-39.5-13-39 13.5-22 34.5l-116 464h-423q-103-155-103-300 0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344z\"}]}}),h.register({history:{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298zM896 608v448q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-352q0-14 9-23t23-9h64q14 0 23 9t9 23z\"}]}}),h.register({home:{width:1664,height:1792,paths:[{d:\"M1408 992v480q0 26-19 45t-45 19h-384v-384h-256v384h-384q-26 0-45-19t-19-45v-480q0-1 0.5-3t0.5-3l575-474 575 474q1 2 1 6zM1631 923l-62 74q-8 9-21 11h-3q-13 0-21-7l-692-577-692 577q-12 8-24 7-13-2-21-11l-62-74q-8-10-7-23.5t11-21.5l719-599q32-26 76-26t76 26l244 204v-195q0-14 9-23t23-9h192q14 0 23 9t9 23v408l219 182q10 8 11 21.5t-7 23.5z\"}]}}),h.register({\"hospital-o\":{width:1408,height:1792,paths:[{d:\"M384 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1664h384v-1152h-256v32q0 40-28 68t-68 28h-448q-40 0-68-28t-28-68v-32h-256v1152h384v-224q0-13 9.5-22.5t22.5-9.5h320q13 0 22.5 9.5t9.5 22.5v224zM896 480v-320q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v96h-128v-96q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5v-96h128v96q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1408 448v1280q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1280q0-26 19-45t45-19h320v-288q0-40 28-68t68-28h448q40 0 68 28t28 68v288h320q26 0 45 19t19 45z\"}]}}),h.register({hotel:{width:2048,height:1792,paths:[{d:\"M256 1024h1728q26 0 45 19t19 45v448h-256v-256h-1536v256h-256v-1216q0-26 19-45t45-19h128q26 0 45 19t19 45v704zM832 704q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM2048 960v-64q0-159-112.5-271.5t-271.5-112.5h-704q-26 0-45 19t-19 45v384h1152z\"}]}}),h.register({\"hourglass-1\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 66 9 128h1006q9-61 9-128zM1280 1664q0-130-34-249.5t-90.5-208-126.5-152-146-94.5h-230q-76 31-146 94.5t-126.5 152-90.5 208-34 249.5h1024z\"}]}}),h.register({\"hourglass-2\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 206 85 384h854q85-178 85-384zM1223 1344q-54-141-145.5-241.5t-194.5-142.5h-230q-103 42-194.5 142.5t-145.5 241.5h910z\"}]}}),h.register({\"hourglass-3\":{width:1536,height:1792,paths:[{\nd:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-137 51-244 196h700q-107-145-244-196-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z\"}]}}),h.register({\"hourglass-end\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-137 51-244 196h700q-107-145-244-196-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z\"}]}}),h.register({\"hourglass-half\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 206 85 384h854q85-178 85-384zM1223 1344q-54-141-145.5-241.5t-194.5-142.5h-230q-103 42-194.5 142.5t-145.5 241.5h910z\"}]}}),h.register({\"hourglass-o\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-77 29-149 92.5t-129.5 152.5-92.5 210-35 253h1024q0-132-35-253t-92.5-210-129.5-152.5-149-92.5q-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z\"}]}}),h.register({\"hourglass-start\":{width:1536,height:1792,paths:[{d:\"M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 66 9 128h1006q9-61 9-128zM1280 1664q0-130-34-249.5t-90.5-208-126.5-152-146-94.5h-230q-76 31-146 94.5t-126.5 152-90.5 208-34 249.5h1024z\"}]}}),h.register({hourglass:{width:1536,height:1792,paths:[{d:\"M1504 1600q14 0 23 9t9 23v128q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h1472zM130 1536q3-55 16-107t30-95 46-87 53.5-76 64.5-69.5 66-60 70.5-55 66.5-47.5 65-43q-43-28-65-43t-66.5-47.5-70.5-55-66-60-64.5-69.5-53.5-76-46-87-30-95-16-107h1276q-3 55-16 107t-30 95-46 87-53.5 76-64.5 69.5-66 60-70.5 55-66.5 47.5-65 43q43 28 65 43t66.5 47.5 70.5 55 66 60 64.5 69.5 53.5 76 46 87 30 95 16 107h-1276zM1504 0q14 0 23 9t9 23v128q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h1472z\"}]}}),h.register({houzz:{width:1024,height:1792,paths:[{d:\"M512 1191l512-295v591l-512 296v-592zM0 896v591l512-296zM512 9v591l-512 296v-591zM512 600l512-295v591z\"}]}}),h.register({html5:{width:1408,height:1792,paths:[{d:\"M1130 597l16-175h-884l47 534h612l-22 228-197 53-196-53-13-140h-175l22 278 362 100h4v-1l359-99 50-544h-644l-15-181h674zM0 128h1408l-128 1438-578 162-574-162z\"}]}}),h.register({\"i-cursor\":{width:1024,height:1792,paths:[{d:\"M832 128q-320 0-320 224v416h128v128h-128v544q0 224 320 224h64v128h-64q-272 0-384-146-112 146-384 146h-64v-128h64q320 0 320-224v-544h-128v-128h128v-416q0-224-320-224h-64v-128h64q272 0 384 146 112-146 384-146h64v128h-64z\"}]}}),h.register({\"id-badge\":{width:1280,height:1792,paths:[{d:\"M1024 1258q0 64-37 107t-91 43h-512q-54 0-91-43t-37-107 9-118 29.5-104 61-78.5 96.5-28.5q80 75 188 75t188-75q56 0 96.5 28.5t61 78.5 29.5 104 9 118zM870 739q0 94-67.5 160.5t-162.5 66.5-162.5-66.5-67.5-160.5 67.5-160.5 162.5-66.5 162.5 66.5 67.5 160.5zM1152 1632v-1376h-1024v1376q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1280 160v1472q0 66-47 113t-113 47h-960q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h352v96q0 14 9 23t23 9h192q14 0 23-9t9-23v-96h352q66 0 113 47t47 113z\"}]}}),h.register({\"id-card-o\":{width:2048,height:1792,paths:[{d:\"M896 1212q0 55-31.5 93.5t-75.5 38.5h-426q-44 0-75.5-38.5t-31.5-93.5q0-54 7.5-100.5t24.5-90 51-68.5 81-25q64 64 156 64t156-64q47 0 81 25t51 68.5 24.5 90 7.5 100.5zM768 768q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1184v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1408 928v64q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h320q14 0 23 9t9 23zM1792 928v64q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 672v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1920 1504v-1120h-1792v1120q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"id-card\":{width:2048,height:1792,paths:[{d:\"M896 1212q0-54-7.5-100.5t-24.5-90-51-68.5-81-25q-64 64-156 64t-156-64q-47 0-81 25t-51 68.5-24.5 90-7.5 100.5q0 55 31.5 93.5t75.5 38.5h426q44 0 75.5-38.5t31.5-93.5zM768 768q0-80-56-136t-136-56-136 56-56 136 56 136 136 56 136-56 56-136zM1792 1248v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1408 992v-64q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23-9t9-23zM1792 992v-64q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v64q0 14 9 23t23 9h192q14 0 23-9t9-23zM1792 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM128 384h1792v-96q0-14-9-23t-23-9h-1728q-14 0-23 9t-9 23v96zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({ils:{width:1536,height:1792,paths:[{d:\"M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({image:{width:1920,height:1792,paths:[{d:\"M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({imdb:{width:1536,height:1792,paths:[{d:\"M922 797v182q0 4 0.5 15t0 15l-1.5 12t-3.5 11.5-6.5 7.5-11 5.5-16 1.5v-309q9 0 16 1t11 5 6.5 5.5 3.5 9.5 1 10.5v13.5 14zM1238 893v121q0 1 0.5 12.5t0 15.5-2.5 11.5-7.5 10.5-13.5 3q-9 0-14-9-4-10-4-165v-7-8.5-9t1.5-8.5l3.5-7t5-5.5 8-1.5q6 0 10 1.5t6.5 4.5 4 6 2 8.5 0.5 8v9.5 9zM180 1129h122v-472h-122v472zM614 1129h106v-472h-159l-28 221q-20-148-32-221h-158v472h107v-312l45 312h76l43-319v319zM1039 824q0-67-5-90-3-16-11-28.5t-17-20.5-25-14-26.5-8.5-31-4-29-1.5h-29.5-12-91v472h56q169 1 197-24.5t25-180.5q-1-62-1-100zM1356 1021v-133q0-29-2-45t-9.5-33.5-24.5-25-46-7.5q-46 0-77 34v-154h-117v472h110l7-30q30 36 77 36 50 0 66-30.5t16-83.5zM1536 288v1216q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1216q66 0 113 47t47 113z\"}]}}),h.register({inbox:{width:1536,height:1792,paths:[{d:\"M1023 960h316q-1-3-2.5-8.5t-2.5-7.5l-212-496h-708l-212 496q-1 3-2.5 8.5t-2.5 7.5h316l95 192h320zM1536 990v482q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-482q0-62 25-123l238-552q10-25 36.5-42t52.5-17h832q26 0 52.5 17t36.5 42l238 552q25 61 25 123z\"}]}}),h.register({indent:{width:1792,height:1792,paths:[{d:\"M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({industry:{width:1792,height:1792,paths:[{d:\"M448 0q26 0 45 19t19 45v891l536-429q17-14 40-14 26 0 45 19t19 45v379l536-429q17-14 40-14 26 0 45 19t19 45v1152q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h384z\"}]}}),h.register({\"info-circle\":{width:1536,height:1792,paths:[{d:\"M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zM896 480v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({info:{width:640,height:1792,paths:[{d:\"M640 1344v128q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64v-384h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h384q26 0 45 19t19 45v576h64q26 0 45 19t19 45zM512 192v192q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-192q0-26 19-45t45-19h256q26 0 45 19t19 45z\"}]}}),h.register({inr:{width:898,height:1792,paths:[{d:\"M898 470v102q0 14-9 23t-23 9h-168q-23 144-129 234t-276 110q167 178 459 536 14 16 4 34-8 18-29 18h-195q-16 0-25-12-306-367-498-571-9-9-9-22v-127q0-13 9.5-22.5t22.5-9.5h112q132 0 212.5-43t102.5-125h-427q-14 0-23-9t-9-23v-102q0-14 9-23t23-9h413q-57-113-268-113h-145q-13 0-22.5-9.5t-9.5-22.5v-133q0-14 9-23t23-9h832q14 0 23 9t9 23v102q0 14-9 23t-23 9h-233q47 61 64 144h171q14 0 23 9t9 23z\"}]}}),h.register({instagram:{width:1536,height:1792,paths:[{d:\"M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1162 896q0 164-115 279t-279 115-279-115-115-279 115-279 279-115 279 115 115 279zM1270 486q0 38-27 65t-65 27-65-27-27-65 27-65 65-27 65 27 27 65zM768 266q-7 0-76.5-0.5t-105.5 0-96.5 3-103 10-71.5 18.5q-50 20-88 58t-58 88q-11 29-18.5 71.5t-10 103-3 96.5 0 105.5 0.5 76.5-0.5 76.5 0 105.5 3 96.5 10 103 18.5 71.5q20 50 58 88t88 58q29 11 71.5 18.5t103 10 96.5 3 105.5 0 76.5-0.5 76.5 0.5 105.5 0 96.5-3 103-10 71.5-18.5q50-20 88-58t58-88q11-29 18.5-71.5t10-103 3-96.5 0-105.5-0.5-76.5 0.5-76.5 0-105.5-3-96.5-10-103-18.5-71.5q-20-50-58-88t-88-58q-29-11-71.5-18.5t-103-10-96.5-3-105.5 0-76.5 0.5zM1536 896q0 229-5 317-10 208-124 322t-322 124q-88 5-317 5t-317-5q-208-10-322-124t-124-322q-5-88-5-317t5-317q10-208 124-322t322-124q88-5 317-5t317 5q208 10 322 124t124 322q5 88 5 317z\"}]}}),h.register({institution:{width:2048,height:1792,paths:[{d:\"M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z\"}]}}),h.register({\"internet-explorer\":{width:1792,height:1792,paths:[{d:\"M1792 937q0 56-7 104h-1151q0 146 109.5 244.5t257.5 98.5q99 0 185.5-46.5t136.5-130.5h423q-56 159-170.5 281t-267.5 188.5-321 66.5q-187 0-356-83-228 116-394 116-237 0-237-263 0-115 45-275 17-60 109-229 199-360 475-606-184 79-427 354 63-274 283.5-449.5t501.5-175.5q30 0 45 1 255-117 433-117 64 0 116 13t94.5 40.5 66.5 76.5 24 115q0 116-75 286 101 182 101 390zM1722 297q0-83-53-132t-137-49q-108 0-254 70 121 47 222.5 131.5t170.5 195.5q51-135 51-216zM128 1534q0 86 48.5 132.5t134.5 46.5q115 0 266-83-122-72-213.5-183t-137.5-245q-98 205-98 332zM632 821h728q-5-142-113-237t-251-95q-144 0-251.5 95t-112.5 237z\"}]}}),h.register({intersex:{width:1536,height:1792,paths:[{d:\"M1024 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-149-16-270.5-103t-186.5-223.5-53-291.5q16-204 160-353.5t347-172.5q118-14 228 19t198 103l255-254h-134q-14 0-23-9t-9-23v-64zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({ioxhost:{width:2048,height:1792,paths:[{d:\"M1463 832q0 35-25 60.5t-61 25.5h-702q-36 0-61-25.5t-25-60.5 25-60.5 61-25.5h702q36 0 61 25.5t25 60.5zM1677 832q0-86-23-170h-982q-36 0-61-25t-25-60q0-36 25-61t61-25h908q-88-143-235-227t-320-84q-177 0-327.5 87.5t-238 237.5-87.5 327q0 86 23 170h982q36 0 61 25t25 60q0 36-25 61t-61 25h-908q88 143 235.5 227t320.5 84q132 0 253-51.5t208-139 139-208 52-253.5zM2048 577q0 35-25 60t-61 25h-131q17 85 17 170 0 167-65.5 319.5t-175.5 263-262.5 176-319.5 65.5q-246 0-448.5-133t-301.5-350h-189q-36 0-61-25t-25-61q0-35 25-60t61-25h132q-17-85-17-170 0-167 65.5-319.5t175.5-263 262.5-176 320.5-65.5q245 0 447.5 133t301.5 350h188q36 0 61 25t25 61z\"}]}}),h.register({italic:{width:1024,height:1792,paths:[{d:\"M0 1662l17-85q22-7 61.5-16.5t72-19 59.5-23.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z\"}]}}),h.register({joomla:{width:1536,height:1792,paths:[{d:\"M1070 1073l-160 160-151 152-30 30q-65 64-151.5 87t-171.5 2q-16 70-72 115t-129 45q-85 0-145-60.5t-60-145.5q0-72 44.5-128t113.5-72q-22-86 1-173t88-152l12-12 151 152-11 11q-37 37-37 89t37 90q37 37 89 37t89-37l30-30 151-152 161-160zM729 391l12 12-152 152-12-12q-37-37-89-37t-89 37-37 89.5 37 89.5l29 29 152 152 160 160-151 152-161-160-151-152-30-30q-68-67-90-159.5t5-179.5q-70-15-115-71t-45-129q0-85 60-145.5t145-60.5q76 0 133.5 49t69.5 123q84-20 169.5 3.5t149.5 87.5zM1536 1458q0 85-60 145.5t-145 60.5q-74 0-131-47t-71-118q-86 28-179.5 6t-161.5-90l-11-12 151-152 12 12q37 37 89 37t89-37 37-89-37-89l-30-30-152-152-160-160 152-152 160 160 152 152 29 30q64 64 87.5 150.5t2.5 171.5q76 11 126.5 68.5t50.5 134.5zM1534 334q0 77-51 135t-127 69q26 85 3 176.5t-90 158.5l-12 12-151-152 12-12q37-37 37-89t-37-89-89-37-89 37l-30 30-152 152-160 160-152-152 161-160 152-152 29-30q67-67 159-89.5t178 3.5q11-75 68.5-126t135.5-51q85 0 145 60.5t60 145.5z\"}]}}),h.register({jpy:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({jsfiddle:{width:2048,height:1792,paths:[{d:\"M1800 772q111 46 179.5 145.5t68.5 221.5q0 164-118 280.5t-285 116.5q-4 0-11.5-0.5t-10.5-0.5h-1209-1-2-5q-170-10-288-125.5t-118-280.5q0-110 55-203t147-147q-12-39-12-82 0-115 82-196t199-81q95 0 172 58 75-154 222.5-248t326.5-94q166 0 306 80.5t221.5 218.5 81.5 301q0 6-0.5 18t-0.5 18zM468 1038q0 122 84 193t208 71q137 0 240-99-16-20-47.5-56.5t-43.5-50.5q-67 65-144 65-55 0-93.5-33.5t-38.5-87.5q0-53 38.5-87t91.5-34q44 0 84.5 21t73 55 65 75 69 82 77 75 97 55 121.5 21q121 0 204.5-71.5t83.5-190.5q0-121-84-192t-207-71q-143 0-241 97l93 108q66-64 142-64 52 0 92 33t40 84q0 57-37 91.5t-94 34.5q-43 0-82.5-21t-72-55-65.5-75-69.5-82-77.5-75-96.5-55-118.5-21q-122 0-207 70.5t-85 189.5z\"}]}}),h.register({key:{width:1792,height:1792,paths:[{d:\"M832 512q0-80-56-136t-136-56-136 56-56 136q0 42 19 83-41-19-83-19-80 0-136 56t-56 136 56 136 136 56 136-56 56-136q0-42-19-83 41 19 83 19 80 0 136-56t56-136zM1683 1216q0 17-49 66t-66 49q-9 0-28.5-16t-36.5-33-38.5-40-24.5-26l-96 96 220 220q28 28 28 68 0 42-39 81t-81 39q-40 0-68-28l-671-671q-176 131-365 131-163 0-265.5-102.5t-102.5-265.5q0-160 95-313t248-248 313-95q163 0 265.5 102.5t102.5 265.5q0 189-131 365l355 355 96-96q-3-3-26-24.5t-40-38.5-33-36.5-16-28.5q0-17 49-66t66-49q13 0 23 10 6 6 46 44.5t82 79.5 86.5 86 73 78 28.5 41z\"}]}}),h.register({\"keyboard-o\":{width:1920,height:1792,paths:[{d:\"M384 1168v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM512 912v96q0 16-16 16h-224q-16 0-16-16v-96q0-16 16-16h224q16 0 16 16zM384 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1408 1168v96q0 16-16 16h-864q-16 0-16-16v-96q0-16 16-16h864q16 0 16 16zM768 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM640 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1024 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM896 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1280 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1664 1168v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1152 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1408 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1664 656v352q0 16-16 16h-224q-16 0-16-16v-96q0-16 16-16h112v-240q0-16 16-16h96q16 0 16 16zM1792 1408v-896h-1664v896h1664zM1920 512v896q0 53-37.5 90.5t-90.5 37.5h-1664q-53 0-90.5-37.5t-37.5-90.5v-896q0-53 37.5-90.5t90.5-37.5h1664q53 0 90.5 37.5t37.5 90.5z\"}]}}),h.register({krw:{width:1792,height:1792,paths:[{d:\"M514 1195l81-299h-159l75 300q1 1 1 3t1 3q0-1 0.5-3.5t0.5-3.5zM630 768l35-128h-292l32 128h225zM822 768h139l-35-128h-70zM1271 1196l78-300h-162l81 299q0 1 0.5 3.5t1.5 3.5q0-1 0.5-3t0.5-3zM1382 768l33-128h-297l34 128h230zM1792 800v64q0 14-9 23t-23 9h-213l-164 616q-7 24-31 24h-159q-24 0-31-24l-166-616h-209l-167 616q-7 24-31 24h-159q-11 0-19.5-7t-10.5-17l-160-616h-208q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h175l-33-128h-142q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h109l-89-344q-5-15 5-28 10-12 26-12h137q26 0 31 24l90 360h359l97-360q7-24 31-24h126q24 0 31 24l98 360h365l93-360q5-24 31-24h137q16 0 26 12 10 13 5 28l-91 344h111q14 0 23 9t9 23v64q0 14-9 23t-23 9h-145l-34 128h179q14 0 23 9t9 23z\"}]}}),h.register({language:{width:1536,height:1792,paths:[{d:\"M654 1078q-1 3-12.5-0.5t-31.5-11.5l-20-9q-44-20-87-49-7-5-41-31.5t-38-28.5q-67 103-134 181-81 95-105 110-4 2-19.5 4t-18.5 0q6-4 82-92 21-24 85.5-115t78.5-118q17-30 51-98.5t36-77.5q-8-1-110 33-8 2-27.5 7.5t-34.5 9.5-17 5q-2 2-2 10.5t-1 9.5q-5 10-31 15-23 7-47 0-18-4-28-21-4-6-5-23 6-2 24.5-5t29.5-6q58-16 105-32 100-35 102-35 10-2 43-19.5t44-21.5q9-3 21.5-8t14.5-5.5 6 0.5q2 12-1 33 0 2-12.5 27t-26.5 53.5-17 33.5q-25 50-77 131l64 28q12 6 74.5 32t67.5 28q4 1 10.5 25.5t4.5 30.5zM449 592q3 15-4 28-12 23-50 38-30 12-60 12-26-3-49-26-14-15-18-41l1-3q3 3 19.5 5t26.5 0 58-16q36-12 55-14 17 0 21 17zM1147 721l63 227-139-42zM39 1521l694-232v-1032l-694 233v1031zM1280 1204l102 31-181-657-100-31-216 536 102 31 45-110 211 65zM777 242l573 184v-380zM1088 1565l158 13-54 160-40-66q-130 83-276 108-58 12-91 12h-84q-79 0-199.5-39t-183.5-85q-8-7-8-16 0-8 5-13.5t13-5.5q4 0 18 7.5t30.5 16.5 20.5 11q73 37 159.5 61.5t157.5 24.5q95 0 167-14.5t157-50.5q15-7 30.5-15.5t34-19 28.5-16.5zM1536 486v1079l-774-246q-14 6-375 127.5t-368 121.5q-13 0-18-13 0-1-1-3v-1078q3-9 4-10 5-6 20-11 107-36 149-50v-384l558 198q2 0 160.5-55t316-108.5 161.5-53.5q20 0 20 21v418z\"}]}}),h.register({laptop:{width:1920,height:1792,paths:[{d:\"M416 1280q-66 0-113-47t-47-113v-704q0-66 47-113t113-47h1088q66 0 113 47t47 113v704q0 66-47 113t-113 47h-1088zM384 416v704q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5-9.5t9.5-22.5v-704q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5zM1760 1344h160v96q0 40-47 68t-113 28h-1600q-66 0-113-28t-47-68v-96h160 1600zM1040 1440q16 0 16-16t-16-16h-160q-16 0-16 16t16 16h160z\"}]}}),h.register({\"lastfm-square\":{width:1536,height:1792,paths:[{d:\"M1432 1052q0-173-234-239-35-10-53-16.5t-38-25-29-46.5q0-2-2-8.5t-3-12-1-7.5q0-36 24.5-59.5t60.5-23.5q54 0 71 15h-1q20 15 39 51l93-71q-39-54-49-64-33-29-67.5-39t-85.5-10q-80 0-142 57.5t-62 137.5q0 7 2 23 16 96 64.5 140t148.5 73q29 8 49 15.5t45 21.5 38.5 34.5 13.5 46.5v5q1 58-40.5 93t-100.5 35q-97 0-167-144-23-47-51.5-121.5t-48-125.5-54-110.5-74-95.5-103.5-60.5-147-24.5q-101 0-192 56t-144 148-50 192v1q4 108 50.5 199t133.5 147.5 196 56.5q186 0 279-110 20-27 31-51l-60-109q-42 80-99 116t-146 36q-115 0-191-87t-76-204q0-105 82-189t186-84q112 0 170 53.5t104 172.5q8 21 25.5 68.5t28.5 76.5 31.5 74.5 38.5 74 45.5 62.5 55.5 53.5 66 33 80 13.5q107 0 183-69.5t76-174.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({lastfm:{width:1792,height:1792,paths:[{d:\"M1292 704q0 6 10 41 10 29 25 49.5t41 34 44 20 55 16.5q325 91 325 332 0 146-105.5 242.5t-254.5 96.5q-59 0-111.5-18.5t-91.5-45.5-77-74.5-63-87.5-53.5-103.5-43.5-103-39.5-106.5-35.5-95q-32-81-61.5-133.5t-73.5-96.5-104-64-142-20q-96 0-183 55.5t-138 144.5-51 185q0 160 106.5 279.5t263.5 119.5q177 0 258-95 56-63 83-116l84 152q-15 34-44 70l1 1q-131 152-388 152-147 0-269.5-79t-190.5-207.5-68-274.5q0-105 43.5-206t116-176.5 172-121.5 204.5-46q87 0 159 19t123.5 50 95 80 72.5 99 58.5 117 50.5 124.5 50 130.5 55 127q96 200 233 200 81 0 138.5-48.5t57.5-128.5q0-42-19-72t-50.5-46-72.5-31.5-84.5-27-87.5-34-81-52-65-82-39-122.5q-3-16-3-33 0-110 87.5-192t198.5-78q78 3 120.5 14.5t90.5 53.5h-1q12 11 23 24.5t26 36 19 27.5l-129 99q-26-49-54-70v-1q-23-21-97-21-49 0-84 33t-35 83z\"}]}}),h.register({leaf:{width:1792,height:1792,paths:[{d:\"M1280 704q0-26-19-45t-45-19q-172 0-318 49.5t-259.5 134-235.5 219.5q-19 21-19 45 0 26 19 45t45 19q24 0 45-19 27-24 74-71t67-66q137-124 268.5-176t313.5-52q26 0 45-19t19-45zM1792 506q0 95-20 193-46 224-184.5 383t-357.5 268q-214 108-438 108-148 0-286-47-15-5-88-42t-96-37q-16 0-39.5 32t-45 70-52.5 70-60 32q-43 0-63.5-17.5t-45.5-59.5q-2-4-6-11t-5.5-10-3-9.5-1.5-13.5q0-35 31-73.5t68-65.5 68-56 31-48q0-4-14-38t-16-44q-9-51-9-104 0-115 43.5-220t119-184.5 170.5-139 204-95.5q55-18 145-25.5t179.5-9 178.5-6 163.5-24 113.5-56.5l29.5-29.5t29.5-28 27-20 36.5-16 43.5-4.5q39 0 70.5 46t47.5 112 24 124 8 96z\"}]}}),h.register({leanpub:{width:2048,height:1792,paths:[{d:\"M1893 392l155 1272q-131 0-257-57-200-91-393-91-226 0-374 148-148-148-374-148-193 0-393 91-128 57-252 57h-5l155-1272q224-127 482-127 233 0 387 106 154-106 387-106 258 0 482 127zM1398 1379q129 0 232 28.5t260 93.5l-124-1021q-171-78-368-78-224 0-374 141-150-141-374-141-197 0-368 78l-124 1021q105-43 165.5-65t148.5-39.5 178-17.5q202 0 374 108 172-108 374-108zM1438 1345l-55-907q-211 4-359 155-152-155-374-155-176 0-336 66l-114 941q124-51 228.5-76t221.5-25q209 0 374 102 172-107 374-102z\"}]}}),h.register({legal:{width:1792,height:1792,paths:[{d:\"M1771 1536q0 53-37 90l-107 108q-39 37-91 37-53 0-90-37l-363-364q-38-36-38-90 0-53 43-96l-256-256-126 126q-14 14-34 14t-34-14q2 2 12.5 12t12.5 13 10 11.5 10 13.5 6 13.5 5.5 16.5 1.5 18q0 38-28 68-3 3-16.5 18t-19 20.5-18.5 16.5-22 15.5-22 9-26 4.5q-40 0-68-28l-408-408q-28-28-28-68 0-13 4.5-26t9-22 15.5-22 16.5-18.5 20.5-19 18-16.5q30-28 68-28 10 0 18 1.5t16.5 5.5 13.5 6 13.5 10 11.5 10 13 12.5 12 12.5q-14-14-14-34t14-34l348-348q14-14 34-14t34 14q-2-2-12.5-12t-12.5-13-10-11.5-10-13.5-6-13.5-5.5-16.5-1.5-18q0-38 28-68 3-3 16.5-18t19-20.5 18.5-16.5 22-15.5 22-9 26-4.5q40 0 68 28l408 408q28 28 28 68 0 13-4.5 26t-9 22-15.5 22-16.5 18.5-20.5 19-18 16.5q-30 28-68 28-10 0-18-1.5t-16.5-5.5-13.5-6-13.5-10-11.5-10-13-12.5-12-12.5q14 14 14 34t-14 34l-126 126 256 256q43-43 96-43 52 0 91 37l363 363q37 39 37 91z\"}]}}),h.register({\"lemon-o\":{width:1536,height:1792,paths:[{d:\"M1407 826q0-44-7-113.5t-18-96.5q-12-30-17-44t-9-36.5-4-48.5q0-23 5-68.5t5-67.5q0-37-10-55-4-1-13-1-19 0-58 4.5t-59 4.5q-60 0-176-24t-175-24q-43 0-94.5 11.5t-85 23.5-89.5 34q-137 54-202 103-96 73-159.5 189.5t-88 236-24.5 248.5q0 40 12.5 120t12.5 121q0 23-11 66.5t-11 65.5 12 36.5 34 14.5q24 0 72.5-11t73.5-11q57 0 169.5 15.5t169.5 15.5q181 0 284-36 129-45 235.5-152.5t166-245.5 59.5-275zM1535 824q0 165-70 327.5t-196 288-281 180.5q-124 44-326 44-57 0-170-14.5t-169-14.5q-24 0-72.5 14.5t-73.5 14.5q-73 0-123.5-55.5t-50.5-128.5q0-24 11-68t11-67q0-40-12.5-120.5t-12.5-121.5q0-111 18-217.5t54.5-209.5 100.5-194 150-156q78-59 232-120 194-78 316-78 60 0 175.5 24t173.5 24q19 0 57-5t58-5q81 0 118 50.5t37 134.5q0 23-5 68t-5 68q0 13 2 25t3.5 16.5 7.5 20.5 8 20q16 40 25 118.5t9 136.5z\"}]}}),h.register({\"level-down\":{width:1024,height:1792,paths:[{d:\"M32 256h704q13 0 22.5 9.5t9.5 23.5v863h192q40 0 58 37t-9 69l-320 384q-18 22-49 22t-49-22l-320-384q-26-31-9-69 18-37 58-37h192v-640h-320q-14 0-25-11l-160-192q-13-14-4-34 9-19 29-19z\"}]}}),h.register({\"level-up\":{width:1024,height:1792,paths:[{d:\"M1018 603q-18 37-58 37h-192v864q0 14-9 23t-23 9h-704q-21 0-29-18-8-20 4-35l160-192q9-11 25-11h320v-640h-192q-40 0-58-37-17-37 9-68l320-384q18-22 49-22t49 22l320 384q27 32 9 68z\"}]}}),h.register({\"life-bouy\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"life-buoy\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"life-ring\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"life-saver\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({\"lightbulb-o\":{width:1024,height:1792,paths:[{d:\"M736 576q0 13-9.5 22.5t-22.5 9.5-22.5-9.5-9.5-22.5q0-46-54-71t-106-25q-13 0-22.5-9.5t-9.5-22.5 9.5-22.5 22.5-9.5q50 0 99.5 16t87 54 37.5 90zM896 576q0-72-34.5-134t-90-101.5-123-62-136.5-22.5-136.5 22.5-123 62-90 101.5-34.5 134q0 101 68 180 10 11 30.5 33t30.5 33q128 153 141 298h228q13-145 141-298 10-11 30.5-33t30.5-33q68-79 68-180zM1024 576q0 155-103 268-45 49-74.5 87t-59.5 95.5-34 107.5q47 28 47 82 0 37-25 64 25 27 25 64 0 52-45 81 13 23 13 47 0 46-31.5 71t-77.5 25q-20 44-60 70t-87 26-87-26-60-70q-46 0-77.5-25t-31.5-71q0-24 13-47-45-29-45-81 0-37 25-64-25-27-25-64 0-54 47-82-4-50-34-107.5t-59.5-95.5-74.5-87q-103-113-103-268 0-99 44.5-184.5t117-142 164-89 186.5-32.5 186.5 32.5 164 89 117 142 44.5 184.5z\"}]}}),h.register({\"line-chart\":{width:2048,height:1792,paths:[{d:\"M2048 1536v128h-2048v-1536h128v1408h1920zM1920 288v435q0 21-19.5 29.5t-35.5-7.5l-121-121-633 633q-10 10-23 10t-23-10l-233-233-416 416-192-192 585-585q10-10 23-10t23 10l233 233 464-464-121-121q-16-16-7.5-35.5t29.5-19.5h435q14 0 23 9t9 23z\"}]}}),h.register({link:{width:1664,height:1792,paths:[{d:\"M1456 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zM753 511q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z\"}]}}),h.register({\"linkedin-square\":{width:1536,height:1792,paths:[{d:\"M237 1414h231v-694h-231v694zM483 506q-1-52-36-86t-93-34-94.5 34-36.5 86q0 51 35.5 85.5t92.5 34.5h1q59 0 95-34.5t36-85.5zM1068 1414h231v-398q0-154-73-233t-193-79q-136 0-209 117h2v-101h-231q3 66 0 694h231v-388q0-38 7-56 15-35 45-59.5t74-24.5q116 0 116 157v371zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({linkedin:{width:1536,height:1792,paths:[{d:\"M349 625v991h-330v-991h330zM370 319q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zM1536 1048v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z\"}]}}),h.register({linode:{width:1536,height:1792,paths:[{d:\"M330 1535l202 214-34-236-216-213zM556 1761l274-218-11-245-300 215zM245 1123l227 213-48-327-245-204zM495 1347l317-214-14-324-352 200zM843 1358l95 80-2-239-103-79q0 1 1 8.5t0 12-5 7.5l-78 52 85 70q7 6 7 88zM138 606l256 200-68-465-279-173zM1173 1269l15-234-230 164 2 240zM417 814l373-194-19-441-423 163zM1270 1179l20-233-226-142-2 105 144 95q6 4 4 9l-7 119zM1461 1040l30-222-179 128-20 228zM1273 1207l-71-49-8 117q0 5-4 8l-234 187q-7 5-14 0l-98-83 7 161q0 5-4 8l-293 234q-4 2-6 2-8-2-8-3l-228-242q-4-4-59-277-2-7 5-11l61-37q-94-86-95-92l-72-351q-2-7 6-12l94-45q-133-100-135-108l-96-466q-2-10 7-13l433-135q5 0 8 1l317 153q6 4 6 9l20 463q0 7-6 10l-118 61 126 85q5 2 5 8l5 123 121-74q5-4 11 0l84 56 3-110q0-6 5-9l206-126q6-3 11 0l245 135q4 4 5 7t-6.5 60-17.5 124.5-10 70.5q0 5-4 7l-191 153q-6 5-13 0z\"}]}}),h.register({linux:{width:1536,height:1792,paths:[{\nd:\"M663 411q-11 1-15.5 10.5t-8.5 9.5q-5 1-5-5 0-12 19-15h10zM750 425q-4 1-11.5-6.5t-17.5-4.5q24-11 32 2 3 6-3 9zM399 852q-4-1-6 3t-4.5 12.5-5.5 13.5-10 13q-10 11-1 12 4 1 12.5-7t12.5-18q1-3 2-7t2-6 1.5-4.5 0.5-4v-3t-1-2.5-3-2zM1254 1211q0-18-55-42 4-15 7.5-27.5t5-26 3-21.5 0.5-22.5-1-19.5-3.5-22-4-20.5-5-25-5.5-26.5q-10-48-47-103t-72-75q24 20 57 83 87 162 54 278-11 40-50 42-31 4-38.5-18.5t-8-83.5-11.5-107q-9-39-19.5-69t-19.5-45.5-15.5-24.5-13-15-7.5-7q-14-62-31-103t-29.5-56-23.5-33-15-40q-4-21 6-53.5t4.5-49.5-44.5-25q-15-3-44.5-18t-35.5-16q-8-1-11-26t8-51 36-27q37-3 51 30t4 58q-11 19-2 26.5t30 0.5q13-4 13-36v-37q-5-30-13.5-50t-21-30.5-23.5-15-27-7.5q-107 8-89 134 0 15-1 15-9-9-29.5-10.5t-33 0.5-15.5-5q1-57-16-90t-45-34q-27-1-41.5 27.5t-16.5 59.5q-1 15 3.5 37t13 37.5 15.5 13.5q10-3 16-14 4-9-7-8-7 0-15.5-14.5t-9.5-33.5q-1-22 9-37t34-14q17 0 27 21t9.5 39-1.5 22q-22 15-31 29-8 12-27.5 23.5t-20.5 12.5q-13 14-15.5 27t7.5 18q14 8 25 19.5t16 19 18.5 13 35.5 6.5q47 2 102-15 2-1 23-7t34.5-10.5 29.5-13 21-17.5q9-14 20-8 5 3 6.5 8.5t-3 12-16.5 9.5q-20 6-56.5 21.5t-45.5 19.5q-44 19-70 23-25 5-79-2-10-2-9 2t17 19q25 23 67 22 17-1 36-7t36-14 33.5-17.5 30-17 24.5-12 17.5-2.5 8.5 11q0 2-1 4.5t-4 5-6 4.5-8.5 5-9 4.5-10 5-9.5 4.5q-28 14-67.5 44t-66.5 43-49 1q-21-11-63-73-22-31-25-22-1 3-1 10 0 25-15 56.5t-29.5 55.5-21 58 11.5 63q-23 6-62.5 90t-47.5 141q-2 18-1.5 69t-5.5 59q-8 24-29 3-32-31-36-94-2-28 4-56 4-19-1-18-2 1-4 5-36 65 10 166 5 12 25 28t24 20q20 23 104 90.5t93 76.5q16 15 17.5 38t-14 43-45.5 23q8 15 29 44.5t28 54 7 70.5q46-24 7-92-4-8-10.5-16t-9.5-12-2-6q3-5 13-9.5t20 2.5q46 52 166 36 133-15 177-87 23-38 34-30 12 6 10 52-1 25-23 92-9 23-6 37.5t24 15.5q3-19 14.5-77t13.5-90q2-21-6.5-73.5t-7.5-97 23-70.5q15-18 51-18 1-37 34.5-53t72.5-10.5 60 22.5zM626 384q3-17-2.5-30t-11.5-15q-9-2-9 7 2 5 5 6 10 0 7 15-3 20 8 20 3 0 3-3zM1045 581q-2-8-6.5-11.5t-13-5-14.5-5.5q-5-3-9.5-8t-7-8-5.5-6.5-4-4-4 1.5q-14 16 7 43.5t39 31.5q9 1 14.5-8t3.5-20zM867 368q0-11-5-19.5t-11-12.5-9-3q-6 0-8 2t0 4 5 3q14 4 18 31 0 3 8-2 2-2 2-3zM921 135q0-2-2.5-5t-9-7-9.5-6q-15-15-24-15-9 1-11.5 7.5t-1 13-0.5 12.5q-1 4-6 10.5t-6 9 3 8.5q4 3 8 0t11-9 15-9q1-1 9-1t15-2 9-7zM1486 1476q20 12 31 24.5t12 24-2.5 22.5-15.5 22-23.5 19.5-30 18.5-31.5 16.5-32 15.5-27 13q-38 19-85.5 56t-75.5 64q-17 16-68 19.5t-89-14.5q-18-9-29.5-23.5t-16.5-25.5-22-19.5-47-9.5q-44-1-130-1-19 0-57 1.5t-58 2.5q-44 1-79.5 15t-53.5 30-43.5 28.5-53.5 11.5q-29-1-111-31t-146-43q-19-4-51-9.5t-50-9-39.5-9.5-33.5-14.5-17-19.5q-10-23 7-66.5t18-54.5q1-16-4-40t-10-42.5-4.5-36.5 10.5-27q14-12 57-14t60-12q30-18 42-35t12-51q21 73-32 106-32 20-83 15-34-3-43 10-13 15 5 57 2 6 8 18t8.5 18 4.5 17 1 22q0 15-17 49t-14 48q3 17 37 26 20 6 84.5 18.5t99.5 20.5q24 6 74 22t82.5 23 55.5 4q43-6 64.5-28t23-48-7.5-58.5-19-52-20-36.5q-121-190-169-242-68-74-113-40-11 9-15-15-3-16-2-38 1-29 10-52t24-47 22-42q8-21 26.5-72t29.5-78 30-61 39-54q110-143 124-195-12-112-16-310-2-90 24-151.5t106-104.5q39-21 104-21 53-1 106 13.5t89 41.5q57 42 91.5 121.5t29.5 147.5q-5 95 30 214 34 113 133 218 55 59 99.5 163t59.5 191q8 49 5 84.5t-12 55.5-20 22q-10 2-23.5 19t-27 35.5-40.5 33.5-61 14q-18-1-31.5-5t-22.5-13.5-13.5-15.5-11.5-20.5-9-19.5q-22-37-41-30t-28 49 7 97q20 70 1 195-10 65 18 100.5t73 33 85-35.5q59-49 89.5-66.5t103.5-42.5q53-18 77-36.5t18.5-34.5-25-28.5-51.5-23.5q-33-11-49.5-48t-15-72.5 15.5-47.5q1 31 8 56.5t14.5 40.5 20.5 28.5 21 19 21.5 13 16.5 9.5z\"}]}}),h.register({\"list-alt\":{width:1792,height:1792,paths:[{d:\"M384 1184v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 928v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 672v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1536 1184v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 928v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 672v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1664 1376v-832q0-13-9.5-22.5t-22.5-9.5h-1472q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1792 288v1088q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"list-ol\":{width:1792,height:1792,paths:[{d:\"M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zM383 993v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zM384 413v99h-335v-99h107q0-41 0.5-121.5t0.5-121.5v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zM1792 800v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zM1792 288v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({\"list-ul\":{width:1792,height:1792,paths:[{d:\"M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 896q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zM384 384q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 800v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zM1792 288v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({list:{width:1792,height:1792,paths:[{d:\"M256 1312v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM256 928v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM256 544v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM256 160v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({\"location-arrow\":{width:1408,height:1792,paths:[{d:\"M1401 349l-640 1280q-17 35-57 35-5 0-15-2-22-5-35.5-22.5t-13.5-39.5v-576h-576q-22 0-39.5-13.5t-22.5-35.5 4-42 29-30l1280-640q13-7 29-7 27 0 45 19 15 14 18.5 34.5t-6.5 39.5z\"}]}}),h.register({lock:{width:1152,height:1792,paths:[{d:\"M320 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zM1152 864v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\"}]}}),h.register({\"long-arrow-down\":{width:768,height:1792,paths:[{d:\"M765 1299q8 19-5 35l-350 384q-10 10-23 10-14 0-24-10l-355-384q-13-16-5-35 9-19 29-19h224v-1248q0-14 9-23t23-9h192q14 0 23 9t9 23v1248h224q21 0 29 19z\"}]}}),h.register({\"long-arrow-left\":{width:1792,height:1792,paths:[{d:\"M1792 800v192q0 14-9 23t-23 9h-1248v224q0 21-19 29t-35-5l-384-350q-10-10-10-23 0-14 10-24l384-354q16-14 35-6 19 9 19 29v224h1248q14 0 23 9t9 23z\"}]}}),h.register({\"long-arrow-right\":{width:1792,height:1792,paths:[{d:\"M1728 893q0 14-10 24l-384 354q-16 14-35 6-19-9-19-29v-224h-1248q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h1248v-224q0-21 19-29t35 5l384 350q10 10 10 23z\"}]}}),h.register({\"long-arrow-up\":{width:768,height:1792,paths:[{d:\"M765 493q-9 19-29 19h-224v1248q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-1248h-224q-21 0-29-19t5-35l350-384q10-10 23-10 14 0 24 10l355 384q13 16 5 35z\"}]}}),h.register({\"low-vision\":{width:1792,height:1792,paths:[{d:\"M335 1356q-2 0-6-2-86-57-168.5-145t-139.5-180q-21-30-21-69 0-9 2-19t4-18 7-18 8.5-16 10.5-17 10-15 12-15.5 11-14.5q184-251 452-365-110-198-110-211 0-19 17-29 116-64 128-64 18 0 28 16l124 229q92-19 192-19 266 0 497.5 137.5t378.5 369.5q20 31 20 69t-20 69q-91 142-218.5 253.5t-278.5 175.5q110 198 110 211 0 20-17 29-116 64-127 64-19 0-29-16l-124-229-64-119-444-820 7-7q-58 24-99 47 3 5 127 234t243 449 119 223q0 7-9 9-13 3-72 3-57 0-60-7l-456-841q-39 28-82 68 24 43 214 393.5t190 354.5q0 10-11 10-14 0-82.5-22t-72.5-28l-106-197-224-413q-44 53-78 106 2 3 18 25t23 34l176 327q0 10-10 10zM1165 1254l49 91q273-111 450-385-180-277-459-389 67 64 103 148.5t36 176.5q0 106-47 200.5t-132 157.5zM848 640q0 20 14 34t34 14q86 0 147 61t61 147q0 20 14 34t34 14 34-14 14-34q0-126-89-215t-215-89q-20 0-34 14t-14 34zM1214 575l-9-4 7 7z\"}]}}),h.register({magic:{width:1664,height:1792,paths:[{d:\"M1190 581l293-293-107-107-293 293zM1637 288q0 27-18 45l-1286 1286q-18 18-45 18t-45-18l-198-198q-18-18-18-45t18-45l1286-1286q18-18 45-18t45 18l198 198q18 18 18 45zM286 98l98 30-98 30-30 98-30-98-98-30 98-30 30-98zM636 260l196 60-196 60-60 196-60-196-196-60 196-60 60-196zM1566 738l98 30-98 30-30 98-30-98-98-30 98-30 30-98zM926 98l98 30-98 30-30 98-30-98-98-30 98-30 30-98z\"}]}}),h.register({magnet:{width:1536,height:1792,paths:[{d:\"M1536 832v128q0 201-98.5 362t-274 251.5-395.5 90.5-395.5-90.5-274-251.5-98.5-362v-128q0-26 19-45t45-19h384q26 0 45 19t19 45v128q0 52 23.5 90t53.5 57 71 30 64 13 44 2 44-2 64-13 71-30 53.5-57 23.5-90v-128q0-26 19-45t45-19h384q26 0 45 19t19 45zM512 192v384q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h384q26 0 45 19t19 45zM1536 192v384q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h384q26 0 45 19t19 45z\"}]}}),h.register({\"mail-forward\":{width:1792,height:1792,paths:[{d:\"M1792 640q0 26-19 45l-512 512q-19 19-45 19t-45-19-19-45v-256h-224q-98 0-175.5 6t-154 21.5-133 42.5-105.5 69.5-80 101-48.5 138.5-17.5 181q0 55 5 123 0 6 2.5 23.5t2.5 26.5q0 15-8.5 25t-23.5 10q-16 0-28-17-7-9-13-22t-13.5-30-10.5-24q-127-285-127-451 0-199 53-333 162-403 875-403h224v-256q0-26 19-45t45-19 45 19l512 512q19 19 19 45z\"}]}}),h.register({\"mail-reply-all\":{width:1792,height:1792,paths:[{d:\"M640 1082v70q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v69l-397 398q-19 19-19 45t19 45zM1792 1120q0 58-17 133.5t-38.5 138-48 125-40.5 90.5l-20 40q-8 17-28 17-6 0-9-1-25-8-23-34 43-400-106-565-64-71-170.5-110.5t-267.5-52.5v251q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v262q411 28 599 221 169 173 169 509z\"}]}}),h.register({\"mail-reply\":{width:1792,height:1792,paths:[{d:\"M1792 1120q0 166-127 451-3 7-10.5 24t-13.5 30-13 22q-12 17-28 17-15 0-23.5-10t-8.5-25q0-9 2.5-26.5t2.5-23.5q5-68 5-123 0-101-17.5-181t-48.5-138.5-80-101-105.5-69.5-133-42.5-154-21.5-175.5-6h-224v256q0 26-19 45t-45 19-45-19l-512-512q-19-19-19-45t19-45l512-512q19-19 45-19t45 19 19 45v256h224q713 0 875 403 53 134 53 333z\"}]}}),h.register({male:{width:1024,height:1792,paths:[{d:\"M1024 704v416q0 40-28 68t-68 28-68-28-28-68v-352h-64v912q0 46-33 79t-79 33-79-33-33-79v-464h-64v464q0 46-33 79t-79 33-79-33-33-79v-912h-64v352q0 40-28 68t-68 28-68-28-28-68v-416q0-80 56-136t136-56h640q80 0 136 56t56 136zM736 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({\"map-marker\":{width:1024,height:1792,paths:[{d:\"M768 640q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1024 640q0 109-33 179l-364 774q-16 33-47.5 52t-67.5 19-67.5-19-46.5-52l-365-774q-33-70-33-179 0-212 150-362t362-150 362 150 150 362z\"}]}}),h.register({\"map-o\":{width:2048,height:1792,paths:[{d:\"M2020 11q28 20 28 53v1408q0 20-11 36t-29 23l-640 256q-24 11-48 0l-616-246-616 246q-10 5-24 5-19 0-36-11-28-20-28-53v-1408q0-20 11-36t29-23l640-256q24-11 48 0l616 246 616-246q32-13 60 6zM736 146v1270l576 230v-1270zM128 363v1270l544-217v-1270zM1920 1429v-1270l-544 217v1270z\"}]}}),h.register({\"map-pin\":{width:1024,height:1792,paths:[{d:\"M512 1088q66 0 128-15v655q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-655q62 15 128 15zM512 0q212 0 362 150t150 362-150 362-362 150-362-150-150-362 150-362 362-150zM512 224q14 0 23-9t9-23-9-23-23-9q-146 0-249 103t-103 249q0 14 9 23t23 9 23-9 9-23q0-119 84.5-203.5t203.5-84.5z\"}]}}),h.register({\"map-signs\":{width:1792,height:1792,paths:[{d:\"M1745 297q10 10 10 23t-10 23l-141 141q-28 28-68 28h-1344q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h576v-64q0-26 19-45t45-19h128q26 0 45 19t19 45v64h512q40 0 68 28zM768 1216h256v512q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-512zM1600 768q26 0 45 19t19 45v256q0 26-19 45t-45 19h-1344q-40 0-68-28l-141-141q-10-10-10-23t10-23l141-141q28-28 68-28h512v-192h256v192h576z\"}]}}),h.register({map:{width:1792,height:1792,paths:[{d:\"M512 0q13 0 22.5 9.5t9.5 22.5v1472q0 20-17 28l-480 256q-7 4-15 4-13 0-22.5-9.5t-9.5-22.5v-1472q0-20 17-28l480-256q7-4 15-4zM1760 0q13 0 22.5 9.5t9.5 22.5v1472q0 20-17 28l-480 256q-7 4-15 4-13 0-22.5-9.5t-9.5-22.5v-1472q0-20 17-28l480-256q7-4 15-4zM640 0q8 0 14 3l512 256q18 10 18 29v1472q0 13-9.5 22.5t-22.5 9.5q-8 0-14-3l-512-256q-18-10-18-29v-1472q0-13 9.5-22.5t22.5-9.5z\"}]}}),h.register({\"mars-double\":{width:1920,height:1792,paths:[{d:\"M1536 416q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q76 95 107.5 214t9.5 247q-31 182-166 312t-318 156q-210 29-384.5-80t-241.5-300q-117-6-221-57.5t-177.5-133-113.5-192.5-32-230q9-135 78-252t182-191.5 248-89.5q118-14 227.5 19t198.5 103l255-254h-134q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q59 74 93 169 182 9 328 124l255-254h-134q-14 0-23-9t-9-23v-64zM1024 832q0-20-4-58-162 25-271 150t-109 292q0 20 4 58 162-25 271-150t109-292zM128 832q0 168 111 294t276 149q-3-29-3-59 0-210 135-369.5t338-196.5q-53-120-163.5-193t-245.5-73q-185 0-316.5 131.5t-131.5 316.5zM1088 1664q185 0 316.5-131.5t131.5-316.5q0-168-111-294t-276-149q3 28 3 59 0 210-135 369.5t-338 196.5q53 120 163.5 193t245.5 73z\"}]}}),h.register({\"mars-stroke-h\":{width:2048,height:1792,paths:[{d:\"M1901 915q19 19 19 45t-19 45l-294 294q-9 10-22.5 10t-22.5-10l-45-45q-10-9-10-22.5t10-22.5l185-185h-294v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-132q-24 217-187.5 364.5t-384.5 147.5q-167 0-306-87t-212-236-54-319q15-133 88-245.5t188-182 249-80.5q155-12 292 52.5t224 186 103 271.5h132v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224h294l-185-185q-10-9-10-22.5t10-22.5l45-45q9-10 22.5-10t22.5 10zM576 1408q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"mars-stroke-v\":{width:1280,height:1792,paths:[{d:\"M640 644q217 24 364.5 187.5t147.5 384.5q0 167-87 306t-236 212-319 54q-133-15-245.5-88t-182-188-80.5-249q-12-155 52.5-292t186-224 271.5-103v-132h-160q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h160v-165l-92 92q-10 9-23 9t-22-9l-46-46q-9-9-9-22t9-23l202-201q19-19 45-19t45 19l202 201q9 10 9 23t-9 22l-46 46q-9 9-22 9t-23-9l-92-92v165h160q14 0 23 9t9 23v64q0 14-9 23t-23 9h-160v132zM576 1664q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"mars-stroke\":{width:1536,height:1792,paths:[{d:\"M1472 128q26 0 45 19t19 45v416q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-262l-213 214 140 140q9 10 9 23t-9 22l-46 46q-9 9-22 9t-23-9l-140-141-78 79q126 156 126 359 0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5q203 0 359 126l78-78-172-172q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l172 172 213-213h-261q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h416zM576 1536q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({mars:{width:1536,height:1792,paths:[{d:\"M1472 128q26 0 45 19t19 45v416q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-262l-382 383q126 156 126 359 0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5q203 0 359 126l382-382h-261q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h416zM576 1536q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({maxcdn:{width:1792,height:1792,paths:[{d:\"M1745 773l-164 763h-334l178-832q13-56-15-88-27-33-83-33h-169l-204 953h-334l204-953h-286l-204 953h-334l204-953-153-327h1276q101 0 189.5 40.5t147.5 113.5q60 73 81 168.5t0 194.5z\"}]}}),h.register({meanpath:{width:1536,height:1792,paths:[{d:\"M1311 842v114q0 24-13.5 38t-37.5 14h-202q-24 0-38-14t-14-38v-114q0-24 14-38t38-14h202q24 0 37.5 14t13.5 38zM821 1072v-250q0-53-32.5-85.5t-85.5-32.5h-133q-68 0-96 52-28-52-96-52h-130q-53 0-85.5 32.5t-32.5 85.5v250q0 22 21 22h55q22 0 22-22v-230q0-24 13.5-38t38.5-14h94q24 0 38 14t14 38v230q0 22 21 22h54q22 0 22-22v-230q0-24 14-38t38-14h97q24 0 37.5 14t13.5 38v230q0 22 22 22h55q21 0 21-22zM1410 976v-154q0-53-33-85.5t-86-32.5h-264q-53 0-86 32.5t-33 85.5v410q0 21 22 21h55q21 0 21-21v-180q31 42 94 42h191q53 0 86-32.5t33-85.5zM1536 360v1072q0 96-68 164t-164 68h-1072q-96 0-164-68t-68-164v-1072q0-96 68-164t164-68h1072q96 0 164 68t68 164z\"}]}}),h.register({medium:{width:1792,height:1792,paths:[{d:\"M597 421v1173q0 25-12.5 42.5t-36.5 17.5q-17 0-33-8l-465-233q-21-10-35.5-33.5t-14.5-46.5v-1140q0-20 10-34t29-14q14 0 44 15l511 256q3 3 3 5zM661 522l534 866-534-266v-600zM1792 540v1054q0 25-14 40.5t-38 15.5-47-13l-441-220zM1789 420q0 3-256.5 419.5t-300.5 487.5l-390-634 324-527q17-28 52-28 14 0 26 6l541 270q4 2 4 6z\"}]}}),h.register({medkit:{width:1792,height:1792,paths:[{d:\"M1280 1120v-192q0-14-9-23t-23-9h-224v-224q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v224h-224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23-9t9-23v-224h224q14 0 23-9t9-23zM640 384h512v-128h-512v128zM256 384v1280h-32q-92 0-158-66t-66-158v-832q0-92 66-158t158-66h32zM1440 384v1280h-1088v-1280h160v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h160zM1792 608v832q0 92-66 158t-158 66h-32v-1280h32q92 0 158 66t66 158z\"}]}}),h.register({meetup:{width:1920,height:1792,paths:[{d:\"M1334 1234q-4-24-27.5-34t-49.5-10.5-48.5-12.5-25.5-38q-5-47 33-139.5t75-181 32-127.5q-14-101-117-103-45-1-75 16l-3 2-5 2.5t-4.5 2-5 2-5 0.5-6-1.5-6-3.5-6.5-5q-3-2-9-8.5t-9-9-8.5-7.5-9.5-7.5-9.5-5.5-11-4.5-11.5-2.5q-30-5-48 3t-45 31q-1 1-9 8.5t-12.5 11-15 10-16.5 5.5-17-3q-54-27-84-40-41-18-94 5t-76 65q-16 28-41 98.5t-43.5 132.5-40 134-21.5 73q-22 69 18.5 119t110.5 46q30-2 50.5-15t38.5-46q7-13 79-199.5t77-194.5q6-11 21.5-18t29.5 0q27 15 21 53-2 18-51 139.5t-50 132.5q-6 38 19.5 56.5t60.5 7 55-49.5q4-8 45.5-92t81.5-163.5 46-88.5q20-29 41-28 29 0 25 38-2 16-65.5 147.5t-70.5 159.5q-12 53 13 103t74 74q17 9 51 15.5t71.5 8 62.5-14 20-48.5zM383 1450q3 15-5 27.5t-23 15.5q-14 3-26.5-5t-15.5-23q-3-14 5-27t22-16 27 5 16 23zM953 1713q12 17 8.5 37.5t-20.5 32.5-37.5 8-32.5-21q-11-17-7.5-37.5t20.5-32.5 37.5-8 31.5 21zM177 901q-18 27-49.5 33t-57.5-13q-26-18-32-50t12-58q18-27 49.5-33t57.5 12q26 19 32 50.5t-12 58.5zM1467 1578q19 28 13 61.5t-34 52.5-60.5 13-51.5-34-13-61 33-53q28-19 60.5-13t52.5 34zM1579 974q69 113 42.5 244.5t-134.5 207.5q-90 63-199 60-20 80-84.5 127t-143.5 44.5-140-57.5q-12 9-13 10-103 71-225 48.5t-193-126.5q-50-73-53-164-83-14-142.5-70.5t-80.5-128-2-152 81-138.5q-36-60-38-128t24.5-125 79.5-98.5 121-50.5q32-85 99-148t146.5-91.5 168-17 159.5 66.5q72-21 140-17.5t128.5 36 104.5 80 67.5 115 17.5 140.5q52 16 87 57t45.5 89-5.5 99.5-58 87.5zM455 314q14 20 9.5 44.5t-24.5 38.5q-19 14-43.5 9.5t-37.5-24.5q-14-20-9.5-44.5t24.5-38.5q19-14 43.5-9.5t37.5 24.5zM614 33q4 16-5 30.5t-26 18.5-31-5.5-18-26.5q-3-17 6.5-31t25.5-18q17-4 31 5.5t17 26.5zM1800 981q4 20-6.5 37t-30.5 21q-19 4-36-6.5t-21-30.5 6.5-37 30.5-22q20-4 36.5 7.5t20.5 30.5zM1136 88q16 27 8.5 58.5t-35.5 47.5q-27 16-57.5 8.5t-46.5-34.5q-16-28-8.5-59t34.5-48 58-9 47 36zM1882 744q4 15-4 27.5t-23 16.5q-15 3-27.5-5.5t-15.5-22.5q-3-15 5-28t23-16q14-3 26.5 5t15.5 23zM1691 503q15 22 10.5 49t-26.5 43q-22 15-49 10t-42-27-10-49 27-43 48.5-11 41.5 28z\"}]}}),h.register({\"meh-o\":{width:1536,height:1792,paths:[{d:\"M1152 1088q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h640q26 0 45 19t19 45zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({mercury:{width:1280,height:1792,paths:[{d:\"M830 316q145 72 233.5 210.5t88.5 305.5q0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-217-24-364.5-187.5t-147.5-384.5q0-167 88.5-305.5t233.5-210.5q-165-96-228-273-6-16 3.5-29.5t26.5-13.5h69q21 0 29 20 44 106 140 171t214 65 214-65 140-171q8-20 37-20h61q17 0 26.5 13.5t3.5 29.5q-63 177-228 273zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({microchip:{width:1536,height:1792,paths:[{d:\"M192 1280v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 1024v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 768v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 512v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 256v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM1280 96v1472q0 40-28 68t-68 28h-832q-40 0-68-28t-28-68v-1472q0-40 28-68t68-28h832q40 0 68 28t28 68zM1536 1328v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 1072v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 816v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 560v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 304v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16z\"}]}}),h.register({\"microphone-slash\":{width:1408,height:1792,paths:[{d:\"M271 945l-101 101q-42-103-42-214v-128q0-26 19-45t45-19 45 19 19 45v128q0 53 15 113zM1385 343l-361 361v128q0 132-94 226t-226 94q-55 0-109-19l-96 96q97 51 205 51 185 0 316.5-131.5t131.5-316.5v-128q0-26 19-45t45-19 45 19 19 45v128q0 221-147.5 384.5t-364.5 187.5v132h256q26 0 45 19t19 45-19 45-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h256v-132q-125-13-235-81l-254 254q-10 10-23 10t-23-10l-82-82q-10-10-10-23t10-23l1234-1234q10-10 23-10t23 10l82 82q10 10 10 23t-10 23zM1005 211l-621 621v-512q0-132 94-226t226-94q102 0 184.5 59t116.5 152z\"}]}}),h.register({microphone:{width:1152,height:1792,paths:[{d:\"M1152 704v128q0 221-147.5 384.5t-364.5 187.5v132h256q26 0 45 19t19 45-19 45-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h256v-132q-217-24-364.5-187.5t-147.5-384.5v-128q0-26 19-45t45-19 45 19 19 45v128q0 185 131.5 316.5t316.5 131.5 316.5-131.5 131.5-316.5v-128q0-26 19-45t45-19 45 19 19 45zM896 320v512q0 132-94 226t-226 94-226-94-94-226v-512q0-132 94-226t226-94 226 94 94 226z\"}]}}),h.register({\"minus-circle\":{width:1536,height:1792,paths:[{d:\"M1216 960v-128q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v128q0 26 19 45t45 19h768q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"minus-square-o\":{width:1408,height:1792,paths:[{d:\"M1152 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zM1280 1248v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"minus-square\":{width:1536,height:1792,paths:[{d:\"M1280 960v-128q0-26-19-45t-45-19h-896q-26 0-45 19t-19 45v128q0 26 19 45t45 19h896q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({minus:{width:1408,height:1792,paths:[{d:\"M1408 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z\"}]}}),h.register({mixcloud:{width:2304,height:1792,paths:[{d:\"M1645 1098q0-59-34-106.5t-87-68.5q-7 45-23 92-7 24-27.5 38t-44.5 14q-12 0-24-3-31-10-45-38.5t-4-58.5q23-71 23-143 0-123-61-227.5t-166-165.5-228-61q-134 0-247 73t-167 194q108 28 188 106 22 23 22 55t-22 54-54 22-55-22q-75-75-180-75-106 0-181 74.5t-75 180.5 75 180.5 181 74.5h1046q79 0 134.5-55.5t55.5-133.5zM1798 1098q0 142-100.5 242t-242.5 100h-1046q-169 0-289-119.5t-120-288.5q0-153 100-267t249-136q62-184 221-298t354-114q235 0 408.5 158.5t196.5 389.5q116 25 192.5 118.5t76.5 214.5zM2048 1098q0 175-97 319-23 33-64 33-24 0-43-13-26-17-32-48.5t12-57.5q71-104 71-233t-71-233q-18-26-12-57t32-49 57.5-11.5 49.5 32.5q97 142 97 318zM2304 1098q0 244-134 443-23 34-64 34-23 0-42-13-26-18-32.5-49t11.5-57q108-164 108-358 0-195-108-357-18-26-11.5-57.5t32.5-48.5q26-18 57-12t49 33q134 198 134 442z\"}]}}),h.register({\"mobile-phone\":{width:768,height:1792,paths:[{d:\"M464 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zM672 1248v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zM480 400q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zM768 384v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z\"}]}}),h.register({mobile:{width:768,height:1792,paths:[{d:\"M464 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zM672 1248v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zM480 400q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zM768 384v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z\"}]}}),h.register({modx:{width:1792,height:1792,paths:[{d:\"M1427 709l-614-386 92-151h855zM405 974l-184-116v-858l1183 743zM1424 839l147 95v858l-532-335zM1387 818l-500 802h-855l356-571z\"}]}}),h.register({money:{width:1920,height:1792,paths:[{d:\"M768 1152h384v-96h-128v-448h-114l-148 137 77 80q42-37 55-57h2v288h-128v96zM1280 896q0 70-21 142t-59.5 134-101.5 101-138 39-138-39-101.5-101-59.5-134-21-142 21-142 59.5-134 101.5-101 138-39 138 39 101.5 101 59.5 134 21 142zM1792 1152v-512q-106 0-181-75t-75-181h-1152q0 106-75 181t-181 75v512q106 0 181 75t75 181h1152q0-106 75-181t181-75zM1920 320v1152q0 26-19 45t-45 19h-1792q-26 0-45-19t-19-45v-1152q0-26 19-45t45-19h1792q26 0 45 19t19 45z\"}]}}),h.register({\"moon-o\":{width:1536,height:1792,paths:[{d:\"M1262 1303q-54 9-110 9-182 0-337-90t-245-245-90-337q0-192 104-357-201 60-328.5 229t-127.5 384q0 130 51 248.5t136.5 204 204 136.5 248.5 51q144 0 273.5-61.5t220.5-171.5zM1465 1218q-94 203-283.5 324.5t-413.5 121.5q-156 0-298-61t-245-164-164-245-61-298q0-153 57.5-292.5t156-241.5 235.5-164.5 290-68.5q44-2 61 39 18 41-15 72-86 78-131.5 181.5t-45.5 218.5q0 148 73 273t198 198 273 73q118 0 228-51 41-18 72 13 14 14 17.5 34t-4.5 38z\"}]}}),h.register({\"mortar-board\":{width:2304,height:1792,paths:[{d:\"M1774 836l18 316q4 69-82 128t-235 93.5-323 34.5-323-34.5-235-93.5-82-128l18-316 574 181q22 7 48 7t48-7zM2304 512q0 23-22 31l-1120 352q-4 1-10 1t-10-1l-652-206q-43 34-71 111.5t-34 178.5q63 36 63 109 0 69-58 107l58 433q2 14-8 25-9 11-24 11h-192q-15 0-24-11-10-11-8-25l58-433q-58-38-58-107 0-73 65-111 11-207 98-330l-333-104q-22-8-22-31t22-31l1120-352q4-1 10-1t10 1l1120 352q22 8 22 31z\"}]}}),h.register({motorcycle:{width:2304,height:1792,paths:[{d:\"M2301 1036q12 103-22 198.5t-99 163.5-158.5 106-196.5 31q-161-11-279.5-125t-134.5-274q-12-111 27.5-210.5t118.5-170.5l-71-107q-96 80-151 194t-55 244q0 27-18.5 46.5t-45.5 19.5h-256-69q-23 164-149 274t-294 110q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q76 0 152 27l24-45q-123-110-304-110h-64q-26 0-45-19t-19-45 19-45 45-19h128q78 0 145 13.5t116.5 38.5 71.5 39.5 51 36.5h512 115l-85-128h-222q-30 0-49-22.5t-14-52.5q4-23 23-38t43-15h253q33 0 53 28l70 105 114-114q19-19 46-19h101q26 0 45 19t19 45v128q0 26-19 45t-45 19h-179l115 172q131-63 275-36 143 26 244 134.5t118 253.5zM448 1408q115 0 203-72.5t111-183.5h-314q-35 0-55-31-18-32-1-63l147-277q-47-13-91-13-132 0-226 94t-94 226 94 226 226 94zM1856 1408q132 0 226-94t94-226-94-226-226-94q-60 0-121 24l174 260q15 23 10 49t-27 40q-15 11-36 11-35 0-53-29l-174-260q-93 95-93 225 0 132 94 226t226 94z\"}]}}),h.register({\"mouse-pointer\":{width:1280,height:1792,paths:[{d:\"M1133 1043q31 30 14 69-17 40-59 40h-382l201 476q10 25 0 49t-34 35l-177 75q-25 10-49 0t-35-34l-191-452-312 312q-19 19-45 19-12 0-24-5-40-17-40-59v-1504q0-42 40-59 12-5 24-5 27 0 45 19z\"}]}}),h.register({music:{width:1536,height:1792,paths:[{d:\"M1536 224v1120q0 50-34 89t-86 60.5-103.5 32-96.5 10.5-96.5-10.5-103.5-32-86-60.5-34-89 34-89 86-60.5 103.5-32 96.5-10.5q105 0 192 39v-537l-768 237v709q0 50-34 89t-86 60.5-103.5 32-96.5 10.5-96.5-10.5-103.5-32-86-60.5-34-89 34-89 86-60.5 103.5-32 96.5-10.5q105 0 192 39v-967q0-31 19-56.5t49-35.5l832-256q12-4 28-4 40 0 68 28t28 68z\"}]}}),h.register({navicon:{width:1536,height:1792,paths:[{d:\"M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({neuter:{width:1280,height:1792,paths:[{d:\"M1152 576q0 221-147.5 384.5t-364.5 187.5v612q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-612q-217-24-364.5-187.5t-147.5-384.5q0-117 45.5-223.5t123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5zM576 1024q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"newspaper-o\":{width:2048,height:1792,paths:[{d:\"M1024 512h-384v384h384v-384zM1152 1152v128h-640v-128h640zM1152 384v640h-640v-640h640zM1792 1152v128h-512v-128h512zM1792 896v128h-512v-128h512zM1792 640v128h-512v-128h512zM1792 384v128h-512v-128h512zM256 1344v-960h-128v960q0 26 19 45t45 19 45-19 19-45zM1920 1344v-1088h-1536v1088q0 33-11 64h1483q26 0 45-19t19-45zM2048 128v1216q0 80-56 136t-136 56h-1664q-80 0-136-56t-56-136v-1088h256v-128h1792z\"}]}}),h.register({\"object-group\":{width:2048,height:1792,paths:[{d:\"M2048 384h-128v1024h128v384h-384v-128h-1280v128h-384v-384h128v-1024h-128v-384h384v128h1280v-128h384v384zM1792 128v128h128v-128h-128zM128 128v128h128v-128h-128zM256 1664v-128h-128v128h128zM1664 1536v-128h128v-1024h-128v-128h-1280v128h-128v1024h128v128h1280zM1920 1664v-128h-128v128h128zM1280 640h384v768h-896v-256h-384v-768h896v256zM512 1024h640v-512h-640v512zM1536 1280v-512h-256v384h-384v128h640z\"}]}}),h.register({\"object-ungroup\":{width:2304,height:1792,paths:[{\nd:\"M2304 768h-128v640h128v384h-384v-128h-896v128h-384v-384h128v-128h-384v128h-384v-384h128v-640h-128v-384h384v128h896v-128h384v384h-128v128h384v-128h384v384zM2048 512v128h128v-128h-128zM1408 128v128h128v-128h-128zM128 128v128h128v-128h-128zM256 1280v-128h-128v128h128zM1536 1152h-128v128h128v-128zM384 1152h896v-128h128v-640h-128v-128h-896v128h-128v640h128v128zM896 1664v-128h-128v128h128zM2176 1664v-128h-128v128h128zM2048 1408v-640h-128v-128h-384v384h128v384h-384v-128h-384v128h128v128h896v-128h128z\"}]}}),h.register({\"odnoklassniki-square\":{width:1536,height:1792,paths:[{d:\"M927 580q0 66-46.5 112.5t-112.5 46.5-112.5-46.5-46.5-112.5 46.5-112.5 112.5-46.5 112.5 46.5 46.5 112.5zM1141 943q-10-20-28-32t-47.5-9.5-60.5 27.5q-10 8-29 20t-81 32-127 20-124-18-86-36l-27-18q-31-25-60.5-27.5t-47.5 9.5-28 32q-22 45-2 74.5t87 73.5q83 53 226 67l-51 52q-142 142-191 190-22 22-22 52.5t22 52.5l9 9q22 22 52.5 22t52.5-22l191-191q114 115 191 191 22 22 52.5 22t52.5-22l9-9q22-22 22-52.5t-22-52.5l-191-190-52-52q141-14 225-67 67-44 87-73.5t-2-74.5zM1092 580q0-134-95-229t-229-95-229 95-95 229 95 229 229 95 229-95 95-229zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({odnoklassniki:{width:1280,height:1792,paths:[{d:\"M640 907q-188 0-321-133t-133-320q0-188 133-321t321-133 321 133 133 321q0 187-133 320t-321 133zM640 230q-92 0-157.5 65.5t-65.5 158.5q0 92 65.5 157.5t157.5 65.5 157.5-65.5 65.5-157.5q0-93-65.5-158.5t-157.5-65.5zM1163 962q13 27 15 49.5t-4.5 40.5-26.5 38.5-42.5 37-61.5 41.5q-115 73-315 94l73 72 267 267q30 31 30 74t-30 73l-12 13q-31 30-74 30t-74-30q-67-68-267-268l-267 268q-31 30-74 30t-73-30l-12-13q-31-30-31-73t31-74l267-267 72-72q-203-21-317-94-39-25-61.5-41.5t-42.5-37-26.5-38.5-4.5-40.5 15-49.5q10-20 28-35t42-22 56 2 65 35q5 4 15 11t43 24.5 69 30.5 92 24 113 11q91 0 174-25.5t120-50.5l38-25q33-26 65-35t56-2 42 22 28 35z\"}]}}),h.register({opencart:{width:2304,height:1792,paths:[{d:\"M1524 1561q0 68-48 116t-116 48-116.5-48-48.5-116 48.5-116.5 116.5-48.5 116 48.5 48 116.5zM775 1561q0 68-48.5 116t-116.5 48-116-48-48-116 48-116.5 116-48.5 116.5 48.5 48.5 116.5zM0 67q57 60 110.5 104.5t121 82 136 63 166 45.5 200 31.5 250 18.5 304 9.5 372.5 2.5q139 0 244.5 5t181 16.5 124 27.5 71 39.5 24 51.5-19.5 64-56.5 76.5-89.5 91-116 104.5-139 119q-185 157-286 247 29-51 76.5-109t94-105.5 94.5-98.5 83-91.5 54-80.5 13-70-45.5-55.5-116.5-41-204-23.5-304-5q-168 2-314-6t-256-23-204.5-41-159.5-51.5-122.5-62.5-91.5-66.5-68-71.5-50.5-69.5-40-68-36.5-59.5z\"}]}}),h.register({openid:{width:1792,height:1792,paths:[{d:\"M1086 0v1536l-272 128q-228-20-414-102t-293-208.5-107-272.5q0-140 100.5-263.5t275-205.5 391.5-108v172q-217 38-356.5 150t-139.5 255q0 152 154.5 267t388.5 145v-1360zM1755 582l37 390-525-114 147-83q-119-70-280-99v-172q277 33 481 157z\"}]}}),h.register({opera:{width:1792,height:1792,paths:[{d:\"M1493 228q-165-110-359-110-155 0-293 73t-240 200q-75 93-119.5 218t-48.5 266v42q4 141 48.5 266t119.5 218q102 127 240 200t293 73q194 0 359-110-121 108-274.5 168t-322.5 60q-29 0-43-1-175-8-333-82t-272-193-181-281-67-339q0-182 71-348t191-286 286-191 348-71h3q168 1 320.5 60.5t273.5 167.5zM1792 896q0 192-77 362.5t-213 296.5q-104 63-222 63-137 0-255-84 154-56 253.5-233t99.5-405q0-227-99-404t-253-234q119-83 254-83 119 0 226 65 135 125 210.5 295t75.5 361z\"}]}}),h.register({\"optin-monster\":{width:2296,height:1792,paths:[{d:\"M478 1675q-8 16-27 34.5t-37 25.5q-25 9-51.5-3.5t-28.5-31.5q-1-22 40-55t68-38q23-4 34 21.5t2 46.5zM1819 1675q7 16 26 34.5t38 25.5q25 9 51.5-3.5t27.5-31.5q2-22-39.5-55t-68.5-38q-22-4-33 21.5t-2 46.5zM1867 1566q13 27 56.5 59.5t77.5 41.5q45 13 82-4.5t37-50.5q0-46-67.5-100.5t-115.5-59.5q-40-5-63.5 37.5t-6.5 76.5zM428 1566q-13 27-56 59.5t-77 41.5q-45 13-82-4.5t-37-50.5q0-46 67.5-100.5t115.5-59.5q40-5 63 37.5t6 76.5zM1158 442h1q-41 0-76 15 27 8 44 30.5t17 49.5q0 35-27 60t-65 25q-52 0-80-43-5 23-5 42 0 74 56 126.5t135 52.5q80 0 136-52.5t56-126.5-56-126.5-136-52.5zM1462 224q-99-109-220.5-131.5t-245.5 44.5q27-60 82.5-96.5t118-39.5 121.5 17 99.5 74.5 44.5 131.5zM2212 1463q8 11-11 42 7 23 7 40 1 56-44.5 112.5t-109.5 91.5-118 37q-48 2-92-21.5t-66-65.5q-687 25-1259 0-23 41-66.5 65t-92.5 22q-86-3-179.5-80.5t-92.5-160.5q2-22 7-40-19-31-11-42 6-10 31-1 14-22 41-51-7-29 2-38 11-10 39 4 29-20 59-34 0-29 13-37 23-12 51 16 35-5 61 2 18 4 38 19v-73q-11 0-18-2-53-10-97-44.5t-55-87.5q-9-38 0-81 15-62 93-95 2-17 19-35.5t36-23.5 33 7.5 19 30.5h13q46 5 60 23 3 3 5 7 10-1 30.5-3.5t30.5-3.5q-15-11-30-17-23-40-91-43 0-6 1-10-62-2-118.5-18.5t-84.5-47.5q-32-36-42.5-92t-2.5-112q16-126 90-179 23-16 52-4.5t32 40.5q0 1 1.5 14t2.5 21 3 20 5.5 19 8.5 10q27 14 76 12 48-46 98-74-40-4-162 14l47-46q61-58 163-111 145-73 282-86-20-8-41-15.5t-47-14-42.5-10.5-47.5-11-43-10q595-126 904 139 98 84 158 222 85 10 121-9h1q5-3 8.5-10t5.5-19 3-19.5 3-21.5l1-14q3-28 32-40t52 5q73 52 91 178 7 57-3.5 113t-42.5 91q-28 32-83.5 48.5t-115.5 18.5v10q-71 2-95 43-14 5-31 17 11 1 32 3.5t30 3.5q1-5 5-8 16-18 60-23h13q5-18 19-30t33-8 36 23 19 36q79 32 93 95 9 40 1 81-12 53-56 88t-97 44q-10 2-17 2 0 49-1 73 20-15 38-19 26-7 61-2 28-28 51-16 14 9 14 37 33 16 59 34 27-13 38-4 10 10 2 38 28 30 41 51 23-8 31 1zM1937 511q0 29-9 54 82 32 112 132 4-37-9.5-98.5t-41.5-90.5q-20-19-36-17t-16 20zM1859 611q35 42 47.5 108.5t-0.5 124.5q67-13 97-45 13-14 18-28-3-64-31-114.5t-79-66.5q-15 15-52 21zM1822 615q-30 0-44-1 42 115 53 239 21 0 43-3 16-68 1-135t-53-100zM258 697q30-100 112-132-9-25-9-54 0-18-16.5-20t-35.5 17q-28 29-41.5 90.5t-9.5 98.5zM294 799q29 31 97 45-13-58-0.5-124.5t47.5-108.5v0q-37-6-52-21-51 16-78.5 66t-31.5 115q9 17 18 28zM471 853q14-124 73-235-19 4-55 18l-45 19v-1q-46 89-20 196 25 3 47 3zM1434 892q8 38 16.5 108.5t11.5 89.5q3 18 9.5 21.5t23.5-4.5q40-20 62-85.5t23-125.5q-24-2-146-4zM1152 251q-116 0-199 82.5t-83 198.5q0 117 83 199.5t199 82.5 199-82.5 83-199.5q0-116-83-198.5t-199-82.5zM1380 890q-105-2-211 0v-1q-1 27 2.5 86t13.5 66q29 14 93.5 14.5t95.5-10.5q9-3 11-39t-0.5-69.5-4.5-46.5zM1112 1089q8-4 9.5-48t-0.5-88-4-63v-1q-212 3-214 3-4 20-7 62t0 83 14 46q34 15 101 16t101-10zM718 900q-16 59 4.5 118.5t77.5 84.5q15 8 24 5t12-21q3-16 8-90t10-103q-69 2-136 6zM591 1026q3 23-34 36 132 141 271.5 240t305.5 154q172-49 310.5-146t293.5-250q-33-13-30-34 0-2 0.5-3.5t1.5-3 1-2.5v-1 1q-17-2-50-5.5t-48-4.5q-26 90-82 132-51 38-82-1-5-6-9-14-7-13-17-62-2 5-5 9t-7.5 7-8 5.5-9.5 4l-10 2.5t-12 2l-12 1.5t-13.5 1-13.5 0.5q-106 9-163-11-4 17-10 26.5t-21 15-23 7-36 3.5q-6 1-9 1-179 17-203-40-2 63-56 54-47-8-91-54-12-13-20-26-17-29-26-65-58 6-87 10 1 2 4 10zM507 1654q3-14 3-30-17-71-51-130t-73-70q-41-12-101.5 14.5t-104.5 80-39 107.5q35 53 100 93t119 42q51 2 94-28t53-79zM510 1483q23 63 27 119 195-113 392-174-98-52-180.5-120t-179.5-165q-6 4-29 13 0 1-1 4t-1 5q31 18 22 37-12 23-56 34-10 13-29 24h-1q-2 83 1 150 19 34 35 73zM579 1649q532 21 1145 0-254-147-428-196-76 35-156 57-8 3-16 0-65-21-129-49-208 60-416 188h-1v1q1 0 1-1zM1763 1603q4-54 28-120 14-38 33-71l-1 1q3-77 3-153-15-8-30-25-42-9-56-33-9-20 22-38-2-4-2-9-16-4-28-12-204 190-383 284 198 59 414 176zM2155 1626q5-54-39-107.5t-104-80-102-14.5q-38 11-72.5 70.5t-51.5 129.5q0 16 3 30 10 49 53 79t94 28q54-2 119-42t100-93z\"}]}}),h.register({outdent:{width:1792,height:1792,paths:[{d:\"M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"}]}}),h.register({pagelines:{width:1408,height:1792,paths:[{d:\"M1402 1103q-32 80-76 138t-91 88.5-99 46.5-101.5 14.5-96.5-8.5-86.5-22-69.5-27.5-46-22.5l-17-10q-113 228-289.5 359.5t-384.5 132.5q-19 0-32-13t-13-32 13-31.5 32-12.5q173-1 322.5-107.5t251.5-294.5q-36 14-72 23t-83 13-91-2.5-93-28.5-92-59-84.5-100-74.5-146q114-47 214-57t167.5 7.5 124.5 56.5 88.5 77 56.5 82q53-131 79-291-7 1-18 2.5t-46.5 2.5-69.5-0.5-81.5-10-88.5-23-84-42.5-75-65-54.5-94.5-28.5-127.5q70-28 133.5-36.5t112.5 1 92 30 73.5 50 56 61 42 63 27.5 56 16 39.5l4 16q12-122 12-195-8-6-21.5-16t-49-44.5-63.5-71.5-54-93-33-112.5 12-127 70-138.5q73 25 127.5 61.5t84.5 76.5 48 85 20.5 89-0.5 85.5-13 76.5-19 62-17 42l-7 15q1 4 1 50t-1 72q3-7 10-18.5t30.5-43 50.5-58 71-55.5 91.5-44.5 112-14.5 132.5 24q-2 78-21.5 141.5t-50 104.5-69.5 71.5-81.5 45.5-84.5 24-80 9.5-67.5-1-46.5-4.5l-17-3q-23 147-73 283 6-7 18-18.5t49.5-41 77.5-52.5 99.5-42 117.5-20 129 23.5 137 77.5z\"}]}}),h.register({\"paint-brush\":{width:1792,height:1792,paths:[{d:\"M1615 0q70 0 122.5 46.5t52.5 116.5q0 63-45 151-332 629-465 752-97 91-218 91-126 0-216.5-92.5t-90.5-219.5q0-128 92-212l638-579q59-54 130-54zM706 1034q39 76 106.5 130t150.5 76l1 71q4 213-129.5 347t-348.5 134q-123 0-218-46.5t-152.5-127.5-86.5-183-29-220q7 5 41 30t62 44.5 59 36.5 46 17q41 0 55-37 25-66 57.5-112.5t69.5-76 88-47.5 103-25.5 125-10.5z\"}]}}),h.register({\"paper-plane-o\":{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-527-215-298 327q-18 21-47 21-14 0-23-4-19-7-30-23.5t-11-36.5v-452l-472-193q-37-14-40-55-3-39 32-59l1664-960q35-21 68 2zM1422 1510l221-1323-1434 827 336 137 863-639-478 797z\"}]}}),h.register({\"paper-plane\":{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\"}]}}),h.register({paperclip:{width:1408,height:1792,paths:[{d:\"M1404 1385q0 117-79 196t-196 79q-135 0-235-100l-777-776q-113-115-113-271 0-159 110-270t269-111q158 0 273 113l605 606q10 10 10 22 0 16-30.5 46.5t-46.5 30.5q-13 0-23-10l-606-607q-79-77-181-77-106 0-179 75t-73 181q0 105 76 181l776 777q63 63 145 63 64 0 106-42t42-106q0-82-63-145l-581-581q-26-24-60-24-29 0-48 19t-19 48q0 32 25 59l410 410q10 10 10 22 0 16-31 47t-47 31q-12 0-22-10l-410-410q-63-61-63-149 0-82 57-139t139-57q88 0 149 63l581 581q100 98 100 235z\"}]}}),h.register({paragraph:{width:1280,height:1792,paths:[{d:\"M1278 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z\"}]}}),h.register({paste:{width:1792,height:1792,paths:[{d:\"M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zM1024 224v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zM1280 896h299l-299-299v299zM1792 1024v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z\"}]}}),h.register({\"pause-circle-o\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM768 1440q148 0 273-73t198-198 73-273-73-273-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73zM864 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23v576q0 14-9 23t-23 9h-192zM480 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23v576q0 14-9 23t-23 9h-192z\"}]}}),h.register({\"pause-circle\":{width:1536,height:1792,paths:[{d:\"M704 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1152 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({pause:{width:1536,height:1792,paths:[{d:\"M1536 192v1408q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h512q26 0 45 19t19 45zM640 192v1408q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h512q26 0 45 19t19 45z\"}]}}),h.register({paw:{width:1664,height:1792,paths:[{d:\"M780 472q0 60-19 113.5t-63 92.5-105 39q-76 0-138-57.5t-92-135.5-30-151q0-60 19-113.5t63-92.5 105-39q77 0 138.5 57.5t91.5 135 30 151.5zM438 955q0 80-42 139t-119 59q-76 0-141.5-55.5t-100.5-133.5-35-152q0-80 42-139.5t119-59.5q76 0 141.5 55.5t100.5 134 35 152.5zM832 928q118 0 255 97.5t229 237 92 254.5q0 46-17 76.5t-48.5 45-64.5 20-76 5.5q-68 0-187.5-45t-182.5-45q-66 0-192.5 44.5t-200.5 44.5q-183 0-183-146 0-86 56-191.5t139.5-192.5 187.5-146 193-59zM1071 717q-61 0-105-39t-63-92.5-19-113.5q0-74 30-151.5t91.5-135 138.5-57.5q61 0 105 39t63 92.5 19 113.5q0 73-30 151t-92 135.5-138 57.5zM1503 613q77 0 119 59.5t42 139.5q0 74-35 152t-100.5 133.5-141.5 55.5q-77 0-119-59t-42-139q0-74 35-152.5t100.5-134 141.5-55.5z\"}]}}),h.register({paypal:{width:1536,height:1792,paths:[{d:\"M1519 646q18 84-4 204-87 444-565 444h-44q-25 0-44 16.5t-24 42.5l-4 19-55 346-2 15q-5 26-24.5 42.5t-44.5 16.5h-251q-21 0-33-15t-9-36q9-56 26.5-168t26.5-168 27-167.5 27-167.5q5-37 43-37h131q133 2 236-21 175-39 287-144 102-95 155-246 24-70 35-133 1-6 2.5-7.5t3.5-1 6 3.5q79 59 98 162zM1347 364q0 107-46 236-80 233-302 315-113 40-252 42 0 1-90 1l-90-1q-100 0-118 96-2 8-85 530-1 10-12 10h-295q-22 0-36.5-16.5t-11.5-38.5l232-1471q5-29 27.5-48t51.5-19h598q34 0 97.5 13t111.5 32q107 41 163.5 123t56.5 196z\"}]}}),h.register({\"pencil-square-o\":{width:1792,height:1792,paths:[{d:\"M888 1184l116-116-152-152-116 116v56h96v96h56zM1328 464q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zM1408 1058v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zM1312 320l288 288-672 672h-288v-288zM1756 452l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z\"}]}}),h.register({\"pencil-square\":{width:1536,height:1792,paths:[{d:\"M404 1108l152 152-52 52h-56v-96h-96v-56zM818 718q14 13-3 30l-291 291q-17 17-30 3-14-13 3-30l291-291q17-17 30-3zM544 1408l544-544-288-288-544 544v288h288zM1152 800l92-92q28-28 28-68t-28-68l-152-152q-28-28-68-28t-68 28l-92 92zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({pencil:{width:1536,height:1792,paths:[{d:\"M363 1536l91-91-235-235-91 91v107h128v128h107zM886 608q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zM832 416l416 416-832 832h-416v-416zM1515 512q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z\"}]}}),h.register({percent:{width:1536,height:1792,paths:[{d:\"M1280 1280q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM512 512q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM1536 1280q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1440 192q0 20-13 38l-1056 1408q-19 26-51 26h-160q-26 0-45-19t-19-45q0-20 13-38l1056-1408q19-26 51-26h160q26 0 45 19t19 45zM768 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({\"phone-square\":{width:1536,height:1792,paths:[{d:\"M1280 1193q0-11-2-16t-18-16.5-40.5-25-47.5-26.5-45.5-25-28.5-15q-5-3-19-13t-25-15-21-5q-15 0-36.5 20.5t-39.5 45-38.5 45-33.5 20.5q-7 0-16.5-3.5t-15.5-6.5-17-9.5-14-8.5q-99-55-170-126.5t-127-170.5q-2-3-8.5-14t-9.5-17-6.5-15.5-3.5-16.5q0-13 20.5-33.5t45-38.5 45-39.5 20.5-36.5q0-10-5-21t-15-25-13-19q-3-6-15-28.5t-25-45.5-26.5-47.5-25-40.5-16.5-18-16-2q-48 0-101 22-46 21-80 94.5t-34 130.5q0 16 2.5 34t5 30.5 9 33 10 29.5 12.5 33 11 30q60 164 216.5 320.5t320.5 216.5q6 2 30 11t33 12.5 29.5 10 33 9 30.5 5 34 2.5q57 0 130.5-34t94.5-80q22-53 22-101zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({phone:{width:1408,height:1792,paths:[{d:\"M1408 1240q0 27-10 70.5t-21 68.5q-21 50-122 106-94 51-186 51-27 0-53-3.5t-57.5-12.5-47-14.5-55.5-20.5-49-18q-98-35-175-83-127-79-264-216t-216-264q-48-77-83-175-3-9-18-49t-20.5-55.5-14.5-47-12.5-57.5-3.5-53q0-92 51-186 56-101 106-122 25-11 68.5-21t70.5-10q14 0 21 3 18 6 53 76 11 19 30 54t35 63.5 31 53.5q3 4 17.5 25t21.5 35.5 7 28.5q0 20-28.5 50t-62 55-62 53-28.5 46q0 9 5 22.5t8.5 20.5 14 24 11.5 19q76 137 174 235t235 174q2 1 19 11.5t24 14 20.5 8.5 22.5 5q18 0 46-28.5t53-62 55-62 50-28.5q14 0 28.5 7t35.5 21.5 25 17.5q25 15 53.5 31t63.5 35 54 30q70 35 76 53 3 7 3 21z\"}]}}),h.register({photo:{width:1920,height:1792,paths:[{d:\"M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({\"picture-o\":{width:1920,height:1792,paths:[{d:\"M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({\"pie-chart\":{width:1792,height:1792,paths:[{d:\"M768 890l546 546q-106 108-247.5 168t-298.5 60q-209 0-385.5-103t-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103v762zM955 896h773q0 157-60 298.5t-168 247.5zM1664 768h-768v-768q209 0 385.5 103t279.5 279.5 103 385.5z\"}]}}),h.register({\"pied-piper-alt\":{width:2038,height:1792,paths:[{d:\"M1222 929q75-3 143.5 20.5t118 58.5 101 94.5 84 108 75.5 120.5q33 56 78.5 109t75.5 80.5 99 88.5q-48 30-108.5 57.5t-138.5 59-114 47.5q-44-37-74-115t-43.5-164.5-33-180.5-42.5-168.5-72.5-123-122.5-48.5l-10 2-6 4q4 5 13 14 6 5 28 23.5t25.5 22 19 18 18 20.5 11.5 21 10.5 27.5 4.5 31 4 40.5l1 33q1 26-2.5 57.5t-7.5 52-12.5 58.5-11.5 53q-35-1-101 9.5t-98 10.5q-39 0-72-10-2-16-2-47 0-74 3-96 2-13 31.5-41.5t57-59 26.5-51.5q-24-2-43 24-36 53-111.5 99.5t-136.5 46.5q-25 0-75.5-63t-106.5-139.5-84-96.5q-6-4-27-30-482 112-513 112-16 0-28-11t-12-27q0-15 8.5-26.5t22.5-14.5l486-106q-8-14-8-25t5.5-17.5 16-11.5 20-7 23-4.5 18.5-4.5q4-1 15.5-7.5t17.5-6.5q15 0 28 16t20 33q163-37 172-37 17 0 29.5 11t12.5 28q0 15-8.5 26t-23.5 14l-182 40-1 16q-1 26 81.5 117.5t104.5 91.5q47 0 119-80t72-129q0-36-23.5-53t-51-18.5-51-11.5-23.5-34q0-16 10-34l-68-19q43-44 43-117 0-26-5-58 82-16 144-16 44 0 71.5 1.5t48.5 8.5 31 13.5 20.5 24.5 15.5 33.5 17 47.5 24 60l50-25q-3 40-23 60t-42.5 21-40 6.5-16.5 20.5zM1282 694q-5-5-13.5-15.5t-12-14.5-10.5-11.5-10-10.5l-8-8t-8.5-7.5-8-5-8.5-4.5q-7-3-14.5-5t-20.5-2.5-22-0.5h-32.5-37.5q-126 0-217 43 16-30 36-46.5t54-29.5 65.5-36 46-36.5 50-55 43.5-50.5q12 9 28 31.5t32 36.5 38 13l12-1v76l22 1q247-95 371-190 28-21 50-39t42.5-37.5 33-31 29.5-34 24-31 24.5-37 23-38 27-47.5 29.5-53l7-9q-2 53-43 139-79 165-205 264t-306 142q-14 3-42 7.5t-50 9.5-39 14q3 19 24.5 46t21.5 34q0 11-26 30zM1061 1615q39-26 131.5-47.5t146.5-21.5q9 0 22.5 15.5t28 42.5 26 50 24 51 14.5 33q-121 45-244 45-61 0-125-11zM822 968l48-12 109 177-73 48zM1323 1485q3 15 3 16 0 7-17.5 14.5t-46 13-54 9.5-53.5 7.5-32 4.5l-7-43q21-2 60.5-8.5t72-10 60.5-3.5h14zM866 857l-96 20-6-17q10-1 32.5-7t34.5-6q19 0 35 10zM1061 1491h31l10 83-41 12v-95zM1950 1v-1 1zM1950 1l-1 5-2 2 1-3zM1950 1l1-1z\"}]}}),h.register({\"pied-piper-pp\":{width:1536,height:1792,paths:[{d:\"M1046 1020q0 64-38 109t-91 45q-43 0-70-15v-277q28-17 70-17 53 0 91 45.5t38 109.5zM703 592q0 64-38 109.5t-91 45.5q-43 0-70-15v-277q28-17 70-17 53 0 91 45t38 109zM1265 1023q0-134-88-229t-213-95q-20 0-39 3-23 78-78 136-87 95-211 101v636l211-41v-206q51 19 117 19 125 0 213-95t88-229zM922 596q0-134-88.5-229t-213.5-95q-74 0-141 36h-186v840l211-41v-206q55 19 116 19 125 0 213.5-95t88.5-229zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"pied-piper\":{width:2304,height:1792,paths:[{d:\"M2304 0q-69 46-125 92t-89 81-59.5 71.5-37.5 57.5-22 44.5-14 29.5q-10 18-35.5 136.5t-48.5 164.5q-15 29-50 60.5t-67.5 50.5-72.5 41-48 28q-47 31-151 231-341-14-630 158-92 53-303 179 47-16 86-31t55-22l15-7q71-27 163-64.5t133.5-53.5 108-34.5 142.5-31.5q186-31 465 7 1 0 10 3 11 6 14 17t-3 22l-194 345q-15 29-47 22-128-24-354-24-146 0-402 44.5t-392 46.5q-82 1-149-13t-107-37-61-40-33-34l-1-1v-2q0-6 6-6 138 0 371-55 192-366 374.5-524t383.5-158q5 0 14.5 0.5t38 5 55 12 61.5 24.5 63 39.5 54 59 40 82.5l102-177q2-4 21-42.5t44.5-86.5 61-109.5 84-133.5 100.5-137q66-82 128-141.5t121.5-96.5 92.5-53.5 88-39.5z\"}]}}),h.register({\"pinterest-p\":{width:1280,height:1792,paths:[{d:\"M0 597q0-108 37.5-203.5t103.5-166.5 152-123 185-78 202-26q158 0 294 66.5t221 193.5 85 287q0 96-19 188t-60 177-100 149.5-145 103-189 38.5q-68 0-135-32t-96-88q-10 39-28 112.5t-23.5 95-20.5 71-26 71-32 62.5-46 77.5-62 86.5l-14 5-9-10q-15-157-15-188 0-92 21.5-206.5t66.5-287.5 52-203q-32-65-32-169 0-83 52-156t132-73q61 0 95 40.5t34 102.5q0 66-44 191t-44 187q0 63 45 104.5t109 41.5q55 0 102-25t78.5-68 56-95 38-110.5 20-111 6.5-99.5q0-173-109.5-269.5t-285.5-96.5q-200 0-334 129.5t-134 328.5q0 44 12.5 85t27 65 27 45.5 12.5 30.5q0 28-15 73t-37 45q-2 0-17-3-51-15-90.5-56t-61-94.5-32.5-108-11-106.5z\"}]}}),h.register({\"pinterest-square\":{width:1536,height:1792,paths:[{d:\"M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-725q85-122 108-210 9-34 53-209 21 39 73.5 67t112.5 28q181 0 295.5-147.5t114.5-373.5q0-84-35-162.5t-96.5-139-152.5-97-197-36.5q-104 0-194.5 28.5t-153 76.5-107.5 109.5-66.5 128-21.5 132.5q0 102 39.5 180t116.5 110q13 5 23.5 0t14.5-19q10-44 15-61 6-23-11-42-50-62-50-150 0-150 103.5-256.5t270.5-106.5q149 0 232.5 81t83.5 210q0 168-67.5 286t-173.5 118q-60 0-97-43.5t-23-103.5q8-34 26.5-92.5t29.5-102 11-74.5q0-49-26.5-81.5t-75.5-32.5q-61 0-103.5 56.5t-42.5 139.5q0 72 24 121l-98 414q-24 100-7 254h-183q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z\"}]}}),h.register({pinterest:{width:1536,height:1792,paths:[{d:\"M1536 896q0 209-103 385.5t-279.5 279.5-385.5 103q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214t-172.5-163-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5-21.5 134q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5t273.5-108.5q151 0 235.5 82t84.5 213q0 170-68.5 289t-175.5 119q-61 0-98-43.5t-23-104.5q8-35 26.5-93.5t30-103 11.5-75.5q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281t-127-423q0-209 103-385.5t279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({plane:{width:1408,height:1792,paths:[{d:\"M1376 160q44 52 12 148t-108 172l-161 161 160 696q5 19-12 33l-128 96q-7 6-19 6-4 0-7-1-15-3-21-16l-279-508-259 259 53 194q5 17-8 31l-96 96q-9 9-23 9h-2q-15-2-24-13l-189-252-252-189q-11-7-13-23-1-13 9-25l96-97q9-9 23-9 6 0 8 1l194 53 259-259-508-279q-14-8-17-24-2-16 9-27l128-128q14-13 30-8l665 159 160-160q76-76 172-108t148 12z\"}]}}),h.register({\"play-circle-o\":{width:1536,height:1792,paths:[{d:\"M1184 896q0 37-32 55l-544 320q-15 9-32 9-16 0-32-8-32-19-32-56v-640q0-37 32-56 33-18 64 1l544 320q32 18 32 55zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"play-circle\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1152 951q32-18 32-55t-32-55l-544-320q-31-19-64-1-32 19-32 56v640q0 37 32 56 16 8 32 8 17 0 32-9z\"}]}}),h.register({play:{width:1408,height:1792,paths:[{d:\"M1384 927l-1328 738q-23 13-39.5 3t-16.5-36v-1472q0-26 16.5-36t39.5 3l1328 738q23 13 23 31t-23 31z\"}]}}),h.register({plug:{width:1792,height:1792,paths:[{d:\"M1755 453q37 38 37 90.5t-37 90.5l-401 400 150 150-160 160q-163 163-389.5 186.5t-411.5-100.5l-362 362h-181v-181l362-362q-124-185-100.5-411.5t186.5-389.5l160-160 150 150 400-401q38-37 91-37t90 37 37 90.5-37 90.5l-400 401 234 234 401-400q38-37 91-37t90 37z\"}]}}),h.register({\"plus-circle\":{width:1536,height:1792,paths:[{d:\"M1216 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"plus-square-o\":{width:1408,height:1792,paths:[{d:\"M1152 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zM1280 1248v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"plus-square\":{width:1536,height:1792,paths:[{d:\"M1280 960v-128q0-26-19-45t-45-19h-320v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-320q-26 0-45 19t-19 45v128q0 26 19 45t45 19h320v320q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h320q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({plus:{width:1408,height:1792,paths:[{d:\"M1408 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z\"}]}}),h.register({podcast:{width:1536,height:1792,paths:[{d:\"M994 1192q0 86-17 197-31 215-55 313-22 90-152 90t-152-90q-24-98-55-313-17-110-17-197 0-168 224-168t224 168zM1536 768q0 240-134 434t-350 280q-8 3-15-3t-6-15q7-48 10-66 4-32 6-47 1-9 9-12 159-81 255.5-234t96.5-337q0-180-91-330.5t-247-234.5-337-74q-124 7-237 61t-193.5 140.5-128 202-46.5 240.5q1 184 99 336.5t257 231.5q7 3 9 12 3 21 6 45 1 9 5 32.5t6 35.5q1 9-6.5 15t-15.5 2q-148-58-261-169.5t-173.5-264-52.5-319.5q7-143 66-273.5t154.5-227 225-157.5 272.5-70q164-10 315.5 46.5t261 160.5 175 250.5 65.5 308.5zM994 736q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5zM1282 768q0 122-53.5 228.5t-146.5 177.5q-8 6-16 2t-10-14q-6-52-29-92-7-10 3-20 58-54 91-127t33-155q0-111-58.5-204t-157.5-141.5-212-36.5q-133 15-229 113t-109 231q-10 92 23.5 176t98.5 144q10 10 3 20-24 41-29 93-2 9-10 13t-16-2q-95-74-148.5-183t-51.5-234q3-131 69-244t177-181.5 241-74.5q144-7 268 60t196.5 187.5 72.5 263.5z\"}]}}),h.register({\"power-off\":{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61-298-61-245-164-164-245-61-298q0-182 80.5-343t226.5-270q43-32 95.5-25t83.5 50q32 42 24.5 94.5t-49.5 84.5q-98 74-151.5 181t-53.5 228q0 104 40.5 198.5t109.5 163.5 163.5 109.5 198.5 40.5 198.5-40.5 163.5-109.5 109.5-163.5 40.5-198.5q0-121-53.5-228t-151.5-181q-42-32-49.5-84.5t24.5-94.5q31-43 84-50t95 25q146 109 226.5 270t80.5 343zM896 128v640q0 52-38 90t-90 38-90-38-38-90v-640q0-52 38-90t90-38 90 38 38 90z\"}]}}),h.register({print:{width:1664,height:1792,paths:[{d:\"M384 1536h896v-256h-896v256zM384 896h896v-384h-160q-40 0-68-28t-28-68v-160h-640v640zM1536 960q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 960v416q0 13-9.5 22.5t-22.5 9.5h-224v160q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-224q-13 0-22.5-9.5t-9.5-22.5v-416q0-79 56.5-135.5t135.5-56.5h64v-544q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v256h64q79 0 135.5 56.5t56.5 135.5z\"}]}}),h.register({\"product-hunt\":{width:1792,height:1792,paths:[{d:\"M1150 762q0 56-39.5 95t-95.5 39h-253v-269h253q56 0 95.5 39.5t39.5 95.5zM1329 762q0-130-91.5-222t-222.5-92h-433v896h180v-269h253q130 0 222-91.5t92-221.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({\"puzzle-piece\":{width:1664,height:1792,paths:[{d:\"M1664 1098q0 81-44.5 135t-123.5 54q-41 0-77.5-17.5t-59-38-56.5-38-71-17.5q-110 0-110 124 0 39 16 115t15 115v5q-22 0-33 1-34 3-97.5 11.5t-115.5 13.5-98 5q-61 0-103-26.5t-42-83.5q0-37 17.5-71t38-56.5 38-59 17.5-77.5q0-79-54-123.5t-135-44.5q-84 0-143 45.5t-59 127.5q0 43 15 83t33.5 64.5 33.5 53 15 50.5q0 45-46 89-37 35-117 35-95 0-245-24-9-2-27.5-4t-27.5-4l-13-2q-1 0-3-1-2 0-2-1v-1024q2 1 17.5 3.5t34 5 21.5 3.5q150 24 245 24 80 0 117-35 46-44 46-89 0-22-15-50.5t-33.5-53-33.5-64.5-15-83q0-82 59-127.5t144-45.5q80 0 134 44.5t54 123.5q0 41-17.5 77.5t-38 59-38 56.5-17.5 71q0 57 42 83.5t103 26.5q64 0 180-15t163-17v2q-1 2-3.5 17.5t-5 34-3.5 21.5q-24 150-24 245 0 80 35 117 44 46 89 46 22 0 50.5-15t53-33.5 64.5-33.5 83-15q82 0 127.5 59t45.5 143z\"}]}}),h.register({qq:{width:1792,height:1792,paths:[{d:\"M270 806q-8-19-8-52 0-20 11-49t24-45q-1-22 7.5-53t22.5-43q0-139 92.5-288.5t217.5-209.5q139-66 324-66 133 0 266 55 49 21 90 48t71 56 55 68 42 74 32.5 84.5 25.5 89.5 22 98l1 5q55 83 55 150 0 14-9 40t-9 38q0 1 1.5 3.5t3.5 5 2 3.5q77 114 120.5 214.5t43.5 208.5q0 43-19.5 100t-55.5 57q-9 0-19.5-7.5t-19-17.5-19-26-16-26.5-13.5-26-9-17.5q-1-1-3-1l-5 4q-59 154-132 223 20 20 61.5 38.5t69 41.5 35.5 65q-2 4-4 16t-7 18q-64 97-302 97-53 0-110.5-9t-98-20-104.5-30q-15-5-23-7-14-4-46-4.5t-40-1.5q-41 45-127.5 65t-168.5 20q-35 0-69-1.5t-93-9-101-20.5-74.5-40-32.5-64q0-40 10-59.5t41-48.5q11-2 40.5-13t49.5-12q4 0 14-2 2-2 2-4l-2-3q-48-11-108-105.5t-73-156.5l-5-3q-4 0-12 20-18 41-54.5 74.5t-77.5 37.5h-1q-4 0-6-4.5t-5-5.5q-23-54-23-100 0-275 252-466z\"}]}}),h.register({qrcode:{width:1408,height:1792,paths:[{d:\"M384 1152v128h-128v-128h128zM384 384v128h-128v-128h128zM1152 384v128h-128v-128h128zM128 1407h384v-383h-384v383zM128 640h384v-384h-384v384zM896 640h384v-384h-384v384zM640 896v640h-640v-640h640zM1152 1408v128h-128v-128h128zM1408 1408v128h-128v-128h128zM1408 896v384h-384v-128h-128v384h-128v-640h384v128h128v-128h128zM640 128v640h-640v-640h640zM1408 128v640h-640v-640h640z\"}]}}),h.register({\"question-circle-o\":{width:1536,height:1792,paths:[{d:\"M880 1200v160q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-160q0-14 9-23t23-9h160q14 0 23 9t9 23zM1136 704q0 50-15 90t-45.5 69-52 44-59.5 36q-32 18-46.5 28t-26 24-11.5 29v32q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-68q0-35 10.5-64.5t24-47.5 39-35.5 41-25.5 44.5-21q53-25 75-43t22-49q0-42-43.5-71.5t-95.5-29.5q-56 0-95 27-29 20-80 83-9 12-25 12-11 0-19-6l-108-82q-10-7-12-20t5-23q122-192 349-192 129 0 238.5 89.5t109.5 214.5zM768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"question-circle\":{width:1536,height:1792,paths:[{\nd:\"M896 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zM1152 704q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({question:{width:1024,height:1792,paths:[{d:\"M704 1256v240q0 16-12 28t-28 12h-240q-16 0-28-12t-12-28v-240q0-16 12-28t28-12h240q16 0 28 12t12 28zM1020 656q0 54-15.5 101t-35 76.5-55 59.5-57.5 43.5-61 35.5q-41 23-68.5 65t-27.5 67q0 17-12 32.5t-28 15.5h-240q-15 0-25.5-18.5t-10.5-37.5v-45q0-83 65-156.5t143-108.5q59-27 84-56t25-76q0-42-46.5-74t-107.5-32q-65 0-108 29-35 25-107 115-13 16-31 16-12 0-25-8l-164-125q-13-10-15.5-25t5.5-28q160-266 464-266 80 0 161 31t146 83 106 127.5 41 158.5z\"}]}}),h.register({quora:{width:1792,height:1792,paths:[{d:\"M1255 787q0-318-105-474.5t-330-156.5q-222 0-326 157t-104 474q0 316 104 471.5t326 155.5q74 0 131-17-22-43-39-73t-44-65-53.5-56.5-63-36-77.5-14.5q-46 0-79 16l-49-97q105-91 276-91 132 0 215.5 54t150.5 155q67-149 67-402zM1645 1419h117q3 27-2 67t-26.5 95-58 100.5-107 78-162.5 32.5q-71 0-130.5-19t-105.5-56-79-78-66-96q-97 27-205 27-150 0-292.5-58t-253-158.5-178-249-67.5-317.5q0-170 67.5-319.5t178.5-250.5 253.5-159 291.5-58q121 0 238.5 36t217 106 176 164.5 119.5 219 43 261.5q0 190-80.5 347.5t-218.5 264.5q47 70 93.5 106.5t104.5 36.5q61 0 94-37.5t38-85.5z\"}]}}),h.register({\"quote-left\":{width:1664,height:1792,paths:[{d:\"M768 960v384q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-704q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5h64q26 0 45 19t19 45v128q0 26-19 45t-45 19h-64q-106 0-181 75t-75 181v32q0 40 28 68t68 28h224q80 0 136 56t56 136zM1664 960v384q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-704q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5h64q26 0 45 19t19 45v128q0 26-19 45t-45 19h-64q-106 0-181 75t-75 181v32q0 40 28 68t68 28h224q80 0 136 56t56 136z\"}]}}),h.register({\"quote-right\":{width:1664,height:1792,paths:[{d:\"M768 320v704q0 104-40.5 198.5t-109.5 163.5-163.5 109.5-198.5 40.5h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64q106 0 181-75t75-181v-32q0-40-28-68t-68-28h-224q-80 0-136-56t-56-136v-384q0-80 56-136t136-56h384q80 0 136 56t56 136zM1664 320v704q0 104-40.5 198.5t-109.5 163.5-163.5 109.5-198.5 40.5h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64q106 0 181-75t75-181v-32q0-40-28-68t-68-28h-224q-80 0-136-56t-56-136v-384q0-80 56-136t136-56h384q80 0 136 56t56 136z\"}]}}),h.register({ra:{width:1792,height:1792,paths:[{d:\"M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z\"}]}}),h.register({random:{width:1792,height:1792,paths:[{d:\"M666 481q-60 92-137 273-22-45-37-72.5t-40.5-63.5-51-56.5-63-35-81.5-14.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q250 0 410 225zM1792 1280q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192q-32 0-85 0.5t-81 1-73-1-71-5-64-10.5-63-18.5-58-28.5-59-40-55-53.5-56-69.5q59-93 136-273 22 45 37 72.5t40.5 63.5 51 56.5 63 35 81.5 14.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zM1792 384q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-256q-48 0-87 15t-69 45-51 61.5-45 77.5q-32 62-78 171-29 66-49.5 111t-54 105-64 100-74 83-90 68.5-106.5 42-128 16.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q48 0 87-15t69-45 51-61.5 45-77.5q32-62 78-171 29-66 49.5-111t54-105 64-100 74-83 90-68.5 106.5-42 128-16.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z\"}]}}),h.register({ravelry:{width:2176,height:1792,paths:[{d:\"M1143 1733q-6-1-11-4-13-8-36-23t-86-65-116.5-104.5-112-140-89.5-172.5q-17-3-175-37 66 213 235 362t391 184zM502 1127l168 28q-25-76-41-167.5t-19-145.5l-4-53q-84 82-121 224 5 65 17 114zM612 518q-43 64-77 148 44-46 74-68zM2049 952q0-161-62-307t-167.5-252-250.5-168.5-304-62.5q-147 0-281 52.5t-240 148.5q-30 58-45 160 60-51 143-83.5t158.5-43 143-13.5 108.5 1l40 3q33 1 53 15.5t24.5 33 6.5 37-1 28.5q-126-11-227.5-0.5t-183 43.5-142.5 71.5-131 98.5q4 36 11.5 92.5t35.5 178 62 179.5q123 6 247.5-14.5t214.5-53.5 162.5-67 109.5-59l37-24q22-16 39.5-20.5t30.5 5 17 34.5q14 97-39 121-208 97-467 134-135 20-317 16 41 96 110 176.5t137 127 130.5 79 101.5 43.5l39 12q143 23 263-15 195-99 314-289t119-418zM2123 915q-14 135-40 212-70 208-181.5 346.5t-318.5 253.5q-48 33-82 44-72 26-163 16-36 3-73 3-283 0-504.5-173t-295.5-442q-1 0-4-0.5t-5-0.5q-6 50 2.5 112.5t26 115 36 98 31.5 71.5l14 26q8 12 54 82-71-38-124.5-106.5t-78.5-140-39.5-137-17.5-107.5l-2-42q-5-2-33.5-12.5t-48.5-18-53-20.5-57.5-25-50-25.5-42.5-27-25-25.5q19 10 50.5 25.5t113 45.5 145.5 38l2-32q11-149 94-290 41-202 176-365 28-115 81-214 15-28 32-45t49-32q158-74 303.5-104t302-11 306.5 97q220 115 333 336t87 474z\"}]}}),h.register({rebel:{width:1792,height:1792,paths:[{d:\"M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z\"}]}}),h.register({recycle:{width:1792,height:1792,paths:[{d:\"M836 1169l-15 368-2 22-420-29q-36-3-67-31.5t-47-65.5q-11-27-14.5-55t4-65 12-55 21.5-64 19-53q78 12 509 28zM449 583l180 379-147-92q-63 72-111.5 144.5t-72.5 125-39.5 94.5-18.5 63l-4 21-190-357q-17-26-18-56t6-47l8-18q35-63 114-188l-140-86zM1680 1100l-188 359q-12 29-36.5 46.5t-43.5 20.5l-18 4q-71 7-219 12l8 164-230-367 211-362 7 173q170 16 283 5t170-33zM895 176q-47 63-265 435l-317-187-19-12 225-356q20-31 60-45t80-10q24 2 48.5 12t42 21 41.5 33 36 34.5 36 39.5 32 35zM1550 483l212 363q18 37 12.5 76t-27.5 74q-13 20-33 37t-38 28-48.5 22-47 16-51.5 14-46 12q-34-72-265-436l313-195zM1407 257l142-83-220 373-419-20 151-86q-34-89-75-166t-75.5-123.5-64.5-80-47-46.5l-17-13 405 1q31-3 58 10.5t39 28.5l11 15q39 61 112 190z\"}]}}),h.register({\"reddit-alien\":{width:1792,height:1792,paths:[{d:\"M1792 846q0 58-29.5 105.5t-79.5 72.5q12 46 12 96 0 155-106.5 287t-290.5 208.5-400 76.5-399.5-76.5-290-208.5-106.5-287q0-47 11-94-51-25-82-73.5t-31-106.5q0-82 58-140.5t141-58.5q85 0 145 63 218-152 515-162l116-521q3-13 15-21t26-5l369 81q18-37 54-59.5t79-22.5q62 0 106 43.5t44 105.5-44 106-106 44-105.5-43.5-43.5-105.5l-334-74-104 472q300 9 519 160 58-61 143-61 83 0 141 58.5t58 140.5zM418 1045q0 62 43.5 106t105.5 44 106-44 44-106-44-105.5-106-43.5q-61 0-105 44t-44 105zM1228 1400q11-11 11-26t-11-26q-10-10-25-10t-26 10q-41 42-121 62t-160 20-160-20-121-62q-11-10-26-10t-25 10q-11 10-11 25.5t11 26.5q43 43 118.5 68t122.5 29.5 91 4.5 91-4.5 122.5-29.5 118.5-68zM1225 1195q62 0 105.5-44t43.5-106q0-61-44-105t-105-44q-62 0-106 43.5t-44 105.5 44 106 106 44z\"}]}}),h.register({\"reddit-square\":{width:1536,height:1792,paths:[{d:\"M939 1129q13 13 0 26-53 53-171 53t-171-53q-13-13 0-26 5-6 13-6t13 6q42 42 145 42t145-42q5-6 13-6t13 6zM676 973q0 31-23 54t-54 23-54-23-23-54q0-32 22.5-54.5t54.5-22.5 54.5 22.5 22.5 54.5zM1014 973q0 31-23 54t-54 23-54-23-23-54q0-32 22.5-54.5t54.5-22.5 54.5 22.5 22.5 54.5zM1229 870q0-42-30-72t-73-30q-42 0-73 31-113-78-267-82l54-243 171 39q1 32 23.5 54t53.5 22q32 0 54.5-22.5t22.5-54.5-22.5-54.5-54.5-22.5q-48 0-69 43l-189-42q-17-5-21 13l-60 268q-154 6-265 83-30-32-74-32-43 0-73 30t-30 72q0 30 16 55t42 38q-5 25-5 48 0 122 120 208.5t289 86.5q170 0 290-86.5t120-208.5q0-25-6-49 25-13 40.5-37.5t15.5-54.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({reddit:{width:1792,height:1792,paths:[{d:\"M1095 1167q16 16 0 31-62 62-199 62t-199-62q-16-15 0-31 6-6 15-6t15 6q48 49 169 49 120 0 169-49 6-6 15-6t15 6zM788 986q0 37-26 63t-63 26-63.5-26-26.5-63q0-38 26.5-64t63.5-26 63 26.5 26 63.5zM1183 986q0 37-26.5 63t-63.5 26-63-26-26-63 26-63.5 63-26.5 63.5 26 26.5 64zM1434 866q0-49-35-84t-85-35-86 36q-130-90-311-96l63-283 200 45q0 37 26 63t63 26 63.5-26.5 26.5-63.5-26.5-63.5-63.5-26.5q-54 0-80 50l-221-49q-19-5-25 16l-69 312q-180 7-309 97-35-37-87-37-50 0-85 35t-35 84q0 35 18.5 64t49.5 44q-6 27-6 56 0 142 140 243t337 101q198 0 338-101t140-243q0-32-7-57 30-15 48-43.5t18-63.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({refresh:{width:1536,height:1792,paths:[{d:\"M1511 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zM1536 256v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z\"}]}}),h.register({registered:{width:1792,height:1792,paths:[{d:\"M1042 703q0-88-60-121-33-18-117-18h-123v281h162q66 0 102-37t36-105zM1094 988l205 373q8 17-1 31-8 16-27 16h-152q-20 0-28-17l-194-365h-155v350q0 14-9 23t-23 9h-134q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h294q128 0 190 24 85 31 134 109t49 180q0 92-42.5 165.5t-115.5 109.5q6 10 9 16zM896 160q-150 0-286 58.5t-234.5 157-157 234.5-58.5 286 58.5 286 157 234.5 234.5 157 286 58.5 286-58.5 234.5-157 157-234.5 58.5-286-58.5-286-157-234.5-234.5-157-286-58.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({remove:{width:1408,height:1792,paths:[{d:\"M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"}]}}),h.register({renren:{width:1536,height:1792,paths:[{d:\"M1133 1570q-171 94-368 94-196 0-367-94 138-87 235.5-211t131.5-268q35 144 132.5 268t235.5 211zM638 142v485q0 252-126.5 459.5t-330.5 306.5q-181-215-181-495 0-187 83.5-349.5t229.5-269.5 325-137zM1536 898q0 280-181 495-204-99-330.5-306.5t-126.5-459.5v-485q179 30 325 137t229.5 269.5 83.5 349.5z\"}]}}),h.register({reorder:{width:1536,height:1792,paths:[{d:\"M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({repeat:{width:1536,height:1792,paths:[{d:\"M1536 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z\"}]}}),h.register({\"reply-all\":{width:1792,height:1792,paths:[{d:\"M640 1082v70q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v69l-397 398q-19 19-19 45t19 45zM1792 1120q0 58-17 133.5t-38.5 138-48 125-40.5 90.5l-20 40q-8 17-28 17-6 0-9-1-25-8-23-34 43-400-106-565-64-71-170.5-110.5t-267.5-52.5v251q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v262q411 28 599 221 169 173 169 509z\"}]}}),h.register({reply:{width:1792,height:1792,paths:[{d:\"M1792 1120q0 166-127 451-3 7-10.5 24t-13.5 30-13 22q-12 17-28 17-15 0-23.5-10t-8.5-25q0-9 2.5-26.5t2.5-23.5q5-68 5-123 0-101-17.5-181t-48.5-138.5-80-101-105.5-69.5-133-42.5-154-21.5-175.5-6h-224v256q0 26-19 45t-45 19-45-19l-512-512q-19-19-19-45t19-45l512-512q19-19 45-19t45 19 19 45v256h224q713 0 875 403 53 134 53 333z\"}]}}),h.register({resistance:{width:1792,height:1792,paths:[{d:\"M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z\"}]}}),h.register({retweet:{width:1920,height:1792,paths:[{d:\"M1280 1504q0 13-9.5 22.5t-22.5 9.5h-960q-8 0-13.5-2t-9-7-5.5-8-3-11.5-1-11.5v-13-11-160-416h-192q-26 0-45-19t-19-45q0-24 15-41l320-384q19-22 49-22t49 22l320 384q15 17 15 41 0 26-19 45t-45 19h-192v384h576q16 0 25 11l160 192q7 10 7 21zM1920 1088q0 24-15 41l-320 384q-20 23-49 23t-49-23l-320-384q-15-17-15-41 0-26 19-45t45-19h192v-384h-576q-16 0-25-12l-160-192q-7-9-7-20 0-13 9.5-22.5t22.5-9.5h960q8 0 13.5 2t9 7 5.5 8 3 11.5 1 11.5v13 11 160 416h192q26 0 45 19t19 45z\"}]}}),h.register({rmb:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({road:{width:1920,height:1792,paths:[{d:\"M1111 996v-4l-24-320q-1-13-11-22.5t-23-9.5h-186q-13 0-23 9.5t-11 22.5l-24 320v4q-1 12 8 20t21 8h244q12 0 21-8t8-20zM1870 1463q0 73-46 73h-704q13 0 22-9.5t8-22.5l-20-256q-1-13-11-22.5t-23-9.5h-272q-13 0-23 9.5t-11 22.5l-20 256q-1 13 8 22.5t22 9.5h-704q-46 0-46-73 0-54 26-116l417-1044q8-19 26-33t38-14h339q-13 0-23 9.5t-11 22.5l-15 192q-1 14 8 23t22 9h166q13 0 22-9t8-23l-15-192q-1-13-11-22.5t-23-9.5h339q20 0 38 14t26 33l417 1044q26 62 26 116z\"}]}}),h.register({rocket:{width:1664,height:1792,paths:[{d:\"M1440 448q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1664 160q0 249-75.5 430.5t-253.5 360.5q-81 80-195 176l-20 379q-2 16-16 26l-384 224q-7 4-16 4-12 0-23-9l-64-64q-13-14-8-32l85-276-281-281-276 85q-3 1-9 1-14 0-23-9l-64-64q-17-19-5-39l224-384q10-14 26-16l379-20q96-114 176-195 188-187 358-258t431-71q14 0 24 9.5t10 22.5z\"}]}}),h.register({\"rotate-left\":{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"}]}}),h.register({\"rotate-right\":{width:1536,height:1792,paths:[{d:\"M1536 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z\"}]}}),h.register({rouble:{width:1280,height:1792,paths:[{d:\"M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z\"}]}}),h.register({\"rss-square\":{width:1536,height:1792,paths:[{d:\"M512 1280q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM863 1374q-13-233-176.5-396.5t-396.5-176.5q-14-1-24 9t-10 23v128q0 13 8.5 22t21.5 10q154 11 264 121t121 264q1 13 10 21.5t22 8.5h128q13 0 23-10t9-24zM1247 1375q-5-154-56-297.5t-139.5-260-205-205-260-139.5-297.5-56q-14-1-23 9-10 10-10 23v128q0 13 9 22t22 10q204 7 378 111.5t278.5 278.5 111.5 378q1 13 10 22t22 9h128q13 0 23-10 11-9 9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({rss:{width:1408,height:1792,paths:[{d:\"M384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1467q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zM1408 1469q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z\"}]}}),h.register({rub:{width:1280,height:1792,paths:[{d:\"M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z\"}]}}),h.register({ruble:{width:1280,height:1792,paths:[{d:\"M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z\"}]}}),h.register({rupee:{width:898,height:1792,paths:[{d:\"M898 470v102q0 14-9 23t-23 9h-168q-23 144-129 234t-276 110q167 178 459 536 14 16 4 34-8 18-29 18h-195q-16 0-25-12-306-367-498-571-9-9-9-22v-127q0-13 9.5-22.5t22.5-9.5h112q132 0 212.5-43t102.5-125h-427q-14 0-23-9t-9-23v-102q0-14 9-23t23-9h413q-57-113-268-113h-145q-13 0-22.5-9.5t-9.5-22.5v-133q0-14 9-23t23-9h832q14 0 23 9t9 23v102q0 14-9 23t-23 9h-233q47 61 64 144h171q14 0 23 9t9 23z\"}]}}),h.register({s15:{width:1792,height:1792,paths:[{d:\"M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z\"}]}}),h.register({safari:{width:1792,height:1792,paths:[{d:\"M949 893q0 26-16.5 45t-41.5 19q-26 0-45-16.5t-19-41.5q0-26 17-45t42-19 44 16.5 19 41.5zM964 951l350-581q-9 8-67.5 62.5t-125.5 116.5-136.5 127-117 110.5-50.5 51.5l-349 580q7-7 67-62t126-116.5 136-127 117-111 50-50.5zM1611 896q0 201-104 371-3-2-17-11t-26.5-16.5-16.5-7.5q-13 0-13 13 0 10 59 44-74 112-184.5 190.5t-241.5 110.5l-16-67q-1-10-15-10-5 0-8 5.5t-2 9.5l16 68q-72 15-146 15-199 0-372-105 1-2 13-20.5t21.5-33.5 9.5-19q0-13-13-13-6 0-17 14.5t-22.5 34.5-13.5 23q-113-75-192-187.5t-110-244.5l69-15q10-3 10-15 0-5-5.5-8t-10.5-2l-68 15q-14-72-14-139 0-206 109-379 2 1 18.5 12t30 19 17.5 8q13 0 13-12 0-6-12.5-15.5t-32.5-21.5l-20-12q77-112 189-189t244-107l15 67q2 10 15 10 5 0 8-5.5t2-10.5l-15-66q71-13 134-13 204 0 379 109-39 56-39 65 0 13 12 13 11 0 48-64 111 75 187.5 186t107.5 241l-56 12q-10 2-10 16 0 5 5.5 8t9.5 2l57-13q14 72 14 140zM1696 896q0-163-63.5-311t-170.5-255-255-170.5-311-63.5-311 63.5-255 170.5-170.5 255-63.5 311 63.5 311 170.5 255 255 170.5 311 63.5 311-63.5 255-170.5 170.5-255 63.5-311zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({save:{width:1536,height:1792,paths:[{d:\"M384 1536h768v-384h-768v384zM1280 1536h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zM896 608v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zM1536 640v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"}]}}),h.register({scissors:{width:1792,height:1792,paths:[{d:\"M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1260 960l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zM579 700q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zM494 1445q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zM672 832l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zM896 1056l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zM1600 1472l128-64-520-408-177 138q-2 3-13 7z\"}]}}),h.register({scribd:{width:1536,height:1792,paths:[{d:\"M1500 1549q0 89-63 152.5t-153 63.5-153.5-63.5-63.5-152.5q0-90 63.5-153.5t153.5-63.5 153 63.5 63 153.5zM1267 1268q-115 15-192.5 102.5t-77.5 205.5q0 74 33 138-146 78-379 78-109 0-201-21t-153.5-54.5-110.5-76.5-76-85-44.5-83-23.5-66.5-6-39.5q0-19 4.5-42.5t18.5-56 36.5-58 64-43.5 94.5-18 94 17.5 63 41 35.5 53 17.5 49 4 33.5q0 34-23 81 28 27 82 42t93 17l40 1q115 0 190-51t75-133q0-26-9-48.5t-31.5-44.5-49.5-41-74-44-93.5-47.5-119.5-56.5q-28-13-43-20-116-55-187-100t-122.5-102-72-125.5-20.5-162.5q0-78 20.5-150t66-137.5 112.5-114 166.5-77 221.5-28.5q120 0 220 26t164.5 67 109.5 94 64 105.5 19 103.5q0 46-15 82.5t-36.5 58-48.5 36-49 19.5-39 5h-8-32t-39-5-44-14-41-28-37-46-24-70.5-10-97.5q-15-16-59-25.5t-81-10.5l-37-1q-68 0-117.5 31t-70.5 70-21 76q0 24 5 43t24 46 53 51 97 53.5 150 58.5q76 25 138.5 53.5t109 55.5 83 59 60.5 59.5 41 62.5 26.5 62 14.5 63.5 6 62 1 62.5z\"}]}}),h.register({\"search-minus\":{width:1664,height:1792,paths:[{d:\"M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-576q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h576q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z\"}]}}),h.register({\"search-plus\":{width:1664,height:1792,paths:[{d:\"M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-224v224q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-224h-224q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h224v-224q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5v224h224q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z\"}]}}),h.register({search:{width:1664,height:1792,paths:[{d:\"M1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 52-38 90t-90 38q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z\"}]}}),h.register({sellsy:{width:2048,height:1792,paths:[{d:\"M1500 1371v-733q0-21-15-36t-35-15h-93q-20 0-35 15t-15 36v733q0 20 15 35t35 15h93q20 0 35-15t15-35zM1216 1371v-531q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v531q0 20 15 35t35 15h101q20 0 35-15t15-35zM924 1371v-429q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v429q0 20 15 35t35 15h101q20 0 35-15t15-35zM632 1371v-362q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v362q0 20 15 35t35 15h101q20 0 35-15t15-35zM2048 1225q0 166-118 284t-284 118h-1244q-166 0-284-118t-118-284q0-116 63-214.5t168-148.5q-10-34-10-73 0-113 80.5-193.5t193.5-80.5q102 0 180 67 45-183 194-300t338-117q149 0 275 73.5t199.5 199.5 73.5 275q0 66-14 122 135 33 221 142.5t86 247.5z\"}]}}),h.register({\"send-o\":{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-527-215-298 327q-18 21-47 21-14 0-23-4-19-7-30-23.5t-11-36.5v-452l-472-193q-37-14-40-55-3-39 32-59l1664-960q35-21 68 2zM1422 1510l221-1323-1434 827 336 137 863-639-478 797z\"}]}}),h.register({send:{width:1792,height:1792,paths:[{d:\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\"}]}}),h.register({server:{width:1792,height:1792,paths:[{d:\"M128 1408h1024v-128h-1024v128zM128 896h1024v-128h-1024v128zM1696 1344q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM128 384h1024v-128h-1024v128zM1696 832q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1696 320q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1792 1152v384h-1792v-384h1792zM1792 640v384h-1792v-384h1792zM1792 128v384h-1792v-384h1792z\"}]}}),h.register({\"share-alt-square\":{width:1536,height:1792,paths:[{d:\"M1280 1195q0-88-62.5-151t-150.5-63q-84 0-145 58l-241-120q2-16 2-23t-2-23l241-120q61 58 145 58 88 0 150.5-63t62.5-151-62.5-150.5-150.5-62.5-151 62.5-63 150.5q0 7 2 23l-241 120q-62-57-145-57-88 0-150.5 62.5t-62.5 150.5 62.5 150.5 150.5 62.5q83 0 145-57l241 120q-2 16-2 23 0 88 63 150.5t151 62.5 150.5-62.5 62.5-150.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"share-alt\":{width:1536,height:1792,paths:[{d:\"M1216 1024q133 0 226.5 93.5t93.5 226.5-93.5 226.5-226.5 93.5-226.5-93.5-93.5-226.5q0-12 2-34l-360-180q-92 86-218 86-133 0-226.5-93.5t-93.5-226.5 93.5-226.5 226.5-93.5q126 0 218 86l360-180q-2-22-2-34 0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5-93.5 226.5-226.5 93.5q-126 0-218-86l-360 180q2 22 2 34t-2 34l360 180q92-86 218-86z\"}]}}),h.register({\"share-square-o\":{width:1664,height:1792,paths:[{d:\"M1408 989v259q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h255v0q13 0 22.5 9.5t9.5 22.5q0 27-26 32-77 26-133 60-10 4-16 4h-112q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-214q0-19 18-29 28-13 54-37 16-16 35-8 21 9 21 29zM1645 493l-384 384q-18 19-45 19-12 0-25-5-39-17-39-59v-192h-160q-323 0-438 131-119 137-74 473 3 23-20 34-8 2-12 2-16 0-26-13-10-14-21-31t-39.5-68.5-49.5-99.5-38.5-114-17.5-122q0-49 3.5-91t14-90 28-88 47-81.5 68.5-74 94.5-61.5 124.5-48.5 159.5-30.5 196.5-11h160v-192q0-42 39-59 13-5 25-5 26 0 45 19l384 384q19 19 19 45t-19 45z\"}]}}),h.register({\"share-square\":{width:1536,height:1792,paths:[{d:\"M1005 1101l352-352q19-19 19-45t-19-45l-352-352q-30-31-69-14-40 17-40 59v160q-119 0-216 19.5t-162.5 51-114 79-76.5 95.5-44.5 109-21.5 111.5-5 110.5q0 181 167 404 11 12 25 12 7 0 13-3 22-9 19-33-44-354 62-473 46-52 130-75.5t224-23.5v160q0 42 40 59 12 5 24 5 26 0 45-19zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({share:{width:1792,height:1792,paths:[{d:\"M1792 640q0 26-19 45l-512 512q-19 19-45 19t-45-19-19-45v-256h-224q-98 0-175.5 6t-154 21.5-133 42.5-105.5 69.5-80 101-48.5 138.5-17.5 181q0 55 5 123 0 6 2.5 23.5t2.5 26.5q0 15-8.5 25t-23.5 10q-16 0-28-17-7-9-13-22t-13.5-30-10.5-24q-127-285-127-451 0-199 53-333 162-403 875-403h224v-256q0-26 19-45t45-19 45 19l512 512q19 19 19 45z\"}]}}),h.register({shekel:{width:1536,height:1792,paths:[{d:\"M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({sheqel:{width:1536,height:1792,paths:[{d:\"M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({shield:{width:1280,height:1792,paths:[{d:\"M1088 960v-640h-448v1137q119-63 213-137 235-184 235-360zM1280 192v768q0 86-33.5 170.5t-83 150-118 127.5-126.5 103-121 77.5-89.5 49.5-42.5 20q-12 6-26 6t-26-6q-16-7-42.5-20t-89.5-49.5-121-77.5-126.5-103-118-127.5-83-150-33.5-170.5v-768q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"}]}}),h.register({ship:{width:2048,height:1792,paths:[{\nd:\"M1811 1555q19-19 45-19t45 19l128 128-90 90-83-83-83 83q-18 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-128-128 90-90 83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83zM237 1517q-19 19-45 19t-45-19l-128-128 90-90 83 82 83-82q19-19 45-19t45 19l83 82 64-64v-293l-210-314q-17-26-7-56.5t40-40.5l177-58v-299h128v-128h256v-128h256v128h256v128h128v299l177 58q30 10 40 40.5t-7 56.5l-210 314v293l19-18q19-19 45-19t45 19l83 82 83-82q19-19 45-19t45 19l128 128-90 90-83-83-83 83q-18 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83zM640 384v128l384-128 384 128v-128h-128v-128h-512v128h-128z\"}]}}),h.register({shirtsinbulk:{width:1536,height:1792,paths:[{d:\"M0 0h1536v1392l-776 338-760-338v-1392zM1436 1327v-926h-1336v926l661 294zM1436 301v-201h-1336v201h1336zM181 599v115h-37v-115h37zM181 747v115h-37v-115h37zM181 895v115h-37v-115h37zM181 1043v115h-37v-115h37zM181 1191v115h-37v-115h37zM207 1334l15-34 105 47-15 33zM343 1394l15-34 105 46-15 34zM478 1454l15-34 105 46-15 34zM614 1513l15-33 104 46-15 34zM797 1526l105-46 15 33-105 47zM932 1466l105-46 15 34-105 46zM1068 1406l105-46 15 34-105 46zM1203 1347l105-47 15 34-105 46zM259 147v36h-114v-36h114zM421 147v36h-115v-36h115zM583 147v36h-115v-36h115zM744 147v36h-114v-36h114zM906 147v36h-114v-36h114zM1068 147v36h-115v-36h115zM1230 147v36h-115v-36h115zM1391 147v36h-114v-36h114zM181 487v79h-37v-115h115v36h-78zM421 451v36h-115v-36h115zM583 451v36h-115v-36h115zM744 451v36h-114v-36h114zM906 451v36h-114v-36h114zM1068 451v36h-115v-36h115zM1230 451v36h-115v-36h115zM1355 566v-79h-78v-36h115v115h-37zM1355 714v-115h37v115h-37zM1355 862v-115h37v115h-37zM1355 1010v-115h37v115h-37zM1355 1158v-115h37v115h-37zM1355 1306v-115h37v115h-37zM760 1271q-129 0-221-91.5t-92-221.5q0-129 92-221t221-92q130 0 221.5 92t91.5 221q0 130-91.5 221.5t-221.5 91.5zM595 890q0 36 19.5 56.5t49.5 25 64 7 64 2 49.5 9 19.5 30.5q0 49-112 49-97 0-123-51h-3l-31 63q67 42 162 42 29 0 56.5-5t55.5-16 45.5-33 17.5-53q0-46-27.5-69.5t-67.5-27-79.5-3-67-5-27.5-25.5q0-21 20.5-33t40.5-15 41-3q34 0 70.5 11t51.5 34h3l30-58q-3-1-21-8.5t-22.5-9-19.5-7-22-7-20-4.5-24-4-23-1q-29 0-56.5 5t-54 16.5-43 34-16.5 53.5z\"}]}}),h.register({\"shopping-bag\":{width:1792,height:1792,paths:[{d:\"M1757 1408l35 313q3 28-16 50-19 21-48 21h-1664q-29 0-48-21-19-22-16-50l35-313h1722zM1664 569l86 775h-1708l86-775q3-24 21-40.5t43-16.5h256v128q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5v-128h384v128q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5v-128h256q25 0 43 16.5t21 40.5zM1280 384v256q0 26-19 45t-45 19-45-19-19-45v-256q0-106-75-181t-181-75-181 75-75 181v256q0 26-19 45t-45 19-45-19-19-45v-256q0-159 112.5-271.5t271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({\"shopping-basket\":{width:2048,height:1792,paths:[{d:\"M1920 768q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5h-15l-115 662q-8 46-44 76t-82 30h-1280q-46 0-82-30t-44-76l-115-662h-15q-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5h1792zM485 1568q26-2 43.5-22.5t15.5-46.5l-32-416q-2-26-22.5-43.5t-46.5-15.5-43.5 22.5-15.5 46.5l32 416q2 25 20.5 42t43.5 17h5zM896 1504v-416q0-26-19-45t-45-19-45 19-19 45v416q0 26 19 45t45 19 45-19 19-45zM1280 1504v-416q0-26-19-45t-45-19-45 19-19 45v416q0 26 19 45t45 19 45-19 19-45zM1632 1509l32-416q2-26-15.5-46.5t-43.5-22.5-46.5 15.5-22.5 43.5l-32 416q-2 26 15.5 46.5t43.5 22.5h5q25 0 43.5-17t20.5-42zM476 292l-93 412h-132l101-441q19-88 89-143.5t160-55.5h167q0-26 19-45t45-19h384q26 0 45 19t19 45h167q90 0 160 55.5t89 143.5l101 441h-132l-93-412q-11-44-45.5-72t-79.5-28h-167q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45h-167q-45 0-79.5 28t-45.5 72z\"}]}}),h.register({\"shopping-cart\":{width:1664,height:1792,paths:[{d:\"M640 1536q0 52-38 90t-90 38-90-38-38-90 38-90 90-38 90 38 38 90zM1536 1536q0 52-38 90t-90 38-90-38-38-90 38-90 90-38 90 38 38 90zM1664 448v512q0 24-16.5 42.5t-40.5 21.5l-1044 122q13 60 13 70 0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-11 8-31.5t16-36 21.5-40 15.5-29.5l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t19.5 15.5 13 24.5 8 26 5.5 29.5 4.5 26h1201q26 0 45 19t19 45z\"}]}}),h.register({shower:{width:1920,height:1792,paths:[{d:\"M1433 249q10 10 10 23t-10 23l-626 626q-10 10-23 10t-23-10l-82-82q-10-10-10-23t10-23l44-44q-72-91-81.5-207t46.5-215q-74-71-176-71-106 0-181 75t-75 181v1280h-256v-1280q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5q106 0 201 41t166 115q94-39 197-24.5t185 79.5l44-44q10-10 23-10t23 10zM1344 512q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1600 640q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1856 512q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 640q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1408 704q0-26 19-45t45-19 45 19 19 45-19 45-45 19-45-19-19-45zM1728 640q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 768q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1344 896q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1600 768q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 1024q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1472 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 1024q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1344 1024q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 1152q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 1280q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19z\"}]}}),h.register({\"sign-in\":{width:1536,height:1792,paths:[{d:\"M1184 896q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45zM1536 544v704q0 119-84.5 203.5t-203.5 84.5h-320q-13 0-22.5-9.5t-9.5-22.5q0-4-1-20t-0.5-26.5 3-23.5 10-19.5 20.5-6.5h320q66 0 113-47t47-113v-704q0-66-47-113t-113-47h-288-11-13t-11.5-1-11.5-3-8-5.5-7-9-2-13.5q0-4-1-20t-0.5-26.5 3-23.5 10-19.5 20.5-6.5h320q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"sign-language\":{width:1664,height:1792,paths:[{d:\"M831 673q32 0 59 18l222 148q61 40 110 97l146 170q40 46 29 106l-72 413q-6 32-29.5 53.5t-55.5 25.5l-527 56-352 32h-9q-39 0-67.5-28t-28.5-68q0-37 27-64t65-32l260-32h-448q-41 0-69.5-30t-26.5-71q2-39 32-65t69-26l442-1-521-64q-41-5-66-37t-19-73q6-35 34.5-57.5t65.5-22.5h10l481 60-351-94q-38-10-62-41.5t-18-68.5q6-36 33-58.5t62-22.5q6 0 20 2l448 96 217 37q1 0 3 0.5t3 0.5q23 0 30.5-23t-12.5-36l-186-125q-35-23-42-63.5t18-73.5q27-38 76-38zM761 875l186 125-218-37-5-2-36-38-238-262q-1-1-2.5-3.5t-2.5-3.5q-24-31-18.5-70t37.5-64q31-23 68-17.5t64 33.5l142 147q-2 1-5 3.5t-4 4.5q-32 45-23 99t55 85zM1648 421l15 266q4 73-11 147l-48 219q-12 59-67 87l-106 54q2-62-39-109l-146-170q-53-61-117-103l-222-148q-34-23-76-23-51 0-88 37l-235-312q-25-33-18-73.5t41-63.5q33-22 71.5-14t62.5 40l266 352-262-455q-21-35-10.5-75t47.5-59q35-18 72.5-6t57.5 46l241 420-136-337q-15-35-4.5-74t44.5-56q37-19 76-6t56 51l193 415 101 196q8 15 23 17.5t27-7.5 11-26l-12-224q-2-41 26-71t69-31q39 0 67 28.5t30 67.5z\"}]}}),h.register({\"sign-out\":{width:1664,height:1792,paths:[{d:\"M640 1440q0 4 1 20t0.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h320q13 0 22.5 9.5t9.5 22.5q0 4 1 20t0.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-66 0-113 47t-47 113v704q0 66 47 113t113 47h288 11 13t11.5 1 11.5 3 8 5.5 7 9 2 13.5zM1568 896q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45z\"}]}}),h.register({signal:{width:1792,height:1792,paths:[{d:\"M256 1440v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM640 1312v320q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-320q0-14 9-23t23-9h192q14 0 23 9t9 23zM1024 1056v576q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23zM1408 672v960q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 160v1472q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-1472q0-14 9-23t23-9h192q14 0 23 9t9 23z\"}]}}),h.register({signing:{width:1664,height:1792,paths:[{d:\"M831 673q32 0 59 18l222 148q61 40 110 97l146 170q40 46 29 106l-72 413q-6 32-29.5 53.5t-55.5 25.5l-527 56-352 32h-9q-39 0-67.5-28t-28.5-68q0-37 27-64t65-32l260-32h-448q-41 0-69.5-30t-26.5-71q2-39 32-65t69-26l442-1-521-64q-41-5-66-37t-19-73q6-35 34.5-57.5t65.5-22.5h10l481 60-351-94q-38-10-62-41.5t-18-68.5q6-36 33-58.5t62-22.5q6 0 20 2l448 96 217 37q1 0 3 0.5t3 0.5q23 0 30.5-23t-12.5-36l-186-125q-35-23-42-63.5t18-73.5q27-38 76-38zM761 875l186 125-218-37-5-2-36-38-238-262q-1-1-2.5-3.5t-2.5-3.5q-24-31-18.5-70t37.5-64q31-23 68-17.5t64 33.5l142 147q-2 1-5 3.5t-4 4.5q-32 45-23 99t55 85zM1648 421l15 266q4 73-11 147l-48 219q-12 59-67 87l-106 54q2-62-39-109l-146-170q-53-61-117-103l-222-148q-34-23-76-23-51 0-88 37l-235-312q-25-33-18-73.5t41-63.5q33-22 71.5-14t62.5 40l266 352-262-455q-21-35-10.5-75t47.5-59q35-18 72.5-6t57.5 46l241 420-136-337q-15-35-4.5-74t44.5-56q37-19 76-6t56 51l193 415 101 196q8 15 23 17.5t27-7.5 11-26l-12-224q-2-41 26-71t69-31q39 0 67 28.5t30 67.5z\"}]}}),h.register({simplybuilt:{width:2048,height:1792,paths:[{d:\"M863 1032q0-112-79.5-191.5t-191.5-79.5-191 79.5-79 191.5 79 191 191 79 191.5-79 79.5-191zM1726 1031q0-112-79-191t-191-79-191.5 79-79.5 191q0 113 79.5 192t191.5 79 191-79.5 79-191.5zM2048 222v1348q0 44-31.5 75.5t-76.5 31.5h-1832q-45 0-76.5-31.5t-31.5-75.5v-1348q0-44 31.5-75.5t76.5-31.5h431q44 0 76 31.5t32 75.5v161h754v-161q0-44 32-75.5t76-31.5h431q45 0 76.5 31.5t31.5 75.5z\"}]}}),h.register({sitemap:{width:1792,height:1792,paths:[{d:\"M1792 1248v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192h-512v192h96q40 0 68 28t28 68v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192h-512v192h96q40 0 68 28t28 68v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192q0-52 38-90t90-38h512v-192h-96q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h320q40 0 68 28t28 68v320q0 40-28 68t-68 28h-96v192h512q52 0 90 38t38 90v192h96q40 0 68 28t28 68z\"}]}}),h.register({skyatlas:{width:2048,height:1792,paths:[{d:\"M1430 583zM1690 787q148 0 253 98.5t105 244.5q0 157-109 261.5t-267 104.5q-85 0-162-27.5t-138-73.5-118-106-109-126-103.5-132.5-108.5-126.5-117-106-136-73.5-159-27.5q-154 0-251.5 91.5t-97.5 244.5q0 157 104 250t263 93q100 0 208-37.5t193-98.5q5-4 21-18.5t30-24 22-9.5q14 0 24.5 10.5t10.5 24.5q0 24-60 77-101 88-234.5 142t-260.5 54q-133 0-245.5-58t-180-165-67.5-241q0-205 141.5-341t347.5-136q120 0 226.5 43.5t185.5 113 151.5 153 139 167.5 133.5 153.5 149.5 113 172.5 43.5q102 0 168.5-61.5t66.5-162.5q0-95-64.5-159t-159.5-64q-30 0-81.5 18.5t-68.5 18.5q-20 0-35.5-15t-15.5-35q0-18 8.5-57t8.5-59q0-159-107.5-263t-266.5-104q-58 0-111.5 18.5t-84 40.5-55.5 40.5-33 18.5q-15 0-25.5-10.5t-10.5-25.5q0-19 25-46 59-67 147-103.5t182-36.5q191 0 318 125.5t127 315.5q0 37-4 66 57-15 115-15z\"}]}}),h.register({skype:{width:1536,height:1792,paths:[{d:\"M1173 1063q0-50-19.5-91.5t-48.5-68.5-73-49-82.5-34-87.5-23l-104-24q-30-7-44-10.5t-35-11.5-30-16-16.5-21-7.5-30q0-77 144-77 43 0 77 12t54 28.5 38 33.5 40 29 48 12q47 0 75.5-32t28.5-77q0-55-56-99.5t-142-67.5-182-23q-68 0-132 15.5t-119.5 47-89 87-33.5 128.5q0 61 19 106.5t56 75.5 80 48.5 103 32.5l146 36q90 22 112 36 32 20 32 60 0 39-40 64.5t-105 25.5q-51 0-91.5-16t-65-38.5-45.5-45-46-38.5-54-16q-50 0-75.5 30t-25.5 75q0 92 122 157.5t291 65.5q73 0 140-18.5t122.5-53.5 88.5-93.5 33-131.5zM1536 1280q0 159-112.5 271.5t-271.5 112.5q-130 0-234-80-77 16-150 16-143 0-273.5-55.5t-225-150-150-225-55.5-273.5q0-73 16-150-80-104-80-234 0-159 112.5-271.5t271.5-112.5q130 0 234 80 77-16 150-16 143 0 273.5 55.5t225 150 150 225 55.5 273.5q0 73-16 150 80 104 80 234z\"}]}}),h.register({slack:{width:1664,height:1792,paths:[{d:\"M1519 776q62 0 103.5 40.5t41.5 101.5q0 97-93 130l-172 59 56 167q7 21 7 47 0 59-42 102t-101 43q-47 0-85.5-27t-53.5-72l-55-165-310 106 55 164q8 24 8 47 0 59-42 102t-102 43q-47 0-85-27t-53-72l-55-163-153 53q-29 9-50 9-61 0-101.5-40t-40.5-101q0-47 27.5-85t71.5-53l156-53-105-313-156 54q-26 8-48 8-60 0-101-40.5t-41-100.5q0-47 27.5-85t71.5-53l157-53-53-159q-8-24-8-47 0-60 42-102.5t102-42.5q47 0 85 27t53 72l54 160 310-105-54-160q-8-24-8-47 0-59 42.5-102t101.5-43q47 0 85.5 27.5t53.5 71.5l53 161 162-55q21-6 43-6 60 0 102.5 39.5t42.5 98.5q0 45-30 81.5t-74 51.5l-157 54 105 316 164-56q24-8 46-8zM725 1038l310-105-105-315-310 107z\"}]}}),h.register({sliders:{width:1536,height:1792,paths:[{d:\"M352 1408v128h-352v-128h352zM704 1280q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM864 896v128h-864v-128h864zM224 384v128h-224v-128h224zM1536 1408v128h-736v-128h736zM576 256q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM1216 768q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM1536 896v128h-224v-128h224zM1536 384v128h-864v-128h864z\"}]}}),h.register({slideshare:{width:1792,height:1792,paths:[{d:\"M873 740q0 83-63.5 142.5t-152.5 59.5-152.5-59.5-63.5-142.5q0-84 63.5-143t152.5-59 152.5 59 63.5 143zM1375 740q0 83-63 142.5t-153 59.5q-89 0-152.5-59.5t-63.5-142.5q0-84 63.5-143t152.5-59q90 0 153 59t63 143zM1600 920v-667q0-87-32-123.5t-111-36.5h-1112q-83 0-112.5 34t-29.5 126v673q43 23 88.5 40t81 28 81 18.5 71 11 70 4 58.5 0.5 56.5-2 44.5-2q68-1 95 27 6 6 10 9 26 25 61 51 7-91 118-87 5 0 36.5 1.5t43 2 45.5 1 53-1 54.5-4.5 61-8.5 62-13.5 67-19.5 67.5-27 72-34.5zM1763 915q-121 149-372 252 84 285-23 465-66 113-183 148-104 32-182-15-86-51-82-164l-1-326v-1q-8-2-24.5-6t-23.5-5l-1 338q4 114-83 164-79 47-183 15-117-36-182-150-105-180-22-463-251-103-372-252-25-37-4-63t60 1q4 2 11.5 7t10.5 8v-694q0-72 47-123t114-51h1257q67 0 114 51t47 123v694l21-15q39-27 60-1t-4 63z\"}]}}),h.register({\"smile-o\":{width:1536,height:1792,paths:[{d:\"M1134 1075q-37 121-138 195t-228 74-228-74-138-195q-8-25 4-48.5t38-31.5q25-8 48.5 4t31.5 38q25 80 92.5 129.5t151.5 49.5 151.5-49.5 92.5-129.5q8-26 32-38t49-4 37 31.5 4 48.5zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"snapchat-ghost\":{width:1664,height:1792,paths:[{d:\"M848 128q134-1 240.5 68.5t163.5 192.5q27 58 27 179 0 47-9 191 14 7 28 7 18 0 51-13.5t51-13.5q29 0 56 18t27 46q0 32-31.5 54t-69 31.5-69 29-31.5 47.5q0 15 12 43 37 82 102.5 150t144.5 101q28 12 80 23 28 6 28 35 0 70-219 103-7 11-11 39t-14 46.5-33 18.5q-20 0-62-6.5t-64-6.5q-37 0-62 5-32 5-63 22.5t-58 38-58 40.5-76 33.5-99 13.5q-52 0-96.5-13.5t-75-33.5-57.5-40.5-58-38-62-22.5q-26-5-63-5-24 0-65.5 7.5t-58.5 7.5q-25 0-35-18.5t-14-47.5-11-40q-219-33-219-103 0-29 28-35 52-11 80-23 78-32 144.5-101t102.5-150q12-28 12-43 0-28-31.5-47.5t-69.5-29.5-69.5-31.5-31.5-52.5q0-27 26-45.5t55-18.5q15 0 48 13t53 13q18 0 32-7-9-142-9-190 0-122 27-180 64-137 172-198t264-63z\"}]}}),h.register({\"snapchat-square\":{width:1536,height:1792,paths:[{d:\"M1280 1148q0-22-22-27-67-14-118-58t-80-109q-7-14-7-25 0-15 19.5-26t42.5-17 42.5-20.5 19.5-36.5q0-19-18.5-31.5t-38.5-12.5q-11 0-31 8t-32 8q-4 0-12-2 5-63 5-115 0-78-17-114-36-78-102.5-121.5t-152.5-43.5q-198 0-275 165-18 38-18 115 0 38 6 114-10 2-15 2-11 0-31.5-8t-30.5-8q-20 0-37.5 12.5t-17.5 32.5q0 21 19.5 35.5t42.5 20.5 42.5 17 19.5 26q0 11-7 25-64 138-198 167-22 5-22 27 0 47 138 69 2 5 6 26t11 30.5 23 9.5q13 0 38.5-5t38.5-5q35 0 67.5 15t54.5 32.5 57.5 32.5 76.5 15q43 0 79-15t57.5-32.5 54-32.5 67.5-15q13 0 39 4.5t39 4.5q15 0 22.5-9.5t11.5-31 5-24.5q138-22 138-69zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({snapchat:{width:1536,height:1792,paths:[{d:\"M1279 1148q0-22-22-27-67-15-118-59t-80-108q-7-19-7-25 0-15 19.5-26t43-17 43-20.5 19.5-36.5q0-19-18.5-31.5t-38.5-12.5q-12 0-32 8t-31 8q-4 0-12-2 5-95 5-114 0-79-17-114-36-78-103-121.5t-152-43.5q-199 0-275 165-17 35-17 114 0 19 5 114-4 2-14 2-12 0-32-7.5t-30-7.5q-21 0-38.5 12t-17.5 32q0 21 19.5 35.5t43 20.5 43 17 19.5 26q0 6-7 25-64 138-198 167-22 5-22 27 0 46 137 68 2 5 6 26t11.5 30.5 23.5 9.5q12 0 37.5-4.5t39.5-4.5q35 0 67 15t54 32.5 57.5 32.5 76.5 15q43 0 79-15t57.5-32.5 53.5-32.5 67-15q14 0 39.5 4t38.5 4q16 0 23-10t11-30 6-25q137-22 137-68zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"snowflake-o\":{width:1664,height:1792,paths:[{d:\"M1566 1117l-167 33 186 107q23 13 29.5 38.5t-6.5 48.5q-14 23-39 29.5t-48-6.5l-186-106 55 160q13 38-12 63.5t-60.5 20.5-48.5-42l-102-300-271-156v313l208 238q16 18 17 39t-11 36.5-28.5 25-37 5.5-36.5-22l-112-128v214q0 26-19 45t-45 19-45-19-19-45v-214l-112 128q-16 18-36.5 22t-37-5.5-28.5-25-11-36.5 17-39l208-238v-313l-271 156-102 300q-13 37-48.5 42t-60.5-20.5-12-63.5l55-160-186 106q-23 13-48 6.5t-39-29.5q-13-23-6.5-48.5t29.5-38.5l186-107-167-33q-29-6-42-29t-8.5-46.5 25.5-40 50-10.5l310 62 271-157-271-157-310 62q-4 1-13 1-27 0-44-18t-19-40 11-43 40-26l167-33-186-107q-23-13-29.5-38.5t6.5-48.5 39-30 48 7l186 106-55-160q-13-38 12-63.5t60.5-20.5 48.5 42l102 300 271 156v-313l-208-238q-16-18-17-39t11-36.5 28.5-25 37-5.5 36.5 22l112 128v-214q0-26 19-45t45-19 45 19 19 45v214l112-128q16-18 36.5-22t37 5.5 28.5 25 11 36.5-17 39l-208 238v313l271-156 102-300q13-37 48.5-42t60.5 20.5 12 63.5l-55 160 186-106q23-13 48-6.5t39 29.5q13 23 6.5 48.5t-29.5 38.5l-186 107 167 33q27 5 40 26t11 43-19 40-44 18q-9 0-13-1l-310-62-271 157 271 157 310-62q29-6 50 10.5t25.5 40-8.5 46.5-42 29z\"}]}}),h.register({\"soccer-ball-o\":{width:1792,height:1792,paths:[{d:\"M609 816l287-208 287 208-109 336h-355zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM1515 1350q149-203 149-454v-3l-102 89-240-224 63-323 134 12q-150-206-389-282l53 124-287 159-287-159 53-124q-239 76-389 282l135-12 62 323-240 224-102-89v3q0 251 149 454l30-132 326 40 139 298-116 69q117 39 240 39t240-39l-116-69 139-298 326-40z\"}]}}),h.register({\"sort-alpha-asc\":{width:1664,height:1792,paths:[{d:\"M1191 408h177l-72-218-12-47q-2-16-2-20h-4l-3 20q0 1-3.5 18t-7.5 29zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1572 1559v233h-584v-90l369-529q12-18 21-27l11-9v-3q-2 0-6.5 0.5t-7.5 0.5q-12 3-30 3h-232v115h-120v-229h567v89l-369 530q-6 8-21 26l-11 11v2l14-2q9-2 30-2h248v-119h121zM1661 662v106h-288v-106h75l-47-144h-243l-47 144h75v106h-287v-106h70l230-662h162l230 662h70z\"}]}}),h.register({\"sort-alpha-desc\":{width:1664,height:1792,paths:[{d:\"M1191 1432h177l-72-218-12-47q-2-16-2-20h-4l-3 20q0 1-3.5 18t-7.5 29zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1661 1686v106h-288v-106h75l-47-144h-243l-47 144h75v106h-287v-106h70l230-662h162l230 662h70zM1572 535v233h-584v-90l369-529q12-18 21-27l11-9v-3q-2 0-6.5 0.5t-7.5 0.5q-12 3-30 3h-232v115h-120v-229h567v89l-369 530q-6 8-21 26l-11 10v3l14-3q9-1 30-1h248v-119h121z\"}]}}),h.register({\"sort-amount-asc\":{width:1792,height:1792,paths:[{d:\"M736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1792 1568v192q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h832q14 0 23 9t9 23zM1600 1056v192q0 14-9 23t-23 9h-640q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h640q14 0 23 9t9 23zM1408 544v192q0 14-9 23t-23 9h-448q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h448q14 0 23 9t9 23zM1216 32v192q0 14-9 23t-23 9h-256q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h256q14 0 23 9t9 23z\"}]}}),h.register({\"sort-amount-desc\":{width:1792,height:1792,paths:[{d:\"M1216 1568v192q0 14-9 23t-23 9h-256q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h256q14 0 23 9t9 23zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1408 1056v192q0 14-9 23t-23 9h-448q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h448q14 0 23 9t9 23zM1600 544v192q0 14-9 23t-23 9h-640q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h640q14 0 23 9t9 23zM1792 32v192q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h832q14 0 23 9t9 23z\"}]}}),h.register({\"sort-asc\":{width:1024,height:1792,paths:[{d:\"M1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({\"sort-desc\":{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"}]}}),h.register({\"sort-down\":{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"}]}}),h.register({\"sort-numeric-asc\":{width:1536,height:1792,paths:[{d:\"M1346 1313q0-63-44-116t-103-53q-52 0-83 37t-31 94 36.5 95 104.5 38q50 0 85-27t35-68zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1486 1371q0 62-13 121.5t-41 114-68 95.5-98.5 65.5-127.5 24.5q-62 0-108-16-24-8-42-15l39-113q15 7 31 11 37 13 75 13 84 0 134.5-58.5t66.5-145.5h-2q-21 23-61.5 37t-84.5 14q-106 0-173-71.5t-67-172.5q0-105 72-178t181-73q123 0 205 94.5t82 252.5zM1456 654v114h-469v-114h167v-432q0-7 0.5-19t0.5-17v-16h-2l-7 12q-8 13-26 31l-62 58-82-86 192-185h123v654h165z\"}]}}),h.register({\"sort-numeric-desc\":{width:1536,height:1792,paths:[{d:\"M1346 289q0-63-44-116t-103-53q-52 0-83 37t-31 94 36.5 95 104.5 38q50 0 85-27t35-68zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1456 1678v114h-469v-114h167v-432q0-7 0.5-19t0.5-17v-16h-2l-7 12q-8 13-26 31l-62 58-82-86 192-185h123v654h165zM1486 347q0 62-13 121.5t-41 114-68 95.5-98.5 65.5-127.5 24.5q-62 0-108-16-24-8-42-15l39-113q15 7 31 11 37 13 75 13 84 0 134.5-58.5t66.5-145.5h-2q-21 23-61.5 37t-84.5 14q-106 0-173-71.5t-67-172.5q0-105 72-178t181-73q123 0 205 94.5t82 252.5z\"}]}}),h.register({\"sort-up\":{width:1024,height:1792,paths:[{d:\"M1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({sort:{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45zM1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({soundcloud:{width:2304,height:1792,paths:[{d:\"M784 1372l16-241-16-523q-1-10-7.5-17t-16.5-7q-9 0-16 7t-7 17l-14 523 14 241q1 10 7.5 16.5t15.5 6.5q22 0 24-23zM1080 1343l11-211-12-586q0-16-13-24-8-5-16-5t-16 5q-13 8-13 24l-1 6-10 579q0 1 11 236v1q0 10 6 17 9 11 23 11 11 0 20-9 9-7 9-20zM35 1003l20 128-20 126q-2 9-9 9t-9-9l-17-126 17-128q2-9 9-9t9 9zM121 924l26 207-26 203q-2 9-10 9-9 0-9-10l-23-202 23-207q0-9 9-9 8 0 10 9zM401 1377zM213 886l25 245-25 237q0 11-11 11-10 0-12-11l-21-237 21-245q2-12 12-12 11 0 11 12zM307 879l23 252-23 244q-2 13-14 13-13 0-13-13l-21-244 21-252q0-13 13-13 12 0 14 13zM401 897l21 234-21 246q-2 16-16 16-6 0-10.5-4.5t-4.5-11.5l-20-246 20-234q0-6 4.5-10.5t10.5-4.5q14 0 16 15zM784 1372zM495 751l21 380-21 246q0 7-5 12.5t-12 5.5q-16 0-18-18l-18-246 18-380q2-18 18-18 7 0 12 5.5t5 12.5zM589 665l19 468-19 244q0 8-5.5 13.5t-13.5 5.5q-18 0-20-19l-16-244 16-468q2-19 20-19 8 0 13.5 5.5t5.5 13.5zM687 625l18 506-18 242q-2 21-22 21-19 0-21-21l-16-242 16-506q0-9 6.5-15.5t14.5-6.5q9 0 15 6.5t7 15.5zM1079 1367v0 0 0zM881 621l15 510-15 239q0 10-7.5 17.5t-17.5 7.5-17-7-8-18l-14-239 14-510q0-11 7.5-18t17.5-7 17.5 7 7.5 18zM980 640l14 492-14 236q0 11-8 19t-19 8-19-8-9-19l-12-236 12-492q1-12 9-20t19-8 18.5 8 8.5 20zM1192 1132l-14 231v0q0 13-9 22t-22 9-22-9-10-22l-6-114-6-117 12-636v-3q2-15 12-24 9-7 20-7 8 0 15 5 14 8 16 26zM2304 1113q0 117-83 199.5t-200 82.5h-786q-13-2-22-11t-9-22v-899q0-23 28-33 85-34 181-34 195 0 338 131.5t160 323.5q53-22 110-22 117 0 200 83t83 201z\"}]}}),h.register({\"space-shuttle\":{width:2176,height:1792,paths:[{d:\"M620 1120q-110 64-268 64h-128v-64h-64q-13 0-22.5-23.5t-9.5-56.5q0-24 7-49-58-2-96.5-10.5t-38.5-20.5 38.5-20.5 96.5-10.5q-7-25-7-49 0-33 9.5-56.5t22.5-23.5h64v-64h128q158 0 268 64h1113q42 7 106.5 18t80.5 14q89 15 150 40.5t83.5 47.5 22.5 40-22.5 40-83.5 47.5-150 40.5q-16 3-80.5 14t-106.5 18h-1113zM1739 868q53 36 53 92t-53 92l81 30q68-48 68-122t-68-122zM625 1136h1015q-217 38-456 80-57 0-113 24t-83 48l-28 24-288 288q-26 26-70.5 45t-89.5 19h-96l-93-464h29q157 0 273-64zM352 720h-29l93-464h96q46 0 90 19t70 45l288 288q4 4 11 10.5t30.5 23 48.5 29 61.5 23 72.5 10.5l456 80h-1015q-116-64-273-64z\"}]}}),h.register({spinner:{width:1792,height:1792,paths:[{d:\"M526 1394q0 53-37.5 90.5t-90.5 37.5q-52 0-90-38t-38-90q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1024 1600q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM320 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1522 1394q0 52-38 90t-90 38q-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM558 398q0 66-47 113t-113 47-113-47-47-113 47-113 113-47 113 47 47 113zM1728 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1088 192q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1618 398q0 93-66 158.5t-158 65.5q-93 0-158.5-65.5t-65.5-158.5q0-92 65.5-158t158.5-66q92 0 158 66t66 158z\"}]}}),h.register({spoon:{width:768,height:1792,paths:[{d:\"M704 528q0 145-57 243.5t-152 135.5l45 821q2 26-16 45t-44 19h-192q-26 0-44-19t-16-45l45-821q-95-37-152-135.5t-57-243.5q0-128 42.5-249.5t117.5-200 160-78.5 160 78.5 117.5 200 42.5 249.5z\"}]}}),h.register({spotify:{width:1536,height:1792,paths:[{d:\"M1127 1210q0-32-30-51-193-115-447-115-133 0-287 34-42 9-42 52 0 20 13.5 34.5t35.5 14.5q5 0 37-8 132-27 243-27 226 0 397 103 19 11 33 11 19 0 33-13.5t14-34.5zM1223 995q0-40-35-61-237-141-548-141-153 0-303 42-48 13-48 64 0 25 17.5 42.5t42.5 17.5q7 0 37-8 122-33 251-33 279 0 488 124 24 13 38 13 25 0 42.5-17.5t17.5-42.5zM1331 747q0-47-40-70-126-73-293-110.5t-343-37.5q-204 0-364 47-23 7-38.5 25.5t-15.5 48.5q0 31 20.5 52t51.5 21q11 0 40-8 133-37 307-37 159 0 309.5 34t253.5 95q21 12 40 12 29 0 50.5-20.5t21.5-51.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"square-o\":{width:1408,height:1792,paths:[{d:\"M1120 256h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({square:{width:1536,height:1792,paths:[{d:\"M1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"stack-exchange\":{width:1280,height:1792,paths:[{d:\"M1259 1253v66q0 85-57.5 144.5t-138.5 59.5h-57l-260 269v-269h-529q-81 0-138.5-59.5t-57.5-144.5v-66h1238zM1259 927v255h-1238v-255h1238zM1259 599v255h-1238v-255h1238zM1259 459v67h-1238v-67q0-84 57.5-143.5t138.5-59.5h846q81 0 138.5 59.5t57.5 143.5z\"}]}}),h.register({\"stack-overflow\":{width:1536,height:1792,paths:[{d:\"M1289 1632h-1118v-480h-160v640h1438v-640h-160v480zM347 1108l33-157 783 165-33 156zM450 734l67-146 725 339-67 145zM651 378l102-123 614 513-102 123zM1048 0l477 641-128 96-477-641zM330 1471v-159h800v159h-800z\"}]}}),h.register({\"star-half-empty\":{width:1664,height:1792,paths:[{d:\"M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z\"}]}}),h.register({\"star-half-full\":{width:1664,height:1792,paths:[{d:\"M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z\"}]}}),h.register({\"star-half-o\":{width:1664,height:1792,paths:[{d:\"M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z\"}]}}),h.register({\"star-half\":{width:896,height:1792,paths:[{d:\"M832 32v1339l-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41z\"}]}}),h.register({\"star-o\":{width:1664,height:1792,paths:[{d:\"M1137 1004l306-297-422-62-189-382-189 382-422 62 306 297-73 421 378-199 377 199zM1664 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 50-41 50-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"}]}}),h.register({star:{width:1664,height:1792,paths:[{d:\"M1664 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"}]}}),h.register({\"steam-square\":{width:1536,height:1792,paths:[{d:\"M1242 647q0-80-57-136.5t-137-56.5-136.5 57-56.5 136q0 80 56.5 136.5t136.5 56.5 137-56.5 57-136.5zM632 1235q0 83-58 140.5t-140 57.5q-56 0-103-29t-72-77q52 20 98 40 60 24 120-1.5t85-86.5q24-60-1.5-120t-86.5-84l-82-33q22-5 42-5 82 0 140 57.5t58 140.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-153l172 69q20 92 93.5 152t168.5 60q104 0 181-70t87-173l345-252q150 0 255.5-105.5t105.5-254.5q0-150-105.5-255.5t-255.5-105.5q-148 0-253 104.5t-107 252.5l-225 322q-9-1-28-1-75 0-137 37l-297-119v-468q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5zM1289 649q0 100-71 170.5t-171 70.5-170.5-70.5-70.5-170.5 70.5-171 170.5-71q101 0 171.5 70.5t70.5 171.5z\"}]}}),h.register({steam:{width:1792,height:1792,paths:[{d:\"M1582 582q0 101-71.5 172.5t-172.5 71.5-172.5-71.5-71.5-172.5 71.5-172.5 172.5-71.5 172.5 71.5 71.5 172.5zM812 1324q0-104-73-177t-177-73q-27 0-54 6l104 42q77 31 109.5 106.5t1.5 151.5q-31 77-107 109t-152 1q-21-8-62-24.5t-61-24.5q32 60 91 96.5t130 36.5q104 0 177-73t73-177zM1642 583q0-126-89.5-215.5t-215.5-89.5q-127 0-216.5 89.5t-89.5 215.5q0 127 89.5 216t216.5 89q126 0 215.5-89t89.5-216zM1792 583q0 189-133.5 322t-321.5 133l-437 319q-12 129-109 218t-229 89q-121 0-214-76t-118-192l-230-92v-429l389 157q79-48 173-48 13 0 35 2l284-407q2-187 135.5-319t320.5-132q188 0 321.5 133.5t133.5 321.5z\"}]}}),h.register({\"step-backward\":{width:1024,height:1792,paths:[{d:\"M979 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v678q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h128q26 0 45 19t19 45v678q4-10 13-19z\"}]}}),h.register({\"step-forward\":{width:1024,height:1792,paths:[{\nd:\"M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-678q0-26 19-45t45-19h128q26 0 45 19t19 45v1408q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-678q-4 10-13 19z\"}]}}),h.register({stethoscope:{width:1408,height:1792,paths:[{d:\"M1280 704q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 704q0 62-35.5 111t-92.5 70v395q0 159-131.5 271.5t-316.5 112.5-316.5-112.5-131.5-271.5v-132q-164-20-274-128t-110-252v-512q0-26 19-45t45-19q6 0 16 2 17-30 47-48t65-18q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5q-33 0-64-18v402q0 106 94 181t226 75 226-75 94-181v-402q-31 18-64 18-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5q35 0 65 18t47 48q10-2 16-2 26 0 45 19t19 45v512q0 144-110 252t-274 128v132q0 106 94 181t226 75 226-75 94-181v-395q-57-21-92.5-70t-35.5-111q0-80 56-136t136-56 136 56 56 136z\"}]}}),h.register({\"sticky-note-o\":{width:1536,height:1792,paths:[{d:\"M1400 1280h-248v248q29-10 41-22l185-185q12-12 22-41zM1120 1152h288v-896h-1280v1280h896v-288q0-40 28-68t68-28zM1536 224v1024q0 40-20 88t-48 76l-184 184q-28 28-76 48t-88 20h-1024q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1344q40 0 68 28t28 68z\"}]}}),h.register({\"sticky-note\":{width:1536,height:1792,paths:[{d:\"M1024 1248v416h-928q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1344q40 0 68 28t28 68v928h-416q-40 0-68 28t-28 68zM1152 1280h381q-15 82-65 132l-184 184q-50 50-132 65v-381z\"}]}}),h.register({\"stop-circle-o\":{width:1536,height:1792,paths:[{d:\"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM768 1440q148 0 273-73t198-198 73-273-73-273-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73zM480 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h576q14 0 23 9t9 23v576q0 14-9 23t-23 9h-576z\"}]}}),h.register({\"stop-circle\":{width:1536,height:1792,paths:[{d:\"M1088 1184v-576q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v576q0 14 9 23t23 9h576q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({stop:{width:1536,height:1792,paths:[{d:\"M1536 192v1408q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({\"street-view\":{width:1536,height:1792,paths:[{d:\"M1408 1536q0 63-61.5 113.5t-164 81-225 46-253.5 15.5-253.5-15.5-225-46-164-81-61.5-113.5q0-49 33-88.5t91-66.5 118-44.5 131-29.5q26-5 48 10.5t26 41.5q5 26-10.5 48t-41.5 26q-58 10-106 23.5t-76.5 25.5-48.5 23.5-27.5 19.5-8.5 12q3 11 27 26.5t73 33 114 32.5 160.5 25 201.5 10 201.5-10 160.5-25 114-33 73-33.5 27-27.5q-1-4-8.5-11t-27.5-19-48.5-23.5-76.5-25-106-23.5q-26-4-41.5-26t-10.5-48q4-26 26-41.5t48-10.5q71 12 131 29.5t118 44.5 91 66.5 33 88.5zM1024 640v384q0 26-19 45t-45 19h-64v384q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-384h-64q-26 0-45-19t-19-45v-384q0-53 37.5-90.5t90.5-37.5h384q53 0 90.5 37.5t37.5 90.5zM928 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z\"}]}}),h.register({strikethrough:{width:1792,height:1792,paths:[{d:\"M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zM483 832q-28-35-51-80-48-98-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zM990 1088h411q7 39 7 92 0 111-41 212-23 56-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z\"}]}}),h.register({\"stumbleupon-circle\":{width:1536,height:1792,paths:[{d:\"M866 839l90-27v-62q0-79-58-135t-138-56-138 55.5-58 134.5v283q0 20-14 33.5t-33 13.5-32.5-13.5-13.5-33.5v-120h-151v122q0 82 57.5 139t139.5 57q81 0 138.5-56.5t57.5-136.5v-280q0-19 13.5-33t33.5-14q19 0 32.5 14t13.5 33v54zM1199 1034v-122h-150v126q0 20-13.5 33.5t-33.5 13.5q-19 0-32.5-14t-13.5-33v-123l-90 26-60-28v123q0 80 58 137t139 57 138.5-57 57.5-139zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({stumbleupon:{width:1920,height:1792,paths:[{d:\"M1062 712v-118q0-42-30-72t-72-30-72 30-30 72v612q0 175-126 299t-303 124q-178 0-303.5-125.5t-125.5-303.5v-266h328v262q0 43 30 72.5t72 29.5 72-29.5 30-72.5v-620q0-171 126.5-292t301.5-121q176 0 302 122t126 294v136l-195 58zM1592 934h328v266q0 178-125.5 303.5t-303.5 125.5q-177 0-303-124.5t-126-300.5v-268l131 61 195-58v270q0 42 30 71.5t72 29.5 72-29.5 30-71.5v-275z\"}]}}),h.register({subscript:{width:1536,height:1792,paths:[{d:\"M897 1369v167h-248l-159-252-24-42q-8-9-11-21h-3q-1 3-2.5 6.5t-3.5 8-3 6.5q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zM1536 1586v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z\"}]}}),h.register({subway:{width:1536,height:1792,paths:[{d:\"M1088 0q185 0 316.5 93.5t131.5 226.5v896q0 130-125.5 222t-305.5 97l213 202q16 15 8 35t-30 20h-1056q-22 0-30-20t8-35l213-202q-180-5-305.5-97t-125.5-222v-896q0-133 131.5-226.5t316.5-93.5h640zM288 1312q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM704 768v-512h-544v512h544zM1248 1312q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM1408 768v-512h-576v512h576z\"}]}}),h.register({suitcase:{width:1792,height:1792,paths:[{d:\"M640 384h512v-128h-512v128zM288 384v1280h-64q-92 0-158-66t-66-158v-832q0-92 66-158t158-66h64zM1408 384v1280h-1024v-1280h128v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h128zM1792 608v832q0 92-66 158t-158 66h-64v-1280h64q92 0 158 66t66 158z\"}]}}),h.register({\"sun-o\":{width:1792,height:1792,paths:[{d:\"M1472 896q0-117-45.5-223.5t-123-184-184-123-223.5-45.5-223.5 45.5-184 123-123 184-45.5 223.5 45.5 223.5 123 184 184 123 223.5 45.5 223.5-45.5 184-123 123-184 45.5-223.5zM1748 1173q-4 15-20 20l-292 96v306q0 16-13 26-15 10-29 4l-292-94-180 248q-10 13-26 13t-26-13l-180-248-292 94q-14 6-29-4-13-10-13-26v-306l-292-96q-16-5-20-20-5-17 4-29l180-248-180-248q-9-13-4-29 4-15 20-20l292-96v-306q0-16 13-26 15-10 29-4l292 94 180-248q9-12 26-12t26 12l180 248 292-94q14-6 29 4 13 10 13 26v306l292 96q16 5 20 20 5 16-4 29l-180 248 180 248q9 12 4 29z\"}]}}),h.register({superpowers:{width:1792,height:1792,paths:[{d:\"M1473 929q7-118-33-226.5t-113-189-177-131-221-57.5q-116-7-225.5 32t-192 110.5-135 175-59.5 220.5q-7 118 33 226.5t113 189 177.5 131 221.5 57.5q155 9 293-59t224-195.5 94-283.5zM1792 0l-349 348q120 117 180.5 272t50.5 321q-11 183-102 339t-241 255.5-332 124.5l-999 132 347-347q-120-116-180.5-271.5t-50.5-321.5q11-184 102-340t241.5-255.5 332.5-124.5q167-22 500-66t500-66z\"}]}}),h.register({superscript:{width:1536,height:1792,paths:[{d:\"M897 1369v167h-248l-159-252-24-42q-8-9-11-21h-3q-1 3-2.5 6.5t-3.5 8-3 6.5q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zM1534 690v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z\"}]}}),h.register({support:{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z\"}]}}),h.register({table:{width:1664,height:1792,paths:[{d:\"M512 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM512 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM512 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1664 288v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z\"}]}}),h.register({tablet:{width:1152,height:1792,paths:[{d:\"M640 1408q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1024 1248v-960q0-13-9.5-22.5t-22.5-9.5h-832q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h832q13 0 22.5-9.5t9.5-22.5zM1152 288v1088q0 66-47 113t-113 47h-832q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h832q66 0 113 47t47 113z\"}]}}),h.register({tachometer:{width:1792,height:1792,paths:[{d:\"M384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM576 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1004 1185l101-382q6-26-7.5-48.5t-38.5-29.5-48 6.5-30 39.5l-101 382q-60 5-107 43.5t-63 98.5q-20 77 20 146t117 89 146-20 89-117q16-60-6-117t-72-91zM1664 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1472 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 1152q0 261-141 483-19 29-54 29h-1402q-35 0-54-29-141-221-141-483 0-182 71-348t191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({tag:{width:1536,height:1792,paths:[{d:\"M448 448q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1515 1024q0 53-37 90l-491 492q-39 37-91 37-53 0-90-37l-715-716q-38-37-64.5-101t-26.5-117v-416q0-52 38-90t90-38h416q53 0 117 26.5t102 64.5l715 714q37 39 37 91z\"}]}}),h.register({tags:{width:1920,height:1792,paths:[{d:\"M448 448q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1515 1024q0 53-37 90l-491 492q-39 37-91 37-53 0-90-37l-715-716q-38-37-64.5-101t-26.5-117v-416q0-52 38-90t90-38h416q53 0 117 26.5t102 64.5l715 714q37 39 37 91zM1899 1024q0 53-37 90l-491 492q-39 37-91 37-36 0-59-14t-53-45l470-470q37-37 37-90 0-52-37-91l-715-714q-38-38-102-64.5t-117-26.5h224q53 0 117 26.5t102 64.5l715 714q37 39 37 91z\"}]}}),h.register({tasks:{width:1792,height:1792,paths:[{d:\"M1024 1408h640v-128h-640v128zM640 896h1024v-128h-1024v128zM1280 384h384v-128h-384v128zM1792 1216v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 704v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 192v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45z\"}]}}),h.register({taxi:{width:2048,height:1792,paths:[{d:\"M1824 896q93 0 158.5 65.5t65.5 158.5v384q0 14-9 23t-23 9h-96v64q0 80-56 136t-136 56-136-56-56-136v-64h-1024v64q0 80-56 136t-136 56-136-56-56-136v-64h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h128v-224q0-14 9-23t23-9h448q14 0 23 9t9 23v224h128q98 0 179 63.5t104 157.5l105 419h28zM320 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM516 896h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1728 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47z\"}]}}),h.register({telegram:{width:1792,height:1792,paths:[{d:\"M1189 1307l147-693q9-44-10.5-63t-51.5-7l-864 333q-29 11-39.5 25t-2.5 26.5 32 19.5l221 69 513-323q21-14 32-6 7 5-4 15l-415 375v0 0l-16 228q23 0 45-22l108-104 224 165q64 36 81-38zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({television:{width:2048,height:1792,paths:[{d:\"M1792 1248v-960q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 288v960q0 66-47 113t-113 47h-736v128h352q14 0 23 9t9 23v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-128h-736q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({\"tencent-weibo\":{width:1280,height:1792,paths:[{d:\"M842 572q0 80-57 136.5t-136 56.5q-60 0-111-35-62 67-115 146-247 371-202 859 1 22-12.5 38.5t-34.5 18.5h-5q-20 0-35-13.5t-17-33.5q-14-126-3.5-247.5t29.5-217 54-186 69-155.5 74-125q61-90 132-165-16-35-16-77 0-80 56.5-136.5t136.5-56.5 136.5 56.5 56.5 136.5zM1223 583q0 158-78 292t-212.5 212-292.5 78q-64 0-131-14-21-5-32.5-23.5t-6.5-39.5q5-20 23-31.5t39-7.5q51 13 108 13 97 0 186-38t153-102 102-153 38-186-38-186-102-153-153-102-186-38-186 38-153 102-102 153-38 186q0 114 52 218 10 20 3.5 40t-25.5 30-39.5 3-30.5-26q-64-123-64-265 0-119 46.5-227t124.5-186 186-124 226-46q158 0 292.5 78t212.5 212.5 78 292.5z\"}]}}),h.register({terminal:{width:1664,height:1792,paths:[{d:\"M585 983l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23zM1664 1440v64q0 14-9 23t-23 9h-960q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h960q14 0 23 9t9 23z\"}]}}),h.register({\"text-height\":{width:1792,height:1792,paths:[{d:\"M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zM81 129l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5 0.5t107.5 0.5h293q6 0 21 0.5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 0.5t14 0.5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-0.5-16.5 0.5q-17 0-66.5-0.5t-74.5-0.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 0.5-15.5t0.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z\"}]}}),h.register({\"text-width\":{width:1536,height:1792,paths:[{d:\"M81 129l54 27q12 5 211 5 44 0 132-2t132-2q70 0 246.5-1t304.5-0.5 247 4.5q33 1 56-31l42-1q4 0 14 0.5t14 0.5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-47.5t-15-73.5-7-36q-10-13-27-19-5-2-66-2-30 0-93-1t-103-1-94 2-96 7q-9 81-8 136l1 152v-52q0 55 1 154t1.5 180 0.5 153q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q7-16 11.5-74t6-145.5 1.5-155-0.5-153.5-0.5-89q0-7-2.5-21.5t-2.5-22.5q0-7 0.5-44t1-73 0-76.5-3-67.5-6.5-32q-11-12-162-12-41 0-163 13.5t-138 24.5q-19 12-34 71.5t-31.5 111.5-42.5 54q-42-26-56-44v-383zM1310 1411q12 0 42 19.5t57.5 41.5 59.5 49 36 30q26 21 26 49t-26 49q-4 3-36 30t-59.5 49-57.5 41.5-42 19.5q-13 0-20.5-10.5t-10-28.5-2.5-33.5 1.5-33 1.5-19.5h-1024q0 2 1.5 19.5t1.5 33-2.5 33.5-10 28.5-20.5 10.5q-12 0-42-19.5t-57.5-41.5-59.5-49-36-30q-26-21-26-49t26-49q4-3 36-30t59.5-49 57.5-41.5 42-19.5q13 0 20.5 10.5t10 28.5 2.5 33.5-1.5 33-1.5 19.5h1024q0-2-1.5-19.5t-1.5-33 2.5-33.5 10-28.5 20.5-10.5z\"}]}}),h.register({\"th-large\":{width:1664,height:1792,paths:[{d:\"M768 1024v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM768 256v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM1664 1024v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM1664 256v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90z\"}]}}),h.register({\"th-list\":{width:1792,height:1792,paths:[{d:\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 1248v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zM512 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 736v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zM1792 224v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z\"}]}}),h.register({th:{width:1792,height:1792,paths:[{d:\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z\"}]}}),h.register({themeisle:{width:1792,height:1792,paths:[{d:\"M852 309q0 29-17 52.5t-45 23.5-45-23.5-17-52.5 17-52.5 45-23.5 45 23.5 17 52.5zM688 1685v-114q0-30-20.5-51.5t-50.5-21.5-50 21.5-20 51.5v114q0 30 20.5 52t49.5 22q30 0 50.5-22t20.5-52zM860 1685v-114q0-30-20-51.5t-50-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22q29 0 49.5-22t20.5-52zM1034 1685v-114q0-30-20.5-51.5t-50.5-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22 50.5-22 20.5-52zM1208 1685v-114q0-30-20.5-51.5t-50.5-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22 50.5-22 20.5-52zM1476 1001q-84 160-232 259.5t-323 99.5q-123 0-229.5-51.5t-178.5-137-113-197.5-41-232q0-88 21-174-104 175-104 390 0 162 65 312t185 251q30-57 91-57 56 0 86 50 32-50 87-50 56 0 86 50 32-50 87-50t87 50q30-50 86-50 28 0 52.5 15.5t37.5 40.5q112-94 177-231.5t73-287.5zM1326 972q0-75-72-75-17 0-47 6-95 19-149 19-226 0-226-243 0-86 30-204-83 127-83 275 0 150 89 260.5t235 110.5q111 0 210-70 13-48 13-79zM884 313q0-50-32-89.5t-81-39.5-81 39.5-32 89.5q0 51 31.5 90.5t81.5 39.5 81.5-39.5 31.5-90.5zM1513 652q0-96-37.5-179t-113-137-173.5-54q-77 0-149 35t-127 94q-48 159-48 268 0 104 45.5 157t147.5 53q53 0 142-19 36-6 53-6 51 0 77.5 28t26.5 80q0 26-4 46 75-68 117.5-165.5t42.5-200.5zM1792 869q0 111-33.5 249.5t-93.5 204.5q-58 64-195 142.5t-228 104.5l-4 1v114q0 43-29.5 75t-72.5 32q-56 0-86-50-32 50-87 50t-87-50q-30 50-86 50-55 0-87-50-30 50-86 50-47 0-75-33.5t-28-81.5q-90 68-198 68-118 0-211-80 54-1 106-20-113-31-182-127 32 7 71 7 89 0 164-46-192-192-240-306-24-56-24-160 0-57 9-125.5t31.5-146.5 55-141 86.5-105 120-42q59 0 81 52 19-29 42-54 2-3 12-13t13-16q10-15 23-38t25-42 28-39q87-111 211.5-177t260.5-66q35 0 62 4 59-64 146-64 83 0 140 57 5 5 5 12 0 5-6 13.5t-12.5 16-16 17l-10.5 10.5q17 6 36 18t19 24q0 6-16 25 157 138 197 378 25-30 60-30 45 0 100 49 90 80 90 279z\"}]}}),h.register({\"thermometer-0\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-79 56-135.5t136-56.5 136 56.5 56 135.5zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-1\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-139h128v139q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-2\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-395h128v395q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-3\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-651h128v651q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-4\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-empty\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-79 56-135.5t136-56.5 136 56.5 56 135.5zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-full\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-half\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-395h128v395q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-quarter\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-139h128v139q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thermometer-three-quarters\":{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-651h128v651q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({thermometer:{width:1024,height:1792,paths:[{d:\"M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z\"}]}}),h.register({\"thumb-tack\":{width:1152,height:1792,paths:[{d:\"M480 864v-448q0-14-9-23t-23-9-23 9-9 23v448q0 14 9 23t23 9 23-9 9-23zM1152 1216q0 26-19 45t-45 19h-429l-51 483q-2 12-10.5 20.5t-20.5 8.5h-1q-27 0-32-27l-76-485h-404q-26 0-45-19t-19-45q0-123 78.5-221.5t177.5-98.5v-512q-52 0-90-38t-38-90 38-90 90-38h640q52 0 90 38t38 90-38 90-90 38v512q99 0 177.5 98.5t78.5 221.5z\"}]}}),h.register({\"thumbs-down\":{width:1664,height:1792,paths:[{d:\"M256 576q0 26-19 45t-45 19q-27 0-45.5-19t-18.5-45q0-27 18.5-45.5t45.5-18.5q26 0 45 18.5t19 45.5zM416 1088v-640q0-26-19-45t-45-19h-288q-26 0-45 19t-19 45v640q0 26 19 45t45 19h288q26 0 45-19t19-45zM1545 939q55 61 55 149-1 78-57.5 135t-134.5 57h-277q4 14 8 24t11 22 10 18q18 37 27 57t19 58.5 10 76.5q0 24-0.5 39t-5 45-12 50-24 45-40 40.5-60 26-82.5 10.5q-26 0-45-19-20-20-34-50t-19.5-52-12.5-61q-9-42-13.5-60.5t-17.5-48.5-31-48q-33-33-101-120-49-64-101-121t-76-59q-25-2-43-20.5t-18-43.5v-641q0-26 19-44.5t45-19.5q35-1 158-44 77-26 120.5-39.5t121.5-29 144-15.5h17 76 36q133 2 197 78 58 69 49 181 39 37 54 94 17 61 0 117 46 61 43 137 0 32-15 76z\"}]}}),h.register({\"thumbs-o-down\":{width:1536,height:1792,paths:[{d:\"M256 448q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 1024q0-35-21.5-81t-53.5-47q15-17 25-47.5t10-55.5q0-69-53-119 18-31 18-69 0-37-17.5-73.5t-47.5-52.5q5-30 5-56 0-85-49-126t-136-41h-128q-131 0-342 73-5 2-29 10.5t-35.5 12.5-35 11.5-38 11-33 6.5-31.5 3h-32v640h32q16 0 35.5 9t40 27 38.5 35.5 40 44 34.5 42.5 31.5 41 23 30q55 68 77 91 41 43 59.5 109.5t30.5 125.5 38 85q96 0 128-47t32-145q0-59-48-160.5t-48-159.5h352q50 0 89-38.5t39-89.5zM1536 1025q0 103-76 179t-180 76h-176q48 99 48 192 0 118-35 186-35 69-102 101.5t-151 32.5q-51 0-90-37-34-33-54-82t-25.5-90.5-17.5-84.5-31-64q-48-50-107-127-101-131-137-155h-274q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h288q22 0 138-40 128-44 223-66t200-22h112q140 0 226.5 79t85.5 216v5q60 77 60 178 0 22-3 43 38 67 38 144 0 36-9 69 49 73 49 163z\"}]}}),h.register({\"thumbs-o-up\":{width:1536,height:1792,paths:[{d:\"M256 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 768q0-51-39-89.5t-89-38.5h-352q0-58 48-159.5t48-160.5q0-98-32-145t-128-47q-26 26-38 85t-30.5 125.5-59.5 109.5q-22 23-77 91-4 5-23 30t-31.5 41-34.5 42.5-40 44-38.5 35.5-40 27-35.5 9h-32v640h32q13 0 31.5 3t33 6.5 38 11 35 11.5 35.5 12.5 29 10.5q211 73 342 73h121q192 0 192-167 0-26-5-56 30-16 47.5-52.5t17.5-73.5-18-69q53-50 53-119 0-25-10-55.5t-25-47.5q32-1 53.5-47t21.5-81zM1536 767q0 89-49 163 9 33 9 69 0 77-38 144 3 21 3 43 0 101-60 178 1 139-85 219.5t-227 80.5h-36-93q-96 0-189.5-22.5t-216.5-65.5q-116-40-138-40h-288q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h274q36-24 137-155 58-75 107-128 24-25 35.5-85.5t30.5-126.5 62-108q39-37 90-37 84 0 151 32.5t102 101.5 35 186q0 93-48 192h176q104 0 180 76t76 179z\"}]}}),h.register({\"thumbs-up\":{width:1664,height:1792,paths:[{d:\"M256 1344q0-26-19-45t-45-19q-27 0-45.5 19t-18.5 45q0 27 18.5 45.5t45.5 18.5q26 0 45-18.5t19-45.5zM416 832v640q0 26-19 45t-45 19h-288q-26 0-45-19t-19-45v-640q0-26 19-45t45-19h288q26 0 45 19t19 45zM1600 832q0 86-55 149 15 44 15 76 3 76-43 137 17 56 0 117-15 57-54 94 9 112-49 181-64 76-197 78h-36-76-17q-66 0-144-15.5t-121.5-29-120.5-39.5q-123-43-158-44-26-1-45-19.5t-19-44.5v-641q0-25 18-43.5t43-20.5q24-2 76-59t101-121q68-87 101-120 18-18 31-48t17.5-48.5 13.5-60.5q7-39 12.5-61t19.5-52 34-50q19-19 45-19 46 0 82.5 10.5t60 26 40 40.5 24 45 12 50 5 45 0.5 39q0 38-9.5 76t-19 60-27.5 56q-3 6-10 18t-11 22-8 24h277q78 0 135 57t57 135z\"}]}}),h.register({ticket:{width:1792,height:1792,paths:[{d:\"M1024 452l316 316-572 572-316-316zM813 1431l618-618q19-19 19-45t-19-45l-362-362q-18-18-45-18t-45 18l-618 618q-19 19-19 45t19 45l362 362q18 18 45 18t45-18zM1702 794l-907 908q-37 37-90.5 37t-90.5-37l-126-126q56-56 56-136t-56-136-136-56-136 56l-125-126q-37-37-37-90.5t37-90.5l907-906q37-37 90.5-37t90.5 37l125 125q-56 56-56 136t56 136 136 56 136-56l126 125q37 37 37 90.5t-37 90.5z\"}]}}),h.register({\"times-circle-o\":{width:1536,height:1792,paths:[{d:\"M1097 1079l-146 146q-10 10-23 10t-23-10l-137-137-137 137q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l137-137-137-137q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l137 137 137-137q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-137 137 137 137q10 10 10 23t-10 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"times-circle\":{width:1536,height:1792,paths:[{d:\"M1149 1122q0-26-19-45l-181-181 181-181q19-19 19-45 0-27-19-46l-90-90q-19-19-46-19-26 0-45 19l-181 181-181-181q-19-19-45-19-27 0-46 19l-90 90q-19 19-19 46 0 26 19 45l181 181-181 181q-19 19-19 45 0 27 19 46l90 90q19 19 46 19 26 0 45-19l181-181 181 181q19 19 45 19 27 0 46-19l90-90q19-19 19-46zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"}]}}),h.register({\"times-rectangle-o\":{width:1792,height:1792,paths:[{d:\"M1257 1111l-146 146q-10 10-23 10t-23-10l-169-169-169 169q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l169-169-169-169q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l169 169 169-169q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-169 169 169 169q10 10 10 23t-10 23zM256 1408h1280v-1024h-1280v1024zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"times-rectangle\":{width:1792,height:1792,paths:[{d:\"M1175 1321l146-146q10-10 10-23t-10-23l-233-233 233-233q10-10 10-23t-10-23l-146-146q-10-10-23-10t-23 10l-233 233-233-233q-10-10-23-10t-23 10l-146 146q-10 10-10 23t10 23l233 233-233 233q-10 10-10 23t10 23l146 146q10 10 23 10t23-10l233-233 233 233q10 10 23 10t23-10zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({times:{width:1408,height:1792,paths:[{\nd:\"M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"}]}}),h.register({tint:{width:1024,height:1792,paths:[{d:\"M512 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1024 1024q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z\"}]}}),h.register({\"toggle-down\":{width:1536,height:1792,paths:[{d:\"M1145 675q18 35-5 66l-320 448q-19 27-52 27t-52-27l-320-448q-23-31-5-66 17-35 57-35h640q40 0 57 35zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"toggle-left\":{width:1536,height:1792,paths:[{d:\"M1024 576v640q0 26-19 45t-45 19q-20 0-37-12l-448-320q-27-19-27-52t27-52l448-320q17-12 37-12 26 0 45 19t19 45zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"toggle-off\":{width:2048,height:1792,paths:[{d:\"M1152 896q0-104-40.5-198.5t-109.5-163.5-163.5-109.5-198.5-40.5-198.5 40.5-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5 198.5-40.5 163.5-109.5 109.5-163.5 40.5-198.5zM1920 896q0-104-40.5-198.5t-109.5-163.5-163.5-109.5-198.5-40.5h-386q119 90 188.5 224t69.5 288-69.5 288-188.5 224h386q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5zM2048 896q0 130-51 248.5t-136.5 204-204 136.5-248.5 51h-768q-130 0-248.5-51t-204-136.5-136.5-204-51-248.5 51-248.5 136.5-204 204-136.5 248.5-51h768q130 0 248.5 51t204 136.5 136.5 204 51 248.5z\"}]}}),h.register({\"toggle-on\":{width:2048,height:1792,paths:[{d:\"M0 896q0-130 51-248.5t136.5-204 204-136.5 248.5-51h768q130 0 248.5 51t204 136.5 136.5 204 51 248.5-51 248.5-136.5 204-204 136.5-248.5 51h-768q-130 0-248.5-51t-204-136.5-136.5-204-51-248.5zM1408 1408q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5-198.5 40.5-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5z\"}]}}),h.register({\"toggle-right\":{width:1536,height:1792,paths:[{d:\"M1088 896q0 33-27 52l-448 320q-31 23-66 5-35-17-35-57v-640q0-40 35-57 35-18 66 5l448 320q27 19 27 52zM1280 1376v-960q0-14-9-23t-23-9h-960q-14 0-23 9t-9 23v960q0 14 9 23t23 9h960q14 0 23-9t9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"toggle-up\":{width:1536,height:1792,paths:[{d:\"M1145 1117q-17 35-57 35h-640q-40 0-57-35-18-35 5-66l320-448q19-27 52-27t52 27l320 448q23 31 5 66zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({trademark:{width:1973,height:1792,paths:[{d:\"M857 544v117q0 13-9.5 22t-22.5 9h-298v812q0 13-9 22.5t-22 9.5h-135q-13 0-22.5-9t-9.5-23v-812h-297q-13 0-22.5-9t-9.5-22v-117q0-14 9-23t23-9h793q13 0 22.5 9.5t9.5 22.5zM1895 541l77 961q1 13-8 24-10 10-23 10h-134q-12 0-21-8.5t-10-20.5l-46-588-189 425q-8 19-29 19h-120q-20 0-29-19l-188-427-45 590q-1 12-10 20.5t-21 8.5h-135q-13 0-23-10-9-10-9-24l78-961q1-12 10-20.5t21-8.5h142q20 0 29 19l220 520q10 24 20 51 3-7 9.5-24.5t10.5-26.5l221-520q9-19 29-19h141q13 0 22 8.5t10 20.5z\"}]}}),h.register({train:{width:1536,height:1792,paths:[{d:\"M1088 0q185 0 316.5 93.5t131.5 226.5v896q0 130-125.5 222t-305.5 97l213 202q16 15 8 35t-30 20h-1056q-22 0-30-20t8-35l213-202q-180-5-305.5-97t-125.5-222v-896q0-133 131.5-226.5t316.5-93.5h640zM768 1344q80 0 136-56t56-136-56-136-136-56-136 56-56 136 56 136 136 56zM1344 768v-512h-1152v512h1152z\"}]}}),h.register({\"transgender-alt\":{width:1792,height:1792,paths:[{d:\"M1280 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-217-24-364.5-187.5t-147.5-384.5q0-201 126-359l-52-53-101 111q-9 10-22 10.5t-23-7.5l-48-44q-10-8-10.5-21.5t8.5-23.5l105-115-111-112v134q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-288q0-26 19-45t45-19h288q14 0 23 9t9 23v64q0 14-9 23t-23 9h-133l106 107 86-94q9-10 22-10.5t23 7.5l48 44q10 8 10.5 21.5t-8.5 23.5l-90 99 57 56q158-126 359-126t359 126l255-254h-134q-14 0-23-9t-9-23v-64zM832 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({transgender:{width:1536,height:1792,paths:[{d:\"M1024 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-149-16-270.5-103t-186.5-223.5-53-291.5q16-204 160-353.5t347-172.5q118-14 228 19t198 103l255-254h-134q-14 0-23-9t-9-23v-64zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z\"}]}}),h.register({\"trash-o\":{width:1408,height:1792,paths:[{d:\"M512 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM768 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM1024 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM1152 1460v-948h-896v948q0 22 7 40.5t14.5 27 10.5 8.5h832q3 0 10.5-8.5t14.5-27 7-40.5zM480 384h448l-48-117q-7-9-17-11h-317q-10 2-17 11zM1408 416v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z\"}]}}),h.register({trash:{width:1408,height:1792,paths:[{d:\"M512 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM768 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM1024 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM480 384h448l-48-117q-7-9-17-11h-317q-10 2-17 11zM1408 416v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z\"}]}}),h.register({tree:{width:1536,height:1792,paths:[{d:\"M1504 1472q0 26-19 45t-45 19h-462q1 17 6 87.5t5 108.5q0 25-18 42.5t-43 17.5h-320q-25 0-43-17.5t-18-42.5q0-38 5-108.5t6-87.5h-462q-26 0-45-19t-19-45 19-45l402-403h-229q-26 0-45-19t-19-45 19-45l402-403h-197q-26 0-45-19t-19-45 19-45l384-384q19-19 45-19t45 19l384 384q19 19 19 45t-19 45-45 19h-197l402 403q19 19 19 45t-19 45-45 19h-229l402 403q19 19 19 45z\"}]}}),h.register({trello:{width:1536,height:1792,paths:[{d:\"M704 1344v-1024q0-14-9-23t-23-9h-480q-14 0-23 9t-9 23v1024q0 14 9 23t23 9h480q14 0 23-9t9-23zM1376 960v-640q0-14-9-23t-23-9h-480q-14 0-23 9t-9 23v640q0 14 9 23t23 9h480q14 0 23-9t9-23zM1536 192v1408q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"}]}}),h.register({tripadvisor:{width:2304,height:1792,paths:[{d:\"M651 997q0 39-27.5 66.5t-65.5 27.5q-39 0-66.5-27.5t-27.5-66.5q0-38 27.5-65.5t66.5-27.5q38 0 65.5 27.5t27.5 65.5zM1805 996q0 39-27.5 66.5t-66.5 27.5-66.5-27.5-27.5-66.5 27.5-66 66.5-27 66.5 27 27.5 66zM765 997q0-79-56.5-136t-136.5-57-136.5 56.5-56.5 136.5 56.5 136.5 136.5 56.5 136.5-56.5 56.5-136.5zM1918 996q0-80-56.5-136.5t-136.5-56.5q-79 0-136 56.5t-57 136.5 56.5 136.5 136.5 56.5 136.5-56.5 56.5-136.5zM850 997q0 116-81.5 197.5t-196.5 81.5q-116 0-197.5-82t-81.5-197 82-196.5 197-81.5 196.5 81.5 81.5 196.5zM2004 996q0 115-81.5 196.5t-197.5 81.5q-115 0-196.5-81.5t-81.5-196.5 81.5-196.5 196.5-81.5q116 0 197.5 81.5t81.5 196.5zM1040 999q0-191-135.5-326.5t-326.5-135.5q-125 0-231 62t-168 168.5-62 231.5 62 231.5 168 168.5 231 62q191 0 326.5-135.5t135.5-326.5zM1708 426q-254-111-556-111-319 0-573 110 117 0 223 45.5t182.5 122.5 122 183 45.5 223q0-115 43.5-219.5t118-180.5 177.5-123 217-50zM2187 999q0-191-135-326.5t-326-135.5-326.5 135.5-135.5 326.5 135.5 326.5 326.5 135.5 326-135.5 135-326.5zM1921 433h383q-44 51-75 114.5t-40 114.5q110 151 110 337 0 156-77 288t-209 208.5-287 76.5q-133 0-249-56t-196-155q-47 56-129 179-11-22-53.5-82.5t-74.5-97.5q-80 99-196.5 155.5t-249.5 56.5q-155 0-287-76.5t-209-208.5-77-288q0-186 110-337-9-51-40-114.5t-75-114.5h365q149-100 355-156.5t432-56.5q224 0 421 56t348 157z\"}]}}),h.register({trophy:{width:1664,height:1792,paths:[{d:\"M458 883q-74-162-74-371h-256v96q0 78 94.5 162t235.5 113zM1536 608v-96h-256q0 209-74 371 141-29 235.5-113t94.5-162zM1664 480v128q0 71-41.5 143t-112 130-173 97.5-215.5 44.5q-42 54-95 95-38 34-52.5 72.5t-14.5 89.5q0 54 30.5 91t97.5 37q75 0 133.5 45.5t58.5 114.5v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-69 58.5-114.5t133.5-45.5q67 0 97.5-37t30.5-91q0-51-14.5-89.5t-52.5-72.5q-53-41-95-95-113-5-215.5-44.5t-173-97.5-112-130-41.5-143v-128q0-40 28-68t68-28h288v-96q0-66 47-113t113-47h576q66 0 113 47t47 113v96h288q40 0 68 28t28 68z\"}]}}),h.register({truck:{width:1792,height:1792,paths:[{d:\"M640 1408q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM256 896h384v-256h-158q-13 0-22 9l-195 195q-9 9-9 22v30zM1536 1408q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM1792 320v1024q0 15-4 26.5t-13.5 18.5-16.5 11.5-23.5 6-22.5 2-25.5 0-22.5-0.5q0 106-75 181t-181 75-181-75-75-181h-384q0 106-75 181t-181 75-181-75-75-181h-64q-3 0-22.5 0.5t-25.5 0-22.5-2-23.5-6-16.5-11.5-13.5-18.5-4-26.5q0-26 19-45t45-19v-320q0-8-0.5-35t0-38 2.5-34.5 6.5-37 14-30.5 22.5-30l198-198q19-19 50.5-32t58.5-13h160v-192q0-26 19-45t45-19h1024q26 0 45 19t19 45z\"}]}}),h.register({try:{width:1152,height:1792,paths:[{d:\"M1152 832q0 191-94.5 353t-256.5 256.5-353 94.5h-160q-14 0-23-9t-9-23v-611l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-93l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-250q0-14 9-23t23-9h160q14 0 23 9t9 23v181l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v93l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v487q188-13 318-151t130-328q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({tty:{width:1792,height:1792,paths:[{d:\"M448 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM256 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM832 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM640 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM66 768q-28 0-47-19t-19-46v-129h514v129q0 27-19 46t-46 19h-383zM1216 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1024 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1600 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1408 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 520v13h-514v-10q0-104-382-102-382 1-382 102v10h-514v-13q0-17 8.5-43t34-64 65.5-75.5 110.5-76 160-67.5 224-47.5 293.5-18.5 293 18.5 224 47.5 160.5 67.5 110.5 76 65.5 75.5 34 64 8.5 43zM1792 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 574v129q0 27-19 46t-46 19h-384q-27 0-46-19t-19-46v-129h514z\"}]}}),h.register({\"tumblr-square\":{width:1536,height:1792,paths:[{d:\"M1136 1461l-62-183q-44 22-103 22-36 1-62-10.5t-38.5-31.5-17.5-40.5-5-43.5v-398h257v-194h-256v-326h-188q-8 0-9 10-5 44-17.5 87t-39 95-77 95-118.5 68v165h130v418q0 57 21.5 115t65 111 121 85.5 176.5 30.5q69-1 136.5-25t85.5-50zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({tumblr:{width:1024,height:1792,paths:[{d:\"M944 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26t-142.5-74-95-106-55.5-120-16.5-118v-544h-168v-215q72-26 129-69.5t91-90 58-102 34-99 15-88.5q1-5 4.5-8.5t7.5-3.5h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\"}]}}),h.register({\"turkish-lira\":{width:1152,height:1792,paths:[{d:\"M1152 832q0 191-94.5 353t-256.5 256.5-353 94.5h-160q-14 0-23-9t-9-23v-611l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-93l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-250q0-14 9-23t23-9h160q14 0 23 9t9 23v181l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v93l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v487q188-13 318-151t130-328q0-14 9-23t23-9h160q14 0 23 9t9 23z\"}]}}),h.register({tv:{width:2048,height:1792,paths:[{d:\"M1792 1248v-960q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 288v960q0 66-47 113t-113 47h-736v128h352q14 0 23 9t9 23v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-128h-736q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"}]}}),h.register({twitch:{width:1792,height:1792,paths:[{d:\"M896 434v434h-145v-434h145zM1294 434v434h-145v-434h145zM1294 1194l253-254v-795h-1194v1049h326v217l217-217h398zM1692 0v1013l-434 434h-326l-217 217h-217v-217h-398v-1158l109-289h1483z\"}]}}),h.register({\"twitter-square\":{width:1536,height:1792,paths:[{d:\"M1280 610q-56 25-121 34 68-40 93-117-65 38-134 51-61-66-153-66-87 0-148.5 61.5t-61.5 148.5q0 29 5 48-129-7-242-65t-192-155q-29 50-29 106 0 114 91 175-47-1-100-26v2q0 75 50 133.5t123 72.5q-29 8-51 8-13 0-39-4 21 63 74.5 104t121.5 42q-116 90-261 90-26 0-50-3 148 94 322 94 112 0 210-35.5t168-95 120.5-137 75-162 24.5-168.5q0-18-1-27 63-45 105-109zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({twitter:{width:1664,height:1792,paths:[{d:\"M1620 408q-67 98-162 167 1 14 1 42 0 130-38 259.5t-115.5 248.5-184.5 210.5-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5t-114-159.5q33 5 61 5 43 0 85-11-112-23-185.5-111.5t-73.5-205.5v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5t371.5 99.5q-8-38-8-74 0-134 94.5-228.5t228.5-94.5q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z\"}]}}),h.register({umbrella:{width:1664,height:1792,paths:[{d:\"M896 828v580q0 104-76 180t-180 76-180-76-76-180q0-26 19-45t45-19 45 19 19 45q0 50 39 89t89 39 89-39 39-89v-580q33-11 64-11t64 11zM1664 855q0 13-9.5 22.5t-22.5 9.5q-11 0-23-10-49-46-93-69t-102-23q-68 0-128 37t-103 97q-7 10-17.5 28t-14.5 24q-11 17-28 17-18 0-29-17-4-6-14.5-24t-17.5-28q-43-60-102.5-97t-127.5-37-127.5 37-102.5 97q-7 10-17.5 28t-14.5 24q-11 17-29 17-17 0-28-17-4-6-14.5-24t-17.5-28q-43-60-103-97t-128-37q-58 0-102 23t-93 69q-12 10-23 10-13 0-22.5-9.5t-9.5-22.5q0-5 1-7 45-183 172.5-319.5t298-204.5 360.5-68q140 0 274.5 40t246.5 113.5 194.5 187 115.5 251.5q1 2 1 7zM896 128v98q-42-2-64-2t-64 2v-98q0-26 19-45t45-19 45 19 19 45z\"}]}}),h.register({underline:{width:1536,height:1792,paths:[{d:\"M48 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 0.5 32.5t0.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zM1536 1632v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z\"}]}}),h.register({undo:{width:1536,height:1792,paths:[{d:\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"}]}}),h.register({\"universal-access\":{width:1792,height:1792,paths:[{d:\"M1374 657q-6-26-28.5-39.5t-48.5-7.5q-261 62-401 62t-401-62q-26-6-48.5 7.5t-28.5 39.5 7.5 48.5 39.5 28.5q194 46 303 58-2 158-15.5 269t-26.5 155.5-41 115.5l-9 21q-10 25 1 49t36 34q9 4 23 4 44 0 60-41l8-20q54-139 71-259h42q17 120 71 259l8 20q16 41 60 41 14 0 23-4 25-10 36-34t1-49l-9-21q-28-71-41-115.5t-26.5-155.5-15.5-269q109-12 303-58 26-6 39.5-28.5t7.5-48.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1600 896q0 143-55.5 273.5t-150 225-225 150-273.5 55.5-273.5-55.5-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5zM896 128q-156 0-298 61t-245 164-164 245-61 298 61 298 164 245 245 164 298 61 298-61 245-164 164-245 61-298-61-298-164-245-245-164-298-61zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({university:{width:2048,height:1792,paths:[{d:\"M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z\"}]}}),h.register({unlink:{width:1664,height:1792,paths:[{d:\"M439 1271l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zM608 1312v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM384 1088q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zM1031 492l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zM1664 576q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1120 32v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM1527 183l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z\"}]}}),h.register({\"unlock-alt\":{width:1152,height:1792,paths:[{d:\"M1056 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\"}]}}),h.register({unlock:{width:1664,height:1792,paths:[{d:\"M1664 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\"}]}}),h.register({unsorted:{width:1024,height:1792,paths:[{d:\"M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45zM1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\"}]}}),h.register({upload:{width:1664,height:1792,paths:[{d:\"M1280 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 1248v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zM1339 600q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z\"}]}}),h.register({usb:{width:2304,height:1792,paths:[{d:\"M2288 805q16 8 16 27t-16 27l-320 192q-8 5-16 5-9 0-16-4-16-10-16-28v-128h-858q37 58 83 165 16 37 24.5 55t24 49 27 47 27 34 31.5 26 33 8h96v-96q0-14 9-23t23-9h320q14 0 23 9t9 23v320q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-96h-96q-32 0-61-10t-51-23.5-45-40.5-37-46-33.5-57-28.5-57.5-28-60.5q-23-53-37-81.5t-36-65-44.5-53.5-46.5-17h-360q-22 84-91 138t-157 54q-106 0-181-75t-75-181 75-181 181-75q88 0 157 54t91 138h104q24 0 46.5-17t44.5-53.5 36-65 37-81.5q19-41 28-60.5t28.5-57.5 33.5-57 37-46 45-40.5 51-23.5 61-10h107q21-57 70-92.5t111-35.5q80 0 136 56t56 136-56 136-136 56q-62 0-111-35.5t-70-92.5h-107q-17 0-33 8t-31.5 26-27 34-27 47-24 49-24.5 55q-46 107-83 165h1114v-128q0-18 16-28t32 1z\"}]}}),h.register({usd:{width:1024,height:1792,paths:[{d:\"M978 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z\"}]}}),h.register({\"user-circle-o\":{width:1792,height:1792,paths:[{d:\"M896 0q182 0 348 71t286 191 191 286 71 348q0 181-70.5 347t-190.5 286-286 191.5-349 71.5-349-71-285.5-191.5-190.5-286-71-347.5 71-348 191-286 286-191 348-71zM1515 1351q149-205 149-455 0-156-61-298t-164-245-245-164-298-61-298 61-245 164-164 245-61 298q0 250 149 455 66-327 306-327 131 128 313 128t313-128q240 0 306 327zM1280 704q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5z\"}]}}),h.register({\"user-circle\":{width:1792,height:1792,paths:[{d:\"M1523 1339q-22-155-87.5-257.5t-184.5-118.5q-67 74-159.5 115.5t-195.5 41.5-195.5-41.5-159.5-115.5q-119 16-184.5 118.5t-87.5 257.5q106 150 271 237.5t356 87.5 356-87.5 271-237.5zM1280 640q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM1792 896q0 182-71 347.5t-190.5 286-285.5 191.5-349 71q-182 0-348-71t-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({\"user-md\":{width:1408,height:1792,paths:[{d:\"M384 1344q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1408 1405q0 121-73 190t-194 69h-874q-121 0-194-69t-73-190q0-68 5.5-131t24-138 47.5-132.5 81-103 120-60.5q-22 52-22 120v203q-58 20-93 70t-35 111q0 80 56 136t136 56 136-56 56-136q0-61-35.5-111t-92.5-70v-203q0-62 25-93 132 104 295 104t295-104q25 31 25 93v64q-106 0-181 75t-75 181v89q-32 29-32 71 0 40 28 68t68 28 68-28 28-68q0-42-32-71v-89q0-52 38-90t90-38 90 38 38 90v89q-32 29-32 71 0 40 28 68t68 28 68-28 28-68q0-42-32-71v-89q0-68-34.5-127.5t-93.5-93.5q0-10 0.5-42.5t0-48-2.5-41.5-7-47-13-40q68 15 120 60.5t81 103 47.5 132.5 24 138 5.5 131zM1088 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({\"user-o\":{width:1536,height:1792,paths:[{d:\"M1201 784q47 14 89.5 38t89 73 79.5 115.5 55 172 22 236.5q0 154-100 263.5t-241 109.5h-854q-141 0-241-109.5t-100-263.5q0-131 22-236.5t55-172 79.5-115.5 89-73 89.5-38q-79-125-79-272 0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5 198.5 40.5 163.5 109.5 109.5 163.5 40.5 198.5q0 147-79 272zM768 128q-159 0-271.5 112.5t-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5-112.5-271.5-271.5-112.5zM1195 1664q88 0 150.5-71.5t62.5-173.5q0-239-78.5-377t-225.5-145q-145 127-336 127t-336-127q-147 7-225.5 145t-78.5 377q0 102 62.5 173.5t150.5 71.5h854z\"}]}}),h.register({\"user-plus\":{width:2048,height:1792,paths:[{d:\"M704 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zM1664 1024h352q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-352v352q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-352h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-352q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5v352zM928 1248q0 52 38 90t90 38h256v238q-68 50-171 50h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 79 61 154.5 91.5t164.5 30.5 164.5-30.5 154.5-91.5q20-17 39-17 132 0 217 96h-223q-52 0-90 38t-38 90v192z\"}]}}),h.register({\"user-secret\":{width:1536,height:1792,paths:[{d:\"M576 1536l96-448-96-128-128-64zM832 1536l128-640-128 64-96 128zM992 526q-2-4-4-6-10-8-96-8-70 0-167 19-7 2-21 2t-21-2q-97-19-167-19-86 0-96 8-2 2-4 6 2 18 4 27 2 3 7.5 6.5t7.5 10.5q2 4 7.5 20.5t7 20.5 7.5 17 8.5 17 9 14 12 13.5 14 9.5 17.5 8 20.5 4 24.5 2q36 0 59-12.5t32.5-30 14.5-34.5 11.5-29.5 17.5-12.5h12q11 0 17.5 12.5t11.5 29.5 14.5 34.5 32.5 30 59 12.5q13 0 24.5-2t20.5-4 17.5-8 14-9.5 12-13.5 9-14 8.5-17 7.5-17 7-20.5 7.5-20.5q2-7 7.5-10.5t7.5-6.5q2-9 4-27zM1408 1405q0 121-73 190t-194 69h-874q-121 0-194-69t-73-190q0-61 4.5-118t19-125.5 37.5-123.5 63.5-103.5 93.5-74.5l-90-220h214q-22-64-22-128 0-12 2-32-194-40-194-96 0-57 210-99 17-62 51.5-134t70.5-114q32-37 76-37 30 0 84 31t84 31 84-31 84-31q44 0 76 37 36 42 70.5 114t51.5 134q210 42 210 99 0 56-194 96 7 81-20 160h214l-82 225q63 33 107.5 96.5t65.5 143.5 29 151.5 8 148.5z\"}]}}),h.register({\"user-times\":{width:2048,height:1792,paths:[{d:\"M704 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zM1781 1216l249 249q9 9 9 23 0 13-9 22l-136 136q-9 9-22 9-14 0-23-9l-249-249-249 249q-9 9-23 9-13 0-22-9l-136-136q-9-9-9-22 0-14 9-23l249-249-249-249q-9-9-9-23 0-13 9-22l136-136q9-9 22-9 14 0 23 9l249 249 249-249q9-9 23-9 13 0 22 9l136 136q9 9 9 22 0 14-9 23zM1283 1216l-181 181q-37 37-37 91 0 53 37 90l83 83q-21 3-44 3h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 154 122 319 122t319-122q20-17 39-17 28 0 57 6-28 27-41 50t-13 56q0 54 37 91z\"}]}}),h.register({user:{width:1280,height:1792,paths:[{d:\"M1280 1399q0 109-62.5 187t-150.5 78h-854q-88 0-150.5-78t-62.5-187q0-85 8.5-160.5t31.5-152 58.5-131 94-89 134.5-34.5q131 128 313 128t313-128q76 0 134.5 34.5t94 89 58.5 131 31.5 152 8.5 160.5zM1024 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z\"}]}}),h.register({users:{width:1920,height:1792,paths:[{d:\"M593 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zM1664 1533q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zM640 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1344 640q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1920 865q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zM1792 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z\"}]}}),h.register({\"vcard-o\":{width:2048,height:1792,paths:[{d:\"M1024 1131q0 64-37 106.5t-91 42.5h-512q-54 0-91-42.5t-37-106.5 9-117.5 29.5-103 60.5-78 97-28.5q6 4 30 18t37.5 21.5 35.5 17.5 43 14.5 42 4.5 42-4.5 43-14.5 35.5-17.5 37.5-21.5 30-18q57 0 97 28.5t60.5 78 29.5 103 9 117.5zM867 611q0 94-66.5 160.5t-160.5 66.5-160.5-66.5-66.5-160.5 66.5-160.5 160.5-66.5 160.5 66.5 66.5 160.5zM1792 1056v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1792 804v56q0 15-10.5 25.5t-25.5 10.5h-568q-15 0-25.5-10.5t-10.5-25.5v-56q0-15 10.5-25.5t25.5-10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 544v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1920 1504v-1216q0-13-9.5-22.5t-22.5-9.5h-1728q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h352v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h768v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h352q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({vcard:{width:2048,height:1792,paths:[{d:\"M1024 1131q0-64-9-117.5t-29.5-103-60.5-78-97-28.5q-6 4-30 18t-37.5 21.5-35.5 17.5-43 14.5-42 4.5-42-4.5-43-14.5-35.5-17.5-37.5-21.5-30-18q-57 0-97 28.5t-60.5 78-29.5 103-9 117.5 37 106.5 91 42.5h512q54 0 91-42.5t37-106.5zM867 611q0-94-66.5-160.5t-160.5-66.5-160.5 66.5-66.5 160.5 66.5 160.5 160.5 66.5 160.5-66.5 66.5-160.5zM1792 1120v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM1792 860v-56q0-15-10.5-25.5t-25.5-10.5h-568q-15 0-25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5-10.5t10.5-25.5zM1792 608v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM2048 288v1216q0 66-47 113t-113 47h-352v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-768v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-352q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z\"}]}}),h.register({\"venus-double\":{width:1792,height:1792,paths:[{d:\"M1790 529q12 155-52.5 292t-186 224-271.5 103v260h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-512v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-260q-150-16-271.5-103t-186-224-52.5-292q17-206 164.5-356.5t352.5-169.5q206-21 377 94 171-115 377-94 205 19 352.5 169.5t164.5 356.5zM896 889q128-131 128-313t-128-313q-128 131-128 313t128 313zM576 1024q115 0 218-57-154-165-154-391 0-224 154-391-103-57-218-57-185 0-316.5 131.5t-131.5 316.5 131.5 316.5 316.5 131.5zM1152 1408v-260q-137-15-256-94-119 79-256 94v260h512zM1216 1024q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5q-115 0-218 57 154 167 154 391 0 226-154 391 103 57 218 57z\"}]}}),h.register({\"venus-mars\":{width:2048,height:1792,paths:[{d:\"M1664 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q76 95 107.5 214t9.5 247q-32 180-164.5 310t-313.5 157q-223 34-409-90-117 78-256 93v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-155-17-279.5-109.5t-187-237.5-39.5-307q25-187 159.5-322.5t320.5-164.5q224-34 410 90 146-97 320-97 201 0 359 126l255-254h-134q-14 0-23-9t-9-23v-64zM896 1145q128-131 128-313t-128-313q-128 131-128 313t128 313zM128 832q0 185 131.5 316.5t316.5 131.5q117 0 218-57-154-167-154-391t154-391q-101-57-218-57-185 0-316.5 131.5t-131.5 316.5zM1216 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5q-117 0-218 57 154 167 154 391t-154 391q101 57 218 57z\"}]}}),h.register({venus:{width:1280,height:1792,paths:[{d:\"M1152 576q0 221-147.5 384.5t-364.5 187.5v260h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-260q-150-16-271.5-103t-186-224-52.5-292q11-134 80.5-249t182-188 245.5-88q170-19 319 54t236 212 87 306zM128 576q0 185 131.5 316.5t316.5 131.5 316.5-131.5 131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5z\"}]}}),h.register({viacoin:{width:1536,height:1792,paths:[{\nd:\"M1536 0l-192 448h192v192h-274l-55 128h329v192h-411l-357 832-357-832h-411v-192h329l-55-128h-274v-192h192l-192-448h256l323 768h378l323-768h256zM768 1216l108-256h-216z\"}]}}),h.register({\"viadeo-square\":{width:1536,height:1792,paths:[{d:\"M1050 1041q0-78-28-147-41 25-85 34 22 50 22 114 0 117-77 198.5t-193 81.5-193.5-81.5-77.5-198.5q0-115 78-199.5t193-84.5q53 0 98 19 4-43 27-87-60-21-125-21-154 0-257.5 108.5t-103.5 263.5 103.5 261 257.5 106 257.5-106.5 103.5-260.5zM872 686q2 24 2 71 0 63-5 123t-20.5 132.5-40.5 130-68.5 106-100.5 70.5q21 3 42 3h10q219-139 219-411 0-116-38-225zM872 686q-4-80-44-171.5t-98-130.5q92 156 142 302zM1207 581q0-102-51-174-41 86-124 109-69 19-109 53.5t-40 99.5q0 40 24 77 74-17 140.5-67t95.5-115q-4 52-74.5 111.5t-138.5 97.5q52 52 110 52 51 0 90-37t60-90q17-42 17-117zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({viadeo:{width:1280,height:1792,paths:[{d:\"M1050 1106q0 215-147 374-148 161-378 161-232 0-378-161-147-159-147-374 0-147 68-270.5t189-196.5 268-73q96 0 182 31-32 62-39 126-66-28-143-28-167 0-280.5 123t-113.5 291q0 170 112.5 288.5t281.5 118.5 281-118.5 112-288.5q0-89-32-166 66-13 123-49 41 98 41 212zM846 917q0 192-79.5 345t-238.5 253l-14 1q-29 0-62-5 83-32 146.5-102.5t99.5-154.5 58.5-189 30-192.5 7.5-178.5q0-69-3-103 55 160 55 326zM791 589v2q-73-214-206-440 88 59 142.5 186.5t63.5 251.5zM1035 792q-83 0-160-75 218-120 290-247 19-37 21-56-42 94-139.5 166.5t-204.5 97.5q-35-54-35-113 0-37 17-79t43-68q46-44 157-74 59-16 106-58.5t74-100.5q74 105 74 253 0 109-24 170-32 77-88.5 130.5t-130.5 53.5z\"}]}}),h.register({\"video-camera\":{width:1792,height:1792,paths:[{d:\"M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z\"}]}}),h.register({\"vimeo-square\":{width:1536,height:1792,paths:[{d:\"M1292 638q10-216-161-222-231-8-312 261 44-19 82-19 85 0 74 96-4 57-74 167t-105 110q-43 0-82-169-13-54-45-255-30-189-160-177-59 7-164 100l-81 72-81 72 52 67q76-52 87-52 57 0 107 179 15 55 45 164.5t45 164.5q68 179 164 179 157 0 383-294 220-283 226-444zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({vimeo:{width:1792,height:1792,paths:[{d:\"M1709 518q-10 236-332 651-333 431-562 431-142 0-240-263-44-160-132-482-72-262-157-262-18 0-127 76l-77-98q24-21 108-96.5t130-115.5q156-138 241-146 95-9 153 55.5t81 203.5q44 287 66 373 55 249 120 249 51 0 154-161 101-161 109-246 13-139-109-139-57 0-121 26 120-393 459-382 251 8 236 326z\"}]}}),h.register({vine:{width:1536,height:1792,paths:[{d:\"M1497 827v198q-101 23-198 23-65 136-165.5 271t-181.5 215.5-128 106.5q-80 45-162-3-28-17-60.5-43.5t-85-83.5-102.5-128.5-107.5-184-105.5-244-91.5-314.5-70.5-390h283q26 218 70 398.5t104.5 317 121.5 235.5 140 195q169-169 287-406-142-72-223-220t-81-333q0-192 104-314.5t284-122.5q178 0 273 105.5t95 297.5q0 159-58 286-7 1-19.5 3t-46 2-63-6-62-25.5-50.5-51.5q31-103 31-184 0-87-29-132t-79-45q-53 0-85 49.5t-32 140.5q0 186 105 293.5t267 107.5q62 0 121-14z\"}]}}),h.register({vk:{width:1920,height:1792,paths:[{d:\"M1917 520q23 64-150 294-24 32-65 85-40 51-55 72t-30.5 49.5-12 42 13 34.5 32.5 43 57 53q4 2 5 4 141 131 191 221 3 5 6.5 12.5t7 26.5-0.5 34-25 27.5-59 12.5l-256 4q-24 5-56-5t-52-22l-20-12q-30-21-70-64t-68.5-77.5-61-58-56.5-15.5q-3 1-8 3.5t-17 14.5-21.5 29.5-17 52-6.5 77.5q0 15-3.5 27.5t-7.5 18.5l-4 5q-18 19-53 22h-115q-71 4-146-16.5t-131.5-53-103-66-70.5-57.5l-25-24q-10-10-27.5-30t-71.5-91-106-151-122.5-211-130.5-272q-6-16-6-27t3-16l4-6q15-19 57-19l274-2q12 2 23 6.5t16 8.5l5 3q16 11 24 32 20 50 46 103.5t41 81.5l16 29q29 60 56 104t48.5 68.5 41.5 38.5 34 14 27-5q2-1 5-5t12-22 13.5-47 9.5-81 0-125q-2-40-9-73t-14-46l-6-12q-25-34-85-43-13-2 5-24 16-19 38-30 53-26 239-24 82 1 135 13 20 5 33.5 13.5t20.5 24 10.5 32 3.5 45.5-1 55-2.5 70.5-1.5 82.5q0 11-1 42t-0.5 48 3.5 40.5 11.5 39 22.5 24.5q8 2 17 4t26-11 38-34.5 52-67 68-107.5q60-104 107-225 4-10 10-17.5t11-10.5l4-3 5-2.5t13-3 20-0.5l288-2q39-5 64 2.5t31 16.5z\"}]}}),h.register({\"volume-control-phone\":{width:1408,height:1792,paths:[{d:\"M617 1689q0-11-13-58t-31-107-20-69q-1-4-5-26.5t-8.5-36-13.5-21.5q-15-14-51-14-23 0-70 5.5t-71 5.5q-34 0-47-11-6-5-11-15.5t-7.5-20-6.5-24-5-18.5q-37-128-37-255t37-255q1-4 5-18.5t6.5-24 7.5-20 11-15.5q13-11 47-11 24 0 71 5.5t70 5.5q36 0 51-14 9-8 13.5-21.5t8.5-36 5-26.5q2-9 20-69t31-107 13-58q0-22-43.5-52.5t-75.5-42.5q-20-8-45-8-34 0-98 18-57 17-96.5 40.5t-71 66-46 70-45.5 94.5q-6 12-9 19-49 107-68 216t-19 244 19 244 68 216q56 122 83 161 63 91 179 127l6 2q64 18 98 18 25 0 45-8 32-12 75.5-42.5t43.5-52.5zM776 776q-26 0-45-19t-19-45.5 19-45.5q37-37 37-90 0-52-37-91-19-19-19-45t19-45 45-19 45 19q75 75 75 181t-75 181q-21 19-45 19zM957 957q-27 0-45-19-19-19-19-45t19-45q112-114 112-272t-112-272q-19-19-19-45t19-45 45-19 45 19q150 150 150 362t-150 362q-18 19-45 19zM1138 1138q-27 0-45-19-19-19-19-45t19-45q90-91 138.5-208t48.5-245-48.5-245-138.5-208q-19-19-19-45t19-45 45-19 45 19q109 109 167 249t58 294-58 294-167 249q-18 19-45 19z\"}]}}),h.register({\"volume-down\":{width:1152,height:1792,paths:[{d:\"M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45zM1152 896q0 76-42.5 141.5t-112.5 93.5q-10 5-25 5-26 0-45-18.5t-19-45.5q0-21 12-35.5t29-25 34-23 29-36 12-56.5-12-56.5-29-36-34-23-29-25-12-35.5q0-27 19-45.5t45-18.5q15 0 25 5 70 27 112.5 93t42.5 142z\"}]}}),h.register({\"volume-off\":{width:768,height:1792,paths:[{d:\"M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45z\"}]}}),h.register({\"volume-up\":{width:1664,height:1792,paths:[{d:\"M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45zM1152 896q0 76-42.5 141.5t-112.5 93.5q-10 5-25 5-26 0-45-18.5t-19-45.5q0-21 12-35.5t29-25 34-23 29-36 12-56.5-12-56.5-29-36-34-23-29-25-12-35.5q0-27 19-45.5t45-18.5q15 0 25 5 70 27 112.5 93t42.5 142zM1408 896q0 153-85 282.5t-225 188.5q-13 5-25 5-27 0-46-19t-19-45q0-39 39-59 56-29 76-44 74-54 115.5-135.5t41.5-173.5-41.5-173.5-115.5-135.5q-20-15-76-44-39-20-39-59 0-26 19-45t45-19q13 0 26 5 140 59 225 188.5t85 282.5zM1664 896q0 230-127 422.5t-338 283.5q-13 5-26 5-26 0-45-19t-19-45q0-36 39-59 7-4 22.5-10.5t22.5-10.5q46-25 82-51 123-91 192-227t69-289-69-289-192-227q-36-26-82-51-7-4-22.5-10.5t-22.5-10.5q-39-23-39-59 0-26 19-45t45-19q13 0 26 5 211 91 338 283.5t127 422.5z\"}]}}),h.register({warning:{width:1792,height:1792,paths:[{d:\"M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zM1022 1001l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zM1008 67l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z\"}]}}),h.register({wechat:{width:2048,height:1792,paths:[{d:\"M580 461q0-41-25-66t-66-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 66-24.5t25-65.5zM1323 968q0-28-25.5-50t-65.5-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q40 0 65.5-22t25.5-51zM1087 461q0-41-24.5-66t-65.5-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 65.5-24.5t24.5-65.5zM1722 968q0-28-26-50t-65-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q39 0 65-22t26-51zM1456 571q-31-4-70-4-169 0-311 77t-223.5 208.5-81.5 287.5q0 78 23 152-35 3-68 3-26 0-50-1.5t-55-6.5-44.5-7-54.5-10.5-50-10.5l-253 127 72-218q-290-203-290-490 0-169 97.5-311t264-223.5 363.5-81.5q176 0 332.5 66t262 182.5 136.5 260.5zM2048 1132q0 117-68.5 223.5t-185.5 193.5l55 181-199-109q-150 37-218 37-169 0-311-70.5t-223.5-191.5-81.5-264 81.5-264 223.5-191.5 311-70.5q161 0 303 70.5t227.5 192 85.5 263.5z\"}]}}),h.register({weibo:{width:1792,height:1792,paths:[{d:\"M675 1284q21-34 11-69t-45-50q-34-14-73-1t-60 46q-22 34-13 68.5t43 50.5 74.5 2.5 62.5-47.5zM769 1163q8-13 3.5-26.5t-17.5-18.5q-14-5-28.5 0.5t-21.5 18.5q-17 31 13 45 14 5 29-0.5t22-18.5zM943 1270q-45 102-158 150t-224 12q-107-34-147.5-126.5t6.5-187.5q47-93 151.5-139t210.5-19q111 29 158.5 119.5t2.5 190.5zM1255 1110q-9-96-89-170t-208.5-109-274.5-21q-223 23-369.5 141.5t-132.5 264.5q9 96 89 170t208.5 109 274.5 21q223-23 369.5-141.5t132.5-264.5zM1563 1114q0 68-37 139.5t-109 137-168.5 117.5-226 83-270.5 31-275-33.5-240.5-93-171.5-151-65-199.5q0-115 69.5-245t197.5-258q169-169 341.5-236t246.5 7q65 64 20 209-4 14-1 20t10 7 14.5-0.5 13.5-3.5l6-2q139-59 246-59t153 61q45 63 0 178-2 13-4.5 20t4.5 12.5 12 7.5 17 6q57 18 103 47t80 81.5 34 116.5zM1489 490q42 47 54.5 108.5t-6.5 117.5q-8 23-29.5 34t-44.5 4q-23-8-34-29.5t-4-44.5q20-63-24-111t-107-35q-24 5-45-8t-25-37q-5-24 8-44.5t37-25.5q60-13 119 5.5t101 65.5zM1670 327q87 96 112.5 222.5t-13.5 241.5q-9 27-34 40t-52 4-40-34-5-52q28-82 10-172t-80-158q-62-69-148-95.5t-173-8.5q-28 6-52-9.5t-30-43.5 9.5-51.5 43.5-29.5q123-26 244 11.5t208 134.5z\"}]}}),h.register({weixin:{width:2048,height:1792,paths:[{d:\"M580 461q0-41-25-66t-66-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 66-24.5t25-65.5zM1323 968q0-28-25.5-50t-65.5-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q40 0 65.5-22t25.5-51zM1087 461q0-41-24.5-66t-65.5-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 65.5-24.5t24.5-65.5zM1722 968q0-28-26-50t-65-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q39 0 65-22t26-51zM1456 571q-31-4-70-4-169 0-311 77t-223.5 208.5-81.5 287.5q0 78 23 152-35 3-68 3-26 0-50-1.5t-55-6.5-44.5-7-54.5-10.5-50-10.5l-253 127 72-218q-290-203-290-490 0-169 97.5-311t264-223.5 363.5-81.5q176 0 332.5 66t262 182.5 136.5 260.5zM2048 1132q0 117-68.5 223.5t-185.5 193.5l55 181-199-109q-150 37-218 37-169 0-311-70.5t-223.5-191.5-81.5-264 81.5-264 223.5-191.5 311-70.5q161 0 303 70.5t227.5 192 85.5 263.5z\"}]}}),h.register({whatsapp:{width:1536,height:1792,paths:[{d:\"M985 974q13 0 97.5 44t89.5 53q2 5 2 15 0 33-17 76-16 39-71 65.5t-102 26.5q-57 0-190-62-98-45-170-118t-148-185q-72-107-71-194v-8q3-91 74-158 24-22 52-22 6 0 18 1.5t19 1.5q19 0 26.5 6.5t15.5 27.5q8 20 33 88t25 75q0 21-34.5 57.5t-34.5 46.5q0 7 5 15 34 73 102 137 56 53 151 101 12 7 22 7 15 0 54-48.5t52-48.5zM782 1504q127 0 243.5-50t200.5-134 134-200.5 50-243.5-50-243.5-134-200.5-200.5-134-243.5-50-243.5 50-200.5 134-134 200.5-50 243.5q0 203 120 368l-79 233 242-77q158 104 345 104zM782 122q153 0 292.5 60t240.5 161 161 240.5 60 292.5-60 292.5-161 240.5-240.5 161-292.5 60q-195 0-365-94l-417 134 136-405q-108-178-108-389 0-153 60-292.5t161-240.5 240.5-161 292.5-60z\"}]}}),h.register({\"wheelchair-alt\":{width:1536,height:1792,paths:[{d:\"M1438 813q34 35 29 82l-44 551q-4 42-34.5 70t-71.5 28q-6 0-9-1-44-3-72.5-36.5t-25.5-77.5l35-429-143 8q55 113 55 240 0 216-148 372l-137-137q91-101 91-235 0-145-102.5-248t-247.5-103q-134 0-236 92l-137-138q120-114 284-141l264-300-149-87-181 161q-33 30-77 27.5t-73-35.5-26.5-77 34.5-73l239-213q26-23 60-26.5t64 14.5l488 283q36 21 48 68 17 67-26 117l-205 232 371-20q49-3 83 32zM1240 356q-74 0-126-52t-52-126 52-126 126-52 126.5 52 52.5 126-52.5 126-126.5 52zM613 1598q106 0 196-61l139 139q-146 116-335 116-148 0-273.5-73t-198.5-198-73-273q0-188 116-336l139 139q-60 88-60 197 0 145 102.5 247.5t247.5 102.5z\"}]}}),h.register({wheelchair:{width:1664,height:1792,paths:[{d:\"M1023 1187l102 204q-58 179-210 290t-339 111q-156 0-288.5-77.5t-210-210-77.5-288.5q0-181 104.5-330t274.5-211l17 131q-122 54-195 165.5t-73 244.5q0 185 131.5 316.5t316.5 131.5q126 0 232.5-65t165-175.5 49.5-236.5zM1571 1287l58 114-256 128q-13 7-29 7-40 0-57-35l-239-477h-472q-24 0-42.5-16.5t-21.5-40.5l-96-779q-2-17 6-42 14-51 57-82.5t97-31.5q66 0 113 47t47 113q0 69-52 117.5t-120 41.5l37 289h423v128h-407l16 128h455q40 0 57 35l228 455z\"}]}}),h.register({wifi:{width:2048,height:1792,paths:[{d:\"M1024 1523q-20 0-93-73.5t-73-93.5q0-32 62.5-54t103.5-22 103.5 22 62.5 54q0 20-73 93.5t-93 73.5zM1294 1252q-2 0-40-25t-101.5-50-128.5-25-128.5 25-101 50-40.5 25q-18 0-93.5-75t-75.5-93q0-13 10-23 78-77 196-121t233-44 233 44 196 121q10 10 10 23 0 18-75.5 93t-93.5 75zM1567 980q-11 0-23-8-136-105-252-154.5t-268-49.5q-85 0-170.5 22t-149 53-113.5 62-79 53-31 22q-17 0-92-75t-75-93q0-12 10-22 132-132 320-205t380-73 380 73 320 205q10 10 10 22 0 18-75 93t-92 75zM1838 709q-11 0-22-9-179-157-371.5-236.5t-420.5-79.5-420.5 79.5-371.5 236.5q-11 9-22 9-17 0-92.5-75t-75.5-93q0-13 10-23 187-186 445-288t527-102 527 102 445 288q10 10 10 23 0 18-75.5 93t-92.5 75z\"}]}}),h.register({\"wikipedia-w\":{width:2304,height:1792,paths:[{d:\"M1494 1639l-295-695q-25 49-158.5 305.5t-198.5 389.5q-1 1-27.5 0.5t-26.5-1.5q-82-193-255.5-587t-259.5-596q-21-50-66.5-107.5t-103.5-100.5-102-43q0-5-0.5-24t-0.5-27h583v50q-39 2-79.5 16t-66.5 43-10 64q26 59 216.5 499t235.5 540q31-61 140-266.5t131-247.5q-19-39-126-281t-136-295q-38-69-201-71v-50l513 1v47q-60 2-93.5 25t-12.5 69q33 70 87 189.5t86 187.5q110-214 173-363 24-55-10-79.5t-129-26.5q1-7 1-25v-24q64 0 170.5-0.5t180-1 92.5-0.5v49q-62 2-119 33t-90 81l-213 442q13 33 127.5 290t121.5 274l441-1017q-14-38-49.5-62.5t-65-31.5-55.5-8v-50l460 4 1 2-1 44q-139 4-201 145-526 1216-559 1291h-49z\"}]}}),h.register({\"window-close-o\":{width:1792,height:1792,paths:[{d:\"M1257 1111l-146 146q-10 10-23 10t-23-10l-169-169-169 169q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l169-169-169-169q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l169 169 169-169q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-169 169 169 169q10 10 10 23t-10 23zM256 1408h1280v-1024h-1280v1024zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-close\":{width:1792,height:1792,paths:[{d:\"M1175 1321l146-146q10-10 10-23t-10-23l-233-233 233-233q10-10 10-23t-10-23l-146-146q-10-10-23-10t-23 10l-233 233-233-233q-10-10-23-10t-23 10l-146 146q-10 10-10 23t10 23l233 233-233 233q-10 10-10 23t10 23l146 146q10 10 23 10t23-10l233-233 233 233q10 10 23 10t23-10zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-maximize\":{width:1792,height:1792,paths:[{d:\"M256 1408h1280v-768h-1280v768zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-minimize\":{width:1792,height:1792,paths:[{d:\"M1792 1312v192q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-192q0-66 47-113t113-47h1472q66 0 113 47t47 113z\"}]}}),h.register({\"window-restore\":{width:2048,height:1792,paths:[{d:\"M256 1536h768v-512h-768v512zM1280 1024h512v-768h-768v256h96q66 0 113 47t47 113v352zM2048 160v960q0 66-47 113t-113 47h-608v352q0 66-47 113t-113 47h-960q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h608v-352q0-66 47-113t113-47h960q66 0 113 47t47 113z\"}]}}),h.register({windows:{width:1664,height:1792,paths:[{d:\"M682 1006v651l-682-94v-557h682zM682 263v659h-682v-565zM1664 1006v786l-907-125v-661h907zM1664 128v794h-907v-669z\"}]}}),h.register({won:{width:1792,height:1792,paths:[{d:\"M514 1195l81-299h-159l75 300q1 1 1 3t1 3q0-1 0.5-3.5t0.5-3.5zM630 768l35-128h-292l32 128h225zM822 768h139l-35-128h-70zM1271 1196l78-300h-162l81 299q0 1 0.5 3.5t1.5 3.5q0-1 0.5-3t0.5-3zM1382 768l33-128h-297l34 128h230zM1792 800v64q0 14-9 23t-23 9h-213l-164 616q-7 24-31 24h-159q-24 0-31-24l-166-616h-209l-167 616q-7 24-31 24h-159q-11 0-19.5-7t-10.5-17l-160-616h-208q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h175l-33-128h-142q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h109l-89-344q-5-15 5-28 10-12 26-12h137q26 0 31 24l90 360h359l97-360q7-24 31-24h126q24 0 31 24l98 360h365l93-360q5-24 31-24h137q16 0 26 12 10 13 5 28l-91 344h111q14 0 23 9t9 23v64q0 14-9 23t-23 9h-145l-34 128h179q14 0 23 9t9 23z\"}]}}),h.register({wordpress:{width:1792,height:1792,paths:[{d:\"M127 896q0-163 67-313l367 1005q-196-95-315-281t-119-411zM1415 857q0 19-2.5 38.5t-10 49.5-11.5 44-17.5 59-17.5 58l-76 256-278-826q46-3 88-8 19-2 26-18.5t-2.5-31-28.5-13.5l-205 10q-75-1-202-10-12-1-20.5 5t-11.5 15-1.5 18.5 9 16.5 19.5 8l80 8 120 328-168 504-280-832q46-3 88-8 19-2 26-18.5t-2.5-31-28.5-13.5l-205 10q-7 0-23-0.5t-26-0.5q105-160 274.5-253.5t367.5-93.5q147 0 280.5 53t238.5 149h-10q-55 0-92 40.5t-37 95.5q0 12 2 24t4 21.5 8 23 9 21 12 22.5 12.5 21 14.5 24 14 23q63 107 63 212zM909 963l237 647q1 6 5 11-126 44-255 44-112 0-217-32zM1570 527q95 174 95 369 0 209-104 385.5t-279 278.5l235-678q59-169 59-276 0-42-6-79zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 1751q173 0 331.5-68t273-182.5 182.5-273 68-331.5-68-331.5-182.5-273-273-182.5-331.5-68-331.5 68-273 182.5-182.5 273-68 331.5 68 331.5 182.5 273 273 182.5 331.5 68z\"}]}}),h.register({wpbeginner:{width:1792,height:1792,paths:[{d:\"M384 832h160v-224h-160v224zM1221 1164v-92q-104 36-243 38-135 1-259.5-46.5t-220.5-122.5l1 96q88 80 212 128.5t272 47.5q129 0 238-49zM640 832h640v-224h-640v224zM1792 800q0 187-99 352 89 102 89 229 0 157-129.5 268t-313.5 111q-122 0-225-52.5t-161-140.5q-19 1-57 1t-57-1q-58 88-161 140.5t-225 52.5q-184 0-313.5-111t-129.5-268q0-127 89-229-99-165-99-352 0-209 120-385.5t326.5-279.5 449.5-103 449.5 103 326.5 279.5 120 385.5z\"}]}}),h.register({wpexplorer:{width:1792,height:1792,paths:[{d:\"M948 1028l163 329h-51l-175-350-171 350h-49l179-374-78-33 21-49 240 102-21 50zM563 436l304 130-130 304-304-130zM907 621l240 103-103 239-239-102zM1188 771l191 81-82 190-190-81zM1680 896q0-159-62-304t-167.5-250.5-250.5-167.5-304-62-304 62-250.5 167.5-167.5 250.5-62 304 62 304 167.5 250.5 250.5 167.5 304 62 304-62 250.5-167.5 167.5-250.5 62-304zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z\"}]}}),h.register({wpforms:{width:1536,height:1792,paths:[{d:\"M515 911v128h-252v-128h252zM515 656v127h-252v-127h252zM1273 1167v128h-341v-128h341zM1273 911v128h-672v-128h672zM1273 656v127h-672v-127h672zM1408 1516v-1240q0-8-6-14t-14-6h-32l-378 256-210-171-210 171-378-256h-32q-8 0-14 6t-6 14v1240q0 8 6 14t14 6h1240q8 0 14-6t6-14zM553 406l185-150h-406zM983 406l221-150h-406zM1536 276v1240q0 62-43 105t-105 43h-1240q-62 0-105-43t-43-105v-1240q0-62 43-105t105-43h1240q62 0 105 43t43 105z\"}]}}),h.register({wrench:{width:1664,height:1792,paths:[{d:\"M384 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1028 1052l-682 682q-37 37-90 37-52 0-91-37l-106-108q-38-36-38-90 0-53 38-91l681-681q39 98 114.5 173.5t173.5 114.5zM1662 617q0 39-23 106-47 134-164.5 217.5t-258.5 83.5q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q58 0 121.5 16.5t107.5 46.5q16 11 16 28t-16 28l-293 169v224l193 107q5-3 79-48.5t135.5-81 70.5-35.5q15 0 23.5 10t8.5 25z\"}]}}),h.register({\"xing-square\":{width:1536,height:1792,paths:[{d:\"M685 765q0-1-126-222-21-34-52-34h-184q-18 0-26 11-7 12 1 29l125 216v1l-196 346q-9 14 0 28 8 13 24 13h185q31 0 50-36zM1309 268q-7-12-24-12h-187q-30 0-49 35l-411 729q1 2 262 481 20 35 52 35h184q18 0 25-12 8-13-1-28l-260-476v-1l409-723q8-16 0-28zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({xing:{width:1408,height:1792,paths:[{d:\"M597 667q-10 18-257 456-27 46-65 46h-239q-21 0-31-17t0-36l253-448q1 0 0-1l-161-279q-12-22-1-37 9-15 32-15h239q40 0 66 45zM1403 25q11 16 0 37l-528 934v1l336 615q11 20 1 37-10 15-32 15h-239q-42 0-66-45l-339-622q18-32 531-942 25-45 64-45h241q22 0 31 15z\"}]}}),h.register({\"y-combinator-square\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({\"y-combinator\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 128v1536h-1536v-1536h1536z\"}]}}),h.register({yahoo:{width:1536,height:1792,paths:[{d:\"M859 957l13 707q-62-11-105-11-41 0-105 11l13-707q-40-69-168.5-295.5t-216.5-374.5-181-287q58 15 108 15 44 0 111-15 63 111 133.5 229.5t167 276.5 138.5 227q37-61 109.5-177.5t117.5-190 105-176 107-189.5q54 14 107 14 56 0 114-14v0q-28 39-60 88.5t-49.5 78.5-56.5 96-49 84q-146 248-353 610z\"}]}}),h.register({\"yc-square\":{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({yc:{width:1536,height:1792,paths:[{d:\"M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 128v1536h-1536v-1536h1536z\"}]}}),h.register({yelp:{width:1536,height:1792,paths:[{d:\"M773 1319v127q-1 292-6 305-12 32-51 40-54 9-181.5-38t-162.5-89q-13-15-17-36-1-12 4-26 4-10 34-47t181-216q1 0 60-70 15-19 39.5-24.5t49.5 3.5q24 10 37.5 29t12.5 42zM624 1068q-3 55-52 70l-120 39q-275 88-292 88-35-2-54-36-12-25-17-75-8-76 1-166.5t30-124.5 56-32q13 0 202 77 71 29 115 47l84 34q23 9 35.5 30.5t11.5 48.5zM1450 1365q-7 54-91.5 161t-135.5 127q-37 14-63-7-14-10-184-287l-47-77q-14-21-11.5-46t19.5-46q35-43 83-26 1 1 119 40 203 66 242 79.5t47 20.5q28 22 22 61zM778 733q5 102-54 122-58 17-114-71l-378-598q-8-35 19-62 41-43 207.5-89.5t224.5-31.5q40 10 49 45 3 18 22 305.5t24 379.5zM1440 841q3 39-26 59-15 10-329 86-67 15-91 23l1-2q-23 6-46-4t-37-32q-30-47 0-87 1-1 75-102 125-171 150-204t34-39q28-19 65-2 48 23 123 133.5t81 167.5v3z\"}]}}),h.register({yen:{width:1027,height:1792,paths:[{d:\"M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z\"}]}}),h.register({yoast:{width:1664,height:1792,paths:[{d:\"M339 218h691l-26 72h-665q-110 0-188.5 79t-78.5 189v771q0 95 60.5 169.5t153.5 93.5q23 5 98 5v72h-45q-140 0-239.5-100t-99.5-240v-771q0-140 99.5-240t239.5-100zM1190 0h247l-482 1294q-23 61-40.5 103.5t-45 98-54 93.5-64.5 78.5-79.5 65-95.5 41-116 18.5v-195q163-26 220-182 20-52 20-105 0-54-20-106l-285-733h228l187 585zM1664 558v1111h-795q37-55 45-73h678v-1038q0-85-49.5-155t-129.5-99l25-67q101 34 163.5 123.5t62.5 197.5z\"}]}}),h.register({\"youtube-play\":{width:1792,height:1792,paths:[{d:\"M711 1128l484-250-484-253v503zM896 266q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v40 136q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-40-136q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z\"}]}}),h.register({\"youtube-square\":{width:1536,height:1792,paths:[{d:\"M919 1303v-157q0-50-29-50-17 0-33 16v224q16 16 33 16 29 0 29-49zM1103 1181h66v-34q0-51-33-51t-33 51v34zM532 915v70h-80v423h-74v-423h-78v-70h232zM733 1041v367h-67v-40q-39 45-76 45-33 0-42-28-6-17-6-54v-290h66v270q0 24 1 26 1 15 15 15 20 0 42-31v-280h67zM985 1152v146q0 52-7 73-12 42-53 42-35 0-68-41v36h-67v-493h67v161q32-40 68-40 41 0 53 42 7 21 7 74zM1236 1281v9q0 29-2 43-3 22-15 40-27 40-80 40-52 0-81-38-21-27-21-86v-129q0-59 20-86 29-38 80-38t78 38q21 29 21 86v76h-133v65q0 51 34 51 24 0 30-26 0-1 0.5-7t0.5-16.5v-21.5h68zM785 457v156q0 51-32 51t-32-51v-156q0-52 32-52t32 52zM1318 1170q0-177-19-260-10-44-43-73.5t-76-34.5q-136-15-412-15-275 0-411 15-44 5-76.5 34.5t-42.5 73.5q-20 87-20 260 0 176 20 260 10 43 42.5 73t75.5 35q137 15 412 15t412-15q43-5 75.5-35t42.5-73q20-84 20-260zM563 519l90-296h-75l-51 195-53-195h-78q7 23 23 69l24 69q35 103 46 158v201h74v-201zM852 600v-130q0-58-21-87-29-38-78-38-51 0-78 38-21 29-21 87v130q0 58 21 87 27 38 78 38 49 0 78-38 21-27 21-87zM1033 720h67v-370h-67v283q-22 31-42 31-15 0-16-16-1-2-1-26v-272h-67v293q0 37 6 55 11 27 43 27 36 0 77-45v40zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z\"}]}}),h.register({youtube:{width:1536,height:1792,paths:[{d:\"M971 1244v211q0 67-39 67-23 0-45-22v-301q22-22 45-22 39 0 39 67zM1309 1245v46h-90v-46q0-68 45-68t45 68zM343 1027h107v-94h-312v94h105v569h100v-569zM631 1596h89v-494h-89v378q-30 42-57 42-18 0-21-21-1-3-1-35v-364h-89v391q0 49 8 73 12 37 58 37 48 0 102-61v54zM1060 1448v-197q0-73-9-99-17-56-71-56-50 0-93 54v-217h-89v663h89v-48q45 55 93 55 54 0 71-55 9-27 9-100zM1398 1438v-13h-91q0 51-2 61-7 36-40 36-46 0-46-69v-87h179v-103q0-79-27-116-39-51-106-51-68 0-107 51-28 37-28 116v173q0 79 29 116 39 51 108 51 72 0 108-53 18-27 21-54 2-9 2-58zM790 525v-210q0-69-43-69t-43 69v210q0 70 43 70t43-70zM1509 1276q0 234-26 350-14 59-58 99t-102 46q-184 21-555 21t-555-21q-58-6-102.5-46t-57.5-99q-26-112-26-350 0-234 26-350 14-59 58-99t103-47q183-20 554-20t555 20q58 7 102.5 47t57.5 99q26 112 26 350zM511 0h102l-121 399v271h-100v-271q-14-74-61-212-37-103-65-187h106l71 263zM881 333v175q0 81-28 118-38 51-106 51-67 0-105-51-28-38-28-118v-175q0-80 28-117 38-51 105-51 68 0 106 51 28 37 28 117zM1216 171v499h-91v-55q-53 62-103 62-46 0-59-37-8-24-8-75v-394h91v367q0 33 1 35 3 22 21 22 27 0 57-43v-381h91z\"}]}}),h});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-awesome/dist/vue-awesome.js\n// module id = 3\n// module chunks = 1","/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.esm.js\n// module id = 74\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 75\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 76\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 77\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 78\n// module chunks = 1"],"sourceRoot":""}